<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Logging on hnakamur&#39;s blog at github</title>
    <link>/blog/tags/logging/</link>
    <description>Recent content in Logging on hnakamur&#39;s blog at github</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sun, 31 May 2015 02:30:02 +0900</lastBuildDate>
    <atom:link href="/blog/tags/logging/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>goでglogを使うときのメモ</title>
      <link>/blog/2015/05/31/how_to_use_glog/</link>
      <pubDate>Sun, 31 May 2015 02:30:02 +0900</pubDate>
      
      <guid>/blog/2015/05/31/how_to_use_glog/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://blog.satotaichi.info/logging-frameworks-for-go/&#34;&gt;go言語におけるロギングについて&lt;/a&gt;の記事と&lt;a href=&#34;http://godoc.org/github.com/golang/glog&#34;&gt;glog - GoDoc&lt;/a&gt;を読んで試してみました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;flag.Parse()&lt;/code&gt; を呼ぶ必要があり、最後に &lt;code&gt;glog.Flush()&lt;/code&gt; を呼ぶ必要があるので &lt;code&gt;main&lt;/code&gt; で &lt;code&gt;defer&lt;/code&gt; で書いておきます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
	&amp;quot;flag&amp;quot;

	&amp;quot;github.com/golang/glog&amp;quot;
)

func main() {
	flag.Parse()
	defer glog.Flush()

	if glog.V(0) {
		glog.Info(&amp;quot;Hello, glog&amp;quot;)
	}

	glog.V(0).Info(&amp;quot;exiting&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ログレベルは &lt;code&gt;-v&lt;/code&gt; オプションで指定できるのですがデフォルト値は0なので、デフォルトで出力したいログはレベル0で書くようにします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://godoc.org/github.com/golang/glog#Verbose&#34;&gt;Verbose&lt;/a&gt;の説明によると、上の2つの書き方では前者のほうが実行時負荷が安上がりとのことです。これはログレベルの設定で出力を抑止した時に、 &lt;code&gt;Info&lt;/code&gt; の引数の評価をしなくて済むからです。&lt;/p&gt;

&lt;p&gt;使い分けるのも面倒なので、常に前者を使うことにします。&lt;/p&gt;

&lt;p&gt;ログファイル名は非公開関数 &lt;a href=&#34;https://github.com/golang/glog/blob/44145f04b68cf362d9c4df2182967c2275eaefed/glog_file.go#L83-L97&#34;&gt;glog.logName()&lt;/a&gt; の形式になります。&lt;/p&gt;

&lt;p&gt;ログのディレクトリは &lt;code&gt;-log_dir&lt;/code&gt; オプションで指定可能ですが、デフォルトでは &lt;a href=&#34;http://golang.org/pkg/os/#TempDir&#34;&gt;os.TempDir()&lt;/a&gt; になっています。&lt;/p&gt;

&lt;p&gt;OS Xの場合は環境変数 &lt;code&gt;$TMPDIR&lt;/code&gt; になります。セキュリティ上 &lt;code&gt;/tmp&lt;/code&gt; ではなくランダムは文字列のディレクトリになっています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo $TMPDIR
/var/folders/9p/r7jylfyd163bszlxvp0wk36h0000gn/T/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ということで、ログファイルを見るときは &lt;code&gt;less $TMPDIR/${プログラム名}.INFO&lt;/code&gt; とすればOKです。&lt;code&gt;go build&lt;/code&gt; でビルドしてプログラムを実行した時はその名前ですが、 &lt;code&gt;go run main.go&lt;/code&gt; のときは &lt;code&gt;main&lt;/code&gt; になるようで &lt;code&gt;$TMPDIR/main.INFO&lt;/code&gt; というファイルが出来ていました。&lt;/p&gt;

&lt;p&gt;このファイルはプログラム実行のたびに上書きされます。過去のログを見たいときは &lt;code&gt;less $TMPDIR/${プログラム名}&lt;/code&gt; まで入力しTABでファイル名補完して見るようにします。&lt;/p&gt;

&lt;p&gt;上記のサンプルで出力されたログは以下のようになっていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Log file created at: 2015/05/31 02:22:07
Running on machine: sunshine5
Binary: Built with gc go1.4.2 for darwin/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0531 02:22:07.343002   54353 main.go:14] Hello, glog
I0531 02:22:07.343897   54353 main.go:18] exiting
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ログの行フォーマットは4行目に書いてありますが、 &lt;a href=&#34;https://github.com/golang/glog/blob/44145f04b68cf362d9c4df2182967c2275eaefed/glog.go#L518-L534&#34;&gt;glog.header()のコメント&lt;/a&gt; に詳細な説明があります。&lt;/p&gt;

&lt;p&gt;各行の日付には年がないのですが、行のフォーマットは固定なので諦めましょう。ログファイルサイズ削減のために年は付けないようにしているのでしょう。先頭行に作成日時が年つきで書いてあるのでそちらを見れば良いです。&lt;/p&gt;

&lt;p&gt;スレッドIDやログ出力したファイル名と行番号が出るのが便利です。&lt;/p&gt;

&lt;p&gt;ということで開発時のデバッグログとしてはglog便利そうです。逆にシステムの運用ログとしては別のログライブラリのようが良いかもしれません。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>