<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code-reading on hnakamur&#39;s blog</title>
    <link>https://hnakamur.github.io/blog/tags/code-reading/</link>
    <description>Recent content in code-reading on hnakamur&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 03 Mar 2017 23:45:00 +0900</lastBuildDate><atom:link href="https://hnakamur.github.io/blog/tags/code-reading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iptables-saveのコードリーディング</title>
      <link>https://hnakamur.github.io/blog/2017/03/03/iptables-save-code-reading/</link>
      <pubDate>Fri, 03 Mar 2017 23:45:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2017/03/03/iptables-save-code-reading/</guid>
      <description>はじめに iptables-restoreのコードリーディング の続きです。 iptables-save でルールを出力する部分のコードリーディングのメモです。 iptables_save_main 関数からの</description>
    </item>
    
    <item>
      <title>iptablesのコードリーディング</title>
      <link>https://hnakamur.github.io/blog/2017/02/26/iptables-code-reading/</link>
      <pubDate>Sun, 26 Feb 2017 11:40:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2017/02/26/iptables-code-reading/</guid>
      <description>はじめに iptables-restoreのコードリーディング の続きです。 サーバ上の iptables の現状の設定が、自分が意図した設定と一致しているか確認し</description>
    </item>
    
    <item>
      <title>iptables-restoreのコードリーディング</title>
      <link>https://hnakamur.github.io/blog/2017/02/24/iptables-restore-code-reading/</link>
      <pubDate>Fri, 24 Feb 2017 00:25:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2017/02/24/iptables-restore-code-reading/</guid>
      <description>はじめに iptables-restore のコードリーディングをしてみました。 対象バージョンは CentOS 7 のパッケージに合わせて 1.4.21 です。 $ rpm -qf `which iptables-restore` iptables-1.4.21-17.el7.x86_64 プロジェクトページは netfilter/iptables project homepage - The netfilter.org</description>
    </item>
    
    <item>
      <title>procpsのpgrepのコードリーディング</title>
      <link>https://hnakamur.github.io/blog/2017/02/23/pgrep-in-procps-code-reading/</link>
      <pubDate>Thu, 23 Feb 2017 18:30:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2017/02/23/pgrep-in-procps-code-reading/</guid>
      <description>はじめに procps-ngのpgrepのコードリーディング に続いて CentOS 6 の pgrep についてもコードリーディングしてみました。 pgrep を含むパッケージは procps で</description>
    </item>
    
    <item>
      <title>procps-ngのpgrepのコードリーディング</title>
      <link>https://hnakamur.github.io/blog/2017/02/23/pgrep-in-procps-ng-code-reading/</link>
      <pubDate>Thu, 23 Feb 2017 00:20:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2017/02/23/pgrep-in-procps-ng-code-reading/</guid>
      <description>はじめに CentOS 7の環境でApache Traffic Server 7.0.0のサービスを起動すると traffic_cop, traffic_manager, traffic_server という3つのプロセスが立ち上がります。 [root@ats7 ~]# ps auxww | grep traffic root 20837 0.0 0.0 143076 6276 ?</description>
    </item>
    
    <item>
      <title>monitのhttpのタイムアウトのコードリーディング</title>
      <link>https://hnakamur.github.io/blog/2017/02/21/monit-http-timeout-code-reading/</link>
      <pubDate>Tue, 21 Feb 2017 11:10:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2017/02/21/monit-http-timeout-code-reading/</guid>
      <description>はじめに monitのイベントループのコードリーディング からの続きです。 socket_create関数からの流れ monitのif failed urlのコー</description>
    </item>
    
    <item>
      <title>monitのイベントループのコードリーディング</title>
      <link>https://hnakamur.github.io/blog/2017/02/20/monit-event-loop-code-reading/</link>
      <pubDate>Mon, 20 Feb 2017 16:46:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2017/02/20/monit-event-loop-code-reading/</guid>
      <description>はじめに monitのif failed urlのコードリーディング からの続きです。 Event_post関数の実装 src/event.c#L123-L222 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142</description>
    </item>
    
    <item>
      <title>monitのif failed urlのコードリーディング</title>
      <link>https://hnakamur.github.io/blog/2017/02/20/monit-if-failed-url-code-reading/</link>
      <pubDate>Mon, 20 Feb 2017 11:14:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2017/02/20/monit-if-failed-url-code-reading/</guid>
      <description>はじめに 以下のページで紹介されているような if failed url ... の挙動をコードリーディングしてみたメモです。 HOWTO use monit to monitor sites and alert users · fak3r Monit でお手軽に外部のサーバ</description>
    </item>
    
    <item>
      <title>Apache Traffic Server のコードリーディング</title>
      <link>https://hnakamur.github.io/blog/2016/02/11/apache-traffic-server-code-reading/</link>
      <pubDate>Thu, 11 Feb 2016 23:11:50 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2016/02/11/apache-traffic-server-code-reading/</guid>
      <description>Apache Traffic Server のコードリーディングを少しやってみたので、将来の自分に向けてメモ。 コードリーディングの方法についての参考文献 WEB+DB PRESS Vol.69｜技術評論</description>
    </item>
    
  </channel>
</rss>
