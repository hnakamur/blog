<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Centos on hnakamur&#39;s blog</title>
    <link>https://hnakamur.github.io/blog/tags/centos/</link>
    <description>Recent content in Centos on hnakamur&#39;s blog</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 25 Feb 2017 00:45:00 +0900</lastBuildDate>
    <atom:link href="https://hnakamur.github.io/blog/tags/centos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CentOS 7のepelでインストールしたpython3.4でvenvを使うとエラーになる件の回避策</title>
      <link>https://hnakamur.github.io/blog/2017/02/25/workaround-for-epel-python3.4-venv-on-centos7/</link>
      <pubDate>Sat, 25 Feb 2017 00:45:00 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2017/02/25/workaround-for-epel-python3.4-venv-on-centos7/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;p&gt;CentOS 7のpythonパッケージは2.7.xなので、3系を使うには別途インストールする必要があります。&#xA;EPELの &lt;a href=&#34;https://f-o.org.uk/2016/python3-centos-and-pip.html&#34;&gt;&lt;code&gt;python34`` パッケージを使うと ``python3 -m venv venv`` でエラーになるという問題が起きたのですが、 &lt;/code&gt;Floating Octothorpe: Python3, CentOS and pip&lt;/a&gt; の記事で解決したのでメモです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXD で privileged な CentOS 7コンテナを作る</title>
      <link>https://hnakamur.github.io/blog/2016/10/22/lxd-privileged-centos-container/</link>
      <pubDate>Sat, 22 Oct 2016 18:54:49 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/10/22/lxd-privileged-centos-container/</guid>
      <description>&lt;p&gt;小ネタのメモです。&lt;/p&gt;&#xA;&lt;p&gt;先日 LXD 2.0.5 で CentOS 7 コンテナを起動して &lt;code&gt;journalctl -xe&lt;/code&gt; を実行すると以下のようなエラーが出ていました。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Oct 22 09:53:58 centos systemd-sysctl[36]: Failed to write &amp;#39;16&amp;#39; to &amp;#39;/proc/sys/kernel/sysrq&amp;#39;: Permission denied&#xA;Oct 22 09:53:58 centos systemd-sysctl[36]: Failed to write &amp;#39;1&amp;#39; to &amp;#39;/proc/sys/fs/protected_hardlinks&amp;#39;: Permission denied&#xA;Oct 22 09:53:58 centos systemd-sysctl[36]: Failed to write &amp;#39;1&amp;#39; to &amp;#39;/proc/sys/kernel/core_uses_pid&amp;#39;: Permission denied&#xA;Oct 22 09:53:58 centos systemd-sysctl[36]: Failed to write &amp;#39;1&amp;#39; to &amp;#39;/proc/sys/fs/protected_symlinks&amp;#39;: Permission denied&#xA;Oct 22 09:53:58 centos systemd-remount-fs[35]: /bin/mount for / exited with exit status 32.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;コンテナ作成時に以下のように config で &lt;code&gt;security.privileged&lt;/code&gt; を true に設定しておけば出なくなりました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CentOS 7用にPython2最新版のrpmを作ってみた</title>
      <link>https://hnakamur.github.io/blog/2015/12/19/build_latest_python2_rpm_for_centos7/</link>
      <pubDate>Sat, 19 Dec 2015 11:51:30 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2015/12/19/build_latest_python2_rpm_for_centos7/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2015/12/16/calling_copr_api_with_curl/&#34;&gt;coprのAPIをcurlで呼び出す · hnakamur&amp;rsquo;s blog at github&lt;/a&gt;にも書きましたが、CentOS 7のPythonは古くてhttps通信時にInsecurePlatformWarningが出てしまいます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mockコマンドでrpmをビルドする</title>
      <link>https://hnakamur.github.io/blog/2015/12/05/build_rpm_with_mock/</link>
      <pubDate>Sat, 05 Dec 2015 22:10:26 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2015/12/05/build_rpm_with_mock/</guid>
      <description>&lt;h2 id=&#34;2015-12-15-追記&#34;&gt;2015-12-15 追記&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2015/12/15/using_mock_and_copr_to_build_nginx_rpm_on_docker/&#34;&gt;nginxのカスタムrpmをmockでビルドできることを確認してからcoprでビルド・配布する環境を作りました · hnakamur&amp;rsquo;s blog at github&lt;/a&gt;という記事を書きましたのでそちらもご参照ください。&lt;/p&gt;&#xA;&lt;h2 id=&#34;以下元記事です&#34;&gt;以下元記事です&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2015/11/26/use_travis_and_copr_to_build_and_host_rpm/&#34;&gt;Travis CIとcopr.fedoraproject.orgを使ってrpmをビルド・配布するのを試してみた · hnakamur&amp;rsquo;s blog at github&lt;/a&gt;でrpmを外部のサーバでビルドできるようになりましたが、試行錯誤中はこの手順だと時間がかかりますので、手元の環境でビルドしたいところです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Travis CIとcopr.fedoraproject.orgを使ってrpmをビルド・配布するのを試してみた</title>
      <link>https://hnakamur.github.io/blog/2015/11/26/use_travis_and_copr_to_build_and_host_rpm/</link>
      <pubDate>Thu, 26 Nov 2015 22:33:57 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2015/11/26/use_travis_and_copr_to_build_and_host_rpm/</guid>
      <description>&lt;h2 id=&#34;2015-12-15-追記&#34;&gt;2015-12-15 追記&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2015/12/15/using_mock_and_copr_to_build_nginx_rpm_on_docker/&#34;&gt;nginxのカスタムrpmをmockでビルドできることを確認してからcoprでビルド・配布する環境を作りました · hnakamur&amp;rsquo;s blog at github&lt;/a&gt;という記事を書きましたのでそちらもご参照ください。&lt;/p&gt;&#xA;&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;p&gt;CentOSを使っていると、パッケージのバージョンが古いのでspecファイルを改変してrpmをビルドすることがちょくちょくあります。&#xA;一度ビルドした後は、自作rpmのレポジトリサーバを立ててそこに置いておくのが本来は良いんだろうなと思います。&#xA;ですが、サーバの運用の手間を考えると面倒だなと思って、AnsibleやDockerでのプロビジョニング中にビルドするようにしていました。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
