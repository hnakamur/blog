<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ubuntu on hnakamur&#39;s blog at github</title>
    <link>/blog/tags/ubuntu/</link>
    <description>Recent content in Ubuntu on hnakamur&#39;s blog at github</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Mon, 02 May 2016 12:28:08 +0900</lastBuildDate>
    <atom:link href="/blog/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ubuntuでホームディレクトリを暗号化するのを止めた</title>
      <link>/blog/2016/05/02/uninstall-encrypted-home-on-ubuntu/</link>
      <pubDate>Mon, 02 May 2016 12:28:08 +0900</pubDate>
      
      <guid>/blog/2016/05/02/uninstall-encrypted-home-on-ubuntu/</guid>
      <description>

&lt;h2 id=&#34;背景:810b47160307c060d35586a9f59d9467&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;/blog/blog/2016/05/01/install_ubuntu_xenial_with_pxe_boot/&#34;&gt;MacをPXEサーバにしてExpress5800/S70タイプRBにUbuntu16.04をインストールしてみた · hnakamur&amp;rsquo;s blog at github&lt;/a&gt;でホームディレクトリを暗号化してみたのですが、OS起動後に鍵認証でsshしようとすると鍵は正しく指定しているのに &lt;code&gt;Permission denied (publickey).&lt;/code&gt; と拒否されてしまうケースがありました。コンソールで一度ログインするとsshでもログイン出来るようになります。&lt;/p&gt;

&lt;p&gt;これはホームディレクトリを暗号化した影響で &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; が読めない状態になっているようです。&lt;/p&gt;

&lt;h2 id=&#34;authorized-keys-をホームディレクトリの外に置く手もある:810b47160307c060d35586a9f59d9467&#34;&gt;authorized_keys をホームディレクトリの外に置く手もある&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://askubuntu.com/questions/254776/ubuntu-server-ssh-after-reboot-permission-denied-publickey/254787#254787&#34;&gt;Ubuntu server ssh after reboot: Permission denied (publickey) - Ask Ubuntu&lt;/a&gt;によると &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; で &lt;code&gt;AuthorizedKeysFile&lt;/code&gt; の設定を変える手もあるようです。&lt;/p&gt;

&lt;p&gt;変更前の状態は&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#AuthorizedKeysFile     %h/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とデフォルト値がコメントアウトされて書かれていました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://manpages.ubuntu.com/manpages/precise/en/man5/sshd_config.5.html&#34;&gt;Ubuntu Manpage: sshd_config — OpenSSH SSH daemon configuration file&lt;/a&gt;によると &lt;code&gt;%h&lt;/code&gt; はホームディレクトリに展開されます。ユーザ名に展開される &lt;code&gt;%u&lt;/code&gt; というのもあるそうです。&lt;/p&gt;

&lt;p&gt;ここでは &lt;code&gt;/etc/%u/.ssh/authorized_keys&lt;/code&gt; に変更するのを試してみました。
先に自分のユーザID &lt;code&gt;hnakamur&lt;/code&gt; 用のディレクトリを作って所有者を変更します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir -p /etc/hnakamur/.ssh
sudo chmod -R 700 /etc/hnakamur
sudo chown -R hnakamur: /etc/hnakamur
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;cp ~/.ssh/authorized_keys /etc/hnakamur/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;その後 &lt;code&gt;sudo vi /etc/ssh/sshd_config&lt;/code&gt; を実行し以下の行を追加します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AuthorizedKeysFile /etc/%u/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでOSを再起動後、コンソールでログインしない状態でもsshで鍵認証でログンできることを確認しました。&lt;/p&gt;

&lt;p&gt;ただし、ログインは出来ましたが、暗号化の解除は手動で行う必要がありました。作ったはずの &lt;code&gt;~/.bash_profile&lt;/code&gt; が無いので気付きました。ホームディレクトリの中身は以下のようになっていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hnakamur@express:~$ ls -la
合計 8
dr-x------ 2 hnakamur hnakamur 4096  5月  2 01:31 .
drwxr-xr-x 4 root     root     4096  5月  2 01:31 ..
lrwxrwxrwx 1 hnakamur hnakamur   33  5月  2 01:31 .Private -&amp;gt; /home/.ecryptfs/hnakamur/.Private
lrwxrwxrwx 1 hnakamur hnakamur   34  5月  2 01:31 .ecryptfs -&amp;gt; /home/.ecryptfs/hnakamur/.ecryptfs
lrwxrwxrwx 1 hnakamur hnakamur   56  5月  2 01:31 Access-Your-Private-Data.desktop -&amp;gt; /usr/share/ecryptfs-utils/ecryptfs-mount-private.desktop
lrwxrwxrwx 1 hnakamur hnakamur   52  5月  2 01:31 README.txt -&amp;gt; /usr/share/ecryptfs-utils/ecryptfs-mount-private.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;README.txt&lt;/code&gt; を見てみました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hnakamur@express:~$ cat README.txt
THIS DIRECTORY HAS BEEN UNMOUNTED TO PROTECT YOUR DATA.

From the graphical desktop, click on:
 &amp;quot;Access Your Private Data&amp;quot;

or

From the command line, run:
 ecryptfs-mount-private
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;ecryptfs-mount-private&lt;/code&gt; を実行してログインパスワードを入力し &lt;code&gt;cd /home/hnakamur&lt;/code&gt; でホームディレクトリに入り直すと、復号化された内容が見えるようになりました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hnakamur@express:~$ ecryptfs-mount-private
Enter your login passphrase:
Inserted auth tok with sig [d094f2376006dce9] into the user session keyring

INFO: Your private directory has been mounted.
INFO: To see this change in your current shell:
  cd /home/hnakamur

hnakamur@express:~$ ls -la
合計 8
dr-x------ 2 hnakamur hnakamur 4096  5月  2 01:31 .
drwxr-xr-x 4 root     root     4096  5月  2 01:31 ..
lrwxrwxrwx 1 hnakamur hnakamur   33  5月  2 01:31 .Private -&amp;gt; /home/.ecryptfs/hnakamur/.Private
lrwxrwxrwx 1 hnakamur hnakamur   34  5月  2 01:31 .ecryptfs -&amp;gt; /home/.ecryptfs/hnakamur/.ecryptfs
lrwxrwxrwx 1 hnakamur hnakamur   56  5月  2 01:31 Access-Your-Private-Data.desktop -&amp;gt; /usr/share/ecryptfs-utils/ecryptfs-mount-private.desktop
lrwxrwxrwx 1 hnakamur hnakamur   52  5月  2 01:31 README.txt -&amp;gt; /usr/share/ecryptfs-utils/ecryptfs-mount-private.txt
hnakamur@express:~$ cd /home/hnakamur
hnakamur@express:~$ ls -la
合計 128
drwx------ 6 hnakamur hnakamur 4096  5月  2 12:43 .
drwxr-xr-x 4 root     root     4096  5月  2 01:31 ..
lrwxrwxrwx 1 hnakamur hnakamur   33  5月  2 01:31 .Private -&amp;gt; /home/.ecryptfs/hnakamur/.Private
-rw------- 1 hnakamur hnakamur 1908  5月  2 12:43 .bash_history
-rw-r--r-- 1 hnakamur hnakamur  220  5月  2 01:31 .bash_logout
-rw-r--r-- 1 hnakamur hnakamur  100  5月  2 08:50 .bash_profile
-rw-r--r-- 1 hnakamur hnakamur 3771  5月  2 01:31 .bashrc
drwx------ 2 hnakamur hnakamur 4096  5月  2 01:36 .cache
lrwxrwxrwx 1 hnakamur hnakamur   34  5月  2 01:31 .ecryptfs -&amp;gt; /home/.ecryptfs/hnakamur/.ecryptfs
-rw------- 1 hnakamur hnakamur   41  5月  2 09:00 .lesshst
-rw-r--r-- 1 hnakamur hnakamur  675  5月  2 01:31 .profile
drwx------ 2 hnakamur hnakamur 4096  5月  2 01:38 .ssh
-rw-r--r-- 1 hnakamur hnakamur    0  5月  2 01:38 .sudo_as_admin_successful
-rw------- 1 hnakamur hnakamur 6841  5月  2 12:43 .viminfo
drwxr-xr-x 2 hnakamur hnakamur 4096  5月  2 03:13 docs
drwxr-xr-x 5 hnakamur hnakamur 4096  5月  2 08:47 gocode
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;lvm暗号化を使っているのでホームディレクトリの暗号化は止めることにした:810b47160307c060d35586a9f59d9467&#34;&gt;LVM暗号化を使っているのでホームディレクトリの暗号化は止めることにした&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://ubuntuforums.org/showthread.php?t=1335046&#34;&gt;[all variants] Encrypted LVM vs Encrypted Home&lt;/a&gt;を見ると、ホームディレクトリを暗号化してもスワップや &lt;code&gt;/tmp&lt;/code&gt; などが暗号化されていないので情報漏えいのリスクがあるので、ホームディレクトリの暗号化よりもLVMの暗号化のほうが良いとのことです。&lt;/p&gt;

&lt;p&gt;そもそも自宅サーバでユーザは私だけということもあり、ホームディレクトリの暗号化は止めることにしました。&lt;/p&gt;

&lt;p&gt;以下のページを参考にしつつやってみました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.howtogeek.com/116179/how-to-disable-home-folder-encryption-after-installing-ubuntu/&#34;&gt;How to Disable Home Folder Encryption After Installing Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.ubuntu.com/community/EncryptedHome&#34;&gt;EncryptedHome - Community Help Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;バックアップ用のディレクトリを作って、所有者を変えます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /home/hnakamur.backup
sudo chown hnakamur:hnakamur /home/hnakamur.backup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;tar&lt;/code&gt; でバックアップして &lt;code&gt;.encryptfs&lt;/code&gt; ディレクトリは消します。シンボリックリンクもそのままコピーしたいので &lt;code&gt;tar&lt;/code&gt; を使っています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(cd /home/hnakamur; tar cf - .) | (cd /home/hnakamur.backup; tar xf -)
rm -rf /home/hnakamur.backup/.ecryptfs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ホームディレクトリを暗号化するためのパッケージをアンインストールしました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove ecryptfs-utils libecryptfs0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記は手順ミスです。先に別の管理者ユーザを作って元のユーザ &lt;code&gt;hnakamur&lt;/code&gt; はログアウトし、別の管理ユーザで作業すべきでした。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;df -h&lt;/code&gt; で確認すると &lt;code&gt;hnakamur&lt;/code&gt; ユーザのホームディレクトリがマウントされたままになっていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@express:~# df -h
Filesystem                    Size  Used Avail Use% Mounted on
udev                          7.8G     0  7.8G   0% /dev
tmpfs                         1.6G  8.8M  1.6G   1% /run
/dev/mapper/express--vg-root  131G  2.1G  122G   2% /
tmpfs                         7.8G  4.0K  7.8G   1% /dev/shm
tmpfs                         5.0M     0  5.0M   0% /run/lock
tmpfs                         7.8G     0  7.8G   0% /sys/fs/cgroup
/dev/sdc1                     472M   55M  393M  13% /boot
tmpfs                         100K     0  100K   0% /run/lxcfs/controllers
/home/hnakamur/.Private       131G  2.1G  122G   2% /home/hnakamur
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この後、別のユーザを作りました。セカンダリグループに &lt;code&gt;sudo&lt;/code&gt; を指定して &lt;code&gt;sudo&lt;/code&gt; で &lt;code&gt;root&lt;/code&gt; になれるようにします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo useradd -m -G sudo -s /bin/bash hnakamur2
sudo mkdir -p /etc/hnakamur2/.ssh
sudo chmod -R 700 /etc/hnakamur2
sudo cp /etc/hnakamur/.ssh/authorized_keys /etc/hnakamur2/.ssh/
sudo chown -R hnakamur2: /etc/hnakamur2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;パスワードが空だとsshログイン出来ないので、パスワードを設定します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@express:~# passwd hnakamur2
新しい UNIX パスワードを入力してください:
新しい UNIX パスワードを再入力してください:
passwd: パスワードは正しく更新されました
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで &lt;code&gt;hnakamur2&lt;/code&gt; ユーザの作成が終わったので、Macからsshで hnakamur2 ユーザにログインします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh hnakamur2@express
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;root&lt;/code&gt; ユーザになって作業します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo -i
umount /home/hnakamur
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;df -h&lt;/code&gt; を実行してマウントが解除されたことを確認しました。
&lt;code&gt;/home/hnakamur&lt;/code&gt; の中身を確認すると以下のようになっていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@express:~# ll -a /home/hnakamur
合計 8
dr-x------ 2 hnakamur hnakamur 4096  5月  2 01:31 ./
drwxr-xr-x 7 root     root     4096  5月  2 14:42 ../
lrwxrwxrwx 1 hnakamur hnakamur   33  5月  2 01:31 .Private -&amp;gt; /home/.ecryptfs/hnakamur/.Private/
lrwxrwxrwx 1 hnakamur hnakamur   34  5月  2 01:31 .ecryptfs -&amp;gt; /home/.ecryptfs/hnakamur/.ecryptfs/
lrwxrwxrwx 1 hnakamur hnakamur   56  5月  2 01:31 Access-Your-Private-Data.desktop -&amp;gt; /usr/share/ecryptfs-utils/ecryptfs-mount-private.desktop
lrwxrwxrwx 1 hnakamur hnakamur   52  5月  2 01:31 README.txt -&amp;gt; /usr/share/ecryptfs-utils/ecryptfs-mount-private.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;hnakamur&lt;/code&gt; のホームディレクトリを消して、バックアップした内容に戻します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm -rf /home/hnakamur
mv /home/hnakamur.backup/ /home/hnakamur
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;戻した中身を確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@express:~# ll -a /home/hnakamur/
合計 56
drwx------ 6 hnakamur hnakamur 4096  5月  2 13:04 ./
drwxr-xr-x 6 root     root     4096  5月  2 14:53 ../
lrwxrwxrwx 1 hnakamur hnakamur   33  5月  2 01:31 .Private -&amp;gt; /home/.ecryptfs/hnakamur/.Private/
-rw------- 1 hnakamur hnakamur 1908  5月  2 12:43 .bash_history
-rw-r--r-- 1 hnakamur hnakamur  220  5月  2 01:31 .bash_logout
-rw-r--r-- 1 hnakamur hnakamur  100  5月  2 08:50 .bash_profile
-rw-r--r-- 1 hnakamur hnakamur 3771  5月  2 01:31 .bashrc
drwx------ 2 hnakamur hnakamur 4096  5月  2 01:36 .cache/
-rw------- 1 hnakamur hnakamur   41  5月  2 09:00 .lesshst
-rw-r--r-- 1 hnakamur hnakamur  675  5月  2 01:31 .profile
drwx------ 2 hnakamur hnakamur 4096  5月  2 01:38 .ssh/
-rw-r--r-- 1 hnakamur hnakamur    0  5月  2 01:38 .sudo_as_admin_successful
-rw------- 1 hnakamur hnakamur 6841  5月  2 12:43 .viminfo
drwxr-xr-x 2 hnakamur hnakamur 4096  5月  2 03:13 docs/
drwxr-xr-x 5 hnakamur hnakamur 4096  5月  2 08:47 gocode/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;.Private&lt;/code&gt; も不要なので消します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm /home/hnakamur/.Private
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで Mac から元のユーザ &lt;code&gt;hnakamur&lt;/code&gt; でsshログイン可能になります。
念のため &lt;code&gt;hnakamur2&lt;/code&gt; はログインしたままにしておいて、ターミナルの別端末でログインしました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh hnakamur@express
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; の &lt;code&gt;AuthorizedKeysFile&lt;/code&gt; の設定も元に戻すことにします。
&lt;code&gt;sudo vi /etc/ssh/sshd_config&lt;/code&gt; を実行し以下の行を削除します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AuthorizedKeysFile /etc/%u/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下のコマンドで &lt;code&gt;sshd&lt;/code&gt; を再起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl restart sshd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;/etc/hnakamur&lt;/code&gt; 以下に置いた &lt;code&gt;hnakamur&lt;/code&gt; ユーザの鍵もディレクトリごと消します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo rm -r /etc/hnakamur
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mac のターミナルの別端末から &lt;code&gt;hnakamur&lt;/code&gt; ユーザでsshログインできることと、sudoでrootになれることを確認しました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hnakamur2&lt;/code&gt; ユーザのほうはログアウトして、 &lt;code&gt;hnakamur&lt;/code&gt; ユーザでログインした端末で &lt;code&gt;hnakamur2&lt;/code&gt; ユーザを削除します。メールスプールのディレクトリが無いというメッセージが出ますが問題ありません。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@express:~# sudo userdel -r hnakamur2
userdel: hnakamur2 のメールスプール (/var/mail/hnakamur2) がありません
root@express:~# echo $?
0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;/etc/hnakamur2&lt;/code&gt; 以下に置いた &lt;code&gt;hnakamur2&lt;/code&gt; ユーザの鍵もディレクトリごと消します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo rm -r /etc/hnakamur2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;その後&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo shutdown -r now
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で再起動して、コンソールでLVM暗号化のパスフレーズを入力して起動し、コンソールでログインすることなしに、ssh鍵認証でログインできることを確認しました。&lt;/p&gt;

&lt;p&gt;余談ですが、ちょっと不思議なのは、今まで構築したLinux環境ではsshで繋いで &lt;code&gt;sudo shutdown -h now&lt;/code&gt; や &lt;code&gt;sudo shutdown -r now&lt;/code&gt; を実行すると接続が切れていたのが、今回の環境ではプロンプトに戻らないまま残ってしまうということです。Ctrl-Cを入力すると &lt;code&gt;Host is down&lt;/code&gt; と表示されていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@express:~# shutdown -r now
packet_write_poll: Connection to 192.168.0.201: Host is down
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;まとめ:810b47160307c060d35586a9f59d9467&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;今回のサーバのユーザは自分1人なのでホームディレクトリの暗号化は不要と判断し、解除しました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 16.04でNo-IPのダイナミックDNSサービスを使ってみた</title>
      <link>/blog/2016/05/02/use-no-ip-dynamic-dns-on-ubuntu-16.04/</link>
      <pubDate>Mon, 02 May 2016 09:39:31 +0900</pubDate>
      
      <guid>/blog/2016/05/02/use-no-ip-dynamic-dns-on-ubuntu-16.04/</guid>
      <description>

&lt;h2 id=&#34;背景:135c9c6bc59340025271c600f28573f2&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;/blog/blog/2016/05/01/install_ubuntu_xenial_with_pxe_boot/&#34;&gt;MacをPXEサーバにしてExpress5800/S70タイプRBにUbuntu16.04をインストールしてみた · hnakamur&amp;rsquo;s blog at github&lt;/a&gt;で自宅サーバを起動したのですが、固定グローバルIPアドレスは持っていないので、ダイナミックDNS (DDNS) サービスを使うことにしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://viral-community.com/other-it/ddns-praise-service-2065/&#34;&gt;DDNSの無料サービスでオススメな３つの「ieServer」「mydns」「No-IP」の特徴と利用手順をまとめてみた&lt;/a&gt;を参考に「No-IP」を使ってみました。&lt;/p&gt;

&lt;h2 id=&#34;アカウント登録:135c9c6bc59340025271c600f28573f2&#34;&gt;アカウント登録&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.noip.com/&#34;&gt;https://www.noip.com/&lt;/a&gt; でメールアドレス、ユーザ名、パスワードを入力してサインアップし、確認のHTMLメールが届いたら[Activate Account]ボタンをクリックすればOKです。&lt;/p&gt;

&lt;h2 id=&#34;ホストの登録:135c9c6bc59340025271c600f28573f2&#34;&gt;ホストの登録&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.noip.com/&#34;&gt;https://www.noip.com/&lt;/a&gt; の右上の[Sign In]を押し、ユーザ名かメールアドレスとパスワードを入力してサインインします。サインイン後は &lt;a href=&#34;https://my.noip.com/&#34;&gt;https://my.noip.com/&lt;/a&gt; に遷移します。&lt;/p&gt;

&lt;p&gt;ホストの登録は新サイトの画面左の[Dashboard]を選んで、画面中央の[Quick Add]で[Hostname]を希望のホスト名を入力、[Doman]で使いたいドメインを選択して[Add Hostname]ボタンを押せばOKです。&lt;/p&gt;

&lt;p&gt;あるいは画面左の[Dynamic DNS]の[Hostnames]メニューを選び、[Add Hostname]ボタンを押す方法でもOKです。この場合は[Add Hostname]というタイトルのポップアップが開きます。&lt;/p&gt;

&lt;p&gt;[Hostname]に希望のホスト名を入力し、[Domain]は使いたいドメインを選びます。
[Record Type]はAのままでOKで、[IPv4 Address]にも自動で現在のグローバルIPアドレスが入力されているのでそのままでOKです。[Add Hostname]ボタンを押すと追加完了です。&lt;/p&gt;

&lt;p&gt;なお、試していませんが、[Record Type]の[More Records]ボタンを押すと、以下の4つのラジオボタンが表示されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DNS Host (A)&lt;/li&gt;
&lt;li&gt;DNS Alias (CNAME)&lt;/li&gt;
&lt;li&gt;Web Redirect&lt;/li&gt;
&lt;li&gt;AAAA (IPv6)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、その下には &amp;ldquo;Manage your Round Robin, TXT, SRV and DKIM records.&amp;rdquo; という文が書かれており、 &amp;ldquo;Manage&amp;rdquo; の部分がリンクになっていました。これを押すと &lt;a href=&#34;https://www.noip.com/members/dns/&#34;&gt;https://www.noip.com/members/dns/&lt;/a&gt; のManage Hostsページに遷移しました。 no-ip は管理画面をリニューアル中で、こちらは旧画面のようです。 &lt;a href=&#34;https://my.noip.com/#!/&#34;&gt;https://my.noip.com/#!/&lt;/a&gt; の画面上部にある [Use Old Site] というリンクでも旧サイトのManage Hostsページが開きました。&lt;/p&gt;

&lt;p&gt;新サイトの[Dynamic DNS]の[Hostnames]メニューで画面右に &amp;ldquo;Free Hostnames expire every 30 days. Enhanced Hostnames never expire. Upgrade to Enhanced&amp;rdquo; と書いてあるのですが、 &lt;a href=&#34;http://www.noip.com/support/faq/frequently-asked-questions/why-did-my-free-hostname-expire-or-get-deleted/&#34;&gt;Why did my free hostname expire or get deleted? | Support | No-IP&lt;/a&gt; の説明によれば無料サービスでも30日毎に更新していれば消えないようです。&lt;/p&gt;

&lt;h2 id=&#34;ipアドレス自動更新用のクライアントnoip2をセットアップ:135c9c6bc59340025271c600f28573f2&#34;&gt;IPアドレス自動更新用のクライアントnoip2をセットアップ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.noip.com/&#34;&gt;http://www.noip.com/&lt;/a&gt; の画面上部の [Download] リンクをクリックすると、アクセスしているブラウザからOSを自動判定して、そのOS用のクライアントのダウンロードページが開きます。私の場合は Dynamic DNS Update Client (DUC) for Mac のページが開きました。&lt;/p&gt;

&lt;p&gt;下の方にスクロールして [Other Downloads] の [Linux] をクリックして &lt;a href=&#34;https://www.noip.com/download?page=linux&#34;&gt;Dynamic DNS Update Client (DUC) for Linux - No-IP&lt;/a&gt; を開きます。&lt;/p&gt;

&lt;p&gt;Installation のセクションに &amp;ldquo;UBUNTU USERS: You may install this with the apt-get command, see this guide&amp;rdquo; という文があり guide のリンクをクリックすると &lt;a href=&#34;http://www.noip.com/support/knowledgebase/installing-the-linux-dynamic-update-client-on-ubuntu/&#34;&gt;How to Install the Linux Dynamic Update Client on Ubuntu&lt;/a&gt; に遷移しました。このページの手順に従ってセットアップすればOKでした。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo -s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でパスワードを入力してrootになって以下のコマンドを実行します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/local/src
wget http://www.no-ip.com/client/linux/noip-duc-linux.tar.gz
tar xf noip-duc-linux.tar.gz
cd noip-2.1.9-1/
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;noip-2.1.9-1 のディレクトリ内を見るとソースファイルは noip2.c の1つでした。中を見てみるとライセンスはGPLv2 or laterです。ざっと見た感じでは不正な通信はしてなさそうでした。&lt;/p&gt;

&lt;p&gt;インストール後以下のコマンドを実行して設定ファイルを作成します。以下のコマンドは全てrootで実行しています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/bin/noip2 -C
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;プロンプトが表示されたらNo-IPのユーザ名、パスワードと登録したホスト名を入力します。すると /usr/local/etc/no-ip2.conf に設定ファイルが作られます。viで中を見てみると一部テキスト、一部バイナリのファイルでした。&lt;/p&gt;

&lt;p&gt;あとは &lt;code&gt;/usr/local/bin/noip2&lt;/code&gt; でデーモンが起動するのですが、systemdのサービスとして登録したいので、unitファイルを作りました。&lt;/p&gt;

&lt;p&gt;ソースのディレクトリにdebian, gentoo, redhat用のinit.d用のスクリプトとmac用の自動起動スクリプトがありました。 &lt;code&gt;redhat.noip.sh&lt;/code&gt; を見ると、起動は &lt;code&gt;/usr/local/bin/noip2&lt;/code&gt; で、終了は &lt;code&gt;killproc noip2 -TERM&lt;/code&gt; で行っていました。&lt;/p&gt;

&lt;p&gt;Ubuntuで試したら &lt;code&gt;killproc&lt;/code&gt; は無かったので &lt;code&gt;killall&lt;/code&gt; で代用しました。&lt;/p&gt;

&lt;p&gt;以下のコマンドでunitファイルを作成します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;lt;&amp;lt;&#39;EOF&#39; &amp;gt; /etc/systemd/system/noip2.service
[Unit]
Description=No-IP.com DDNS client
After=network.target auditd.service

[Service]
ExecStart=/usr/local/bin/noip2
ExecStop=/usr/bin/killall -TERM /usr/local/bin/noip2
Restart=on-failure
Type=forking

[Install]
WantedBy=multi-user.target
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作成したファイルをsystemdに読み込ませます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下のコマンドでサービスの起動とOS起動時の自動起動設定を行います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl start noip2
systemctl enable noip2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ちなみに、 &lt;code&gt;mac.osx.startup&lt;/code&gt; では &lt;code&gt;noip2 -S&lt;/code&gt; の出力からpidを取得して &lt;code&gt;noip -K $pid&lt;/code&gt; で停止していました。こんな感じです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    for i in `noip2 -S 2&amp;gt;&amp;amp;1 | grep Process | awk &#39;{print $2}&#39; | tr -d &#39;,&#39;`
      do
        noip2 -K $i
      done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;journalctlでログを見てみると以下のようなログが出ていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo journalctl | grep noip2
 5月 02 10:54:07 express noip2[1082]: v2.1.9 daemon started with NAT enabled
 5月 02 10:54:07 express noip2[1082]: xxxx.ddns.net was already set to xx.xx.xx.xx.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;実際はxxxx.ddns.net はNo-IPで登録したホスト名と選択したドメインでxx.xx.xx.xxは自宅サーバのグローバルIPアドレスが出力されていましたが、セキュリティ上伏せています。&lt;/p&gt;

&lt;h2 id=&#34;ポートフォワーディング設定:135c9c6bc59340025271c600f28573f2&#34;&gt;ポートフォワーディング設定&lt;/h2&gt;

&lt;h3 id=&#34;ubuntuサーバを固定ipに設定:135c9c6bc59340025271c600f28573f2&#34;&gt;Ubuntuサーバを固定IPに設定&lt;/h3&gt;

&lt;p&gt;変更前の &lt;code&gt;/etc/network/interfaces&lt;/code&gt; は以下のようになっていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto enp0s25
iface enp0s25 inet dhcp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;enp0s25&lt;/code&gt; の設定を &lt;a href=&#34;https://help.ubuntu.com/lts/serverguide/network-configuration.html#static-ip-addressing&#34;&gt;Static IP Address Assignment&lt;/a&gt; を参考に固定IPにしました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto enp0s25
iface enp0s25 inet static
    address 192.168.0.201
    netmask 255.255.255.0
    gateway 192.168.0.1
    dns-nameservers 192.168.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;systemctl restart networking
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で反映しました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ip a&lt;/code&gt; で確認すると、変更前にDHCPで発行されたIPアドレス &lt;code&gt;192.168.0.9&lt;/code&gt; と上記で設定した固定アドレス &lt;code&gt;192.168.0.201&lt;/code&gt; の両方が表示されました。&lt;/p&gt;

&lt;p&gt;sshで作業していたのですが、以下のコマンドで消そうとしたらハマりました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@express:/etc/network# ip a del 192.168.0.9 dev enp0s25
Warning: Executing wildcard deletion to stay compatible with old scripts.
         Explicitly specify the prefix length (192.168.0.9/32) to avoid this warning.
         This special behaviour is likely to disappear in further releases,
         fix your scripts!
packet_write_wait: Connection to 192.168.0.9: Broken pipe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コンソールからログインして &lt;code&gt;ip a&lt;/code&gt; で確認すると &lt;code&gt;enp0s25&lt;/code&gt; の &lt;code&gt;inet&lt;/code&gt; の行は両方共消えていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl restart networking
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でネットワークを再起動して &lt;code&gt;ip a&lt;/code&gt; を実行すると &lt;code&gt;inet&lt;/code&gt; の行は固定IPの1行になりました。&lt;/p&gt;

&lt;p&gt;上で表示されたWarningによると、正しくは以下のようにするべきだったようです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ip a del 192.168.0.9/32 dev enp0s25
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;airmacユーティリティでポートフォワーディング設定:135c9c6bc59340025271c600f28573f2&#34;&gt;AirMacユーティリティでポートフォワーディング設定&lt;/h3&gt;

&lt;p&gt;Finderで「アプリケーション/ユーティリティ/AirMac ユーティリティ」を起動し、
Time Capsuleをクリックして開くポップアップの「編集」ボタンを押します。&lt;/p&gt;

&lt;p&gt;「ネットワーク」タブで「ルーターモード」を「DHCPとNAX」にしておきます。
先程固定IPを &lt;code&gt;192.168.0.201&lt;/code&gt; にしたのは「DHCPの範囲」が &lt;code&gt;192.168.0.2〜192.168.0.200&lt;/code&gt; なので範囲外の値を選んだからです。なお、この範囲は「ネットワークオプション…」ボタンを押して変更可能です。&lt;/p&gt;

&lt;p&gt;ポート設定の下の「+」ボタンを押すとポップアップが開くのでポートフォワーディングの設定を追加します。
ファイアウォール・エントリー・タイプは「IPv4ポートマッピング」固定で、ドロップダウンが disabled の状態になっていました。&lt;/p&gt;

&lt;p&gt;プライベートIPアドレスは上記で設定したExpress5800の固定IPを入力します。&lt;/p&gt;

&lt;p&gt;パブリックUDPポート、パブリックTCPポート、プライベートUDPポート、プライベートTCPポートにはフォワーデング元と先のポートを転送したい内容に応じて設定します。今回はTCPでsshのポートを指定しました。
なお、この記事では書いてないですが、パスワードアタック攻撃を回避するため事前にsshdは鍵認証のみ許可しパスワード認証は許可しない設定に変更しています。&lt;/p&gt;

&lt;p&gt;ちなみに&lt;a href=&#34;https://support.apple.com/kb/TA24799?locale=ja_JP&amp;amp;viewlocale=ja_JP&#34;&gt;ポートの範囲を指定して転送できるように AirMac Extreme (802.11n) ベースステーションを設定する&lt;/a&gt;によるとポートの入力欄は空白を開けずに &lt;code&gt;XXX-YYY&lt;/code&gt; のように書けば範囲も指定できるそうです。&lt;/p&gt;

&lt;p&gt;設定を追加したら「保存」ボタンを押してポップアップを閉じ、「アップデート」ボタンで反映します。&lt;/p&gt;

&lt;h2 id=&#34;おわりに:135c9c6bc59340025271c600f28573f2&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;これでインターネットから自宅サーバにsshでログイン出来るようになって便利になりました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MacをPXEサーバにしてExpress5800/S70タイプRBにUbuntu16.04をインストールしてみた</title>
      <link>/blog/2016/05/01/install_ubuntu_xenial_with_pxe_boot/</link>
      <pubDate>Sun, 01 May 2016 22:36:19 +0900</pubDate>
      
      <guid>/blog/2016/05/01/install_ubuntu_xenial_with_pxe_boot/</guid>
      <description>

&lt;h2 id=&#34;背景:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;Goで書いたプログラムをMacBook Pro上で負荷試験をしていたら、ビーチボールカーソルが回りっぱなしになって大変でした。そういえば、負荷試験するときは極力余計なプロセスを止めて外界の影響を受けない状態でやるべきという話を思い出しました。&lt;/p&gt;

&lt;p&gt;そこで5年前に買ったけど、ここ2年は全く電源を入れていなかった自宅サーバを再び活用することにしました。起動してみるとCentOS 6.4が入っていました。せっかくなので人生初のPXEブートでUbuntu 16.04をインストールしてみました。ということで自分用メモです。&lt;/p&gt;

&lt;h2 id=&#34;サーバハードウェア構成:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;サーバハードウェア構成&lt;/h2&gt;

&lt;p&gt;ハードウェアの情報は有志のまとめWikiに詳しく載っています。
&lt;a href=&#34;http://pc.usy.jp/wiki/index.php?NEC%20Express5800%A1%BFS70%20%A5%BF%A5%A4%A5%D7RB&#34;&gt;NEC Express5800／S70 タイプRB - usyWiki&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;私のExpress5800の構成は以下の通りです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Express5800/S70タイプRB&lt;/li&gt;
&lt;li&gt;CPU: Intel Pentium G6950 (2.8GHz)&lt;/li&gt;
&lt;li&gt;RAM: 16GBに増設済み&lt;/li&gt;
&lt;li&gt;SSD: Intel SSDSA2M160G2GC (換装済み)&lt;/li&gt;
&lt;li&gt;BIOS: Phoenix&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;macをpxeサーバにする:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;MacをPXEサーバにする&lt;/h2&gt;

&lt;p&gt;今まではこの方法を知らなくてPXEブートを諦めていたのですが、 &lt;a href=&#34;http://qiita.com/honeniq/items/d020368ea31b2f052a12&#34;&gt;MacをPXEサーバーにする - Qiita&lt;/a&gt; と &lt;a href=&#34;http://c-rtx.com/2015/09/21/macosx-pxe-server/&#34;&gt;MacOSXをPXEブートサーバーにしてLinuxのインストールに使う | C-RTX BLOG&lt;/a&gt; の記事のおかげで私にも出来ました。ありがとうございます！&lt;/p&gt;

&lt;h3 id=&#34;環境:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;環境&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;MacBook Pro (Retina, Mid 2012)&lt;/li&gt;
&lt;li&gt;OS X El Capitan&lt;/li&gt;
&lt;li&gt;tftpd (OS X 標準)&lt;/li&gt;
&lt;li&gt;bootpd (OS X 標準)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;構成図:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;構成図&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;+--------+  Ethernet   +-------------+  Wi-Fi   +----------+ 
| Server | ----------&amp;gt; | MacBook Pro | -------&amp;gt; | Wi-Fi AP | -----&amp;gt; Internet
+--------+             +-------------+          +----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;tftpdの起動とnetbootのファイル配置:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;tftpdの起動とnetbootのファイル配置&lt;/h3&gt;

&lt;p&gt;tftpd起動&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo launchctl load -w /System/Library/LaunchDaemons/tftp.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;osx上でのtftpについて私はよく知らないのですが、起動後&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ps auxww | grep tftp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;としてもヒットしませんでした。&lt;/p&gt;

&lt;p&gt;以下のように実際に繋いでみて試すか、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tftp
tftp&amp;gt; quit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;lsofで確認すれば大丈夫でした。後者は &lt;a href=&#34;http://qiita.com/tukiyo3/items/c9ca4bc6c62e78e80ae3&#34;&gt;Macでtftpサーバを起動 - Qiita&lt;/a&gt; を参考にしました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo lsof -i:69
COMMAND PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
launchd   1 root   42u  IPv6 0x4d07726546506a3f      0t0  UDP *:tftp
launchd   1 root   47u  IPv4 0x4d0772654650a3ff      0t0  UDP *:tftp
launchd   1 root   48u  IPv4 0x4d0772654650a3ff      0t0  UDP *:tftp
launchd   1 root   49u  IPv6 0x4d07726546506a3f      0t0  UDP *:tftp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ubuntuのセットアップが終わった後は以下のコマンドでtftpdを停止します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo launchctl unload /System/Library/LaunchDaemons/tftp.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/private/tftpboot/ 以下にUbuntuのネットワークインストールに必要なファイルを配置します。&lt;/p&gt;

&lt;p&gt;最初は &lt;a href=&#34;http://archive.ubuntu.com/ubuntu/dists/xenial/main/installer-amd64/current/images/netboot/&#34;&gt;http://archive.ubuntu.com/ubuntu/dists/xenial/main/installer-amd64/current/images/netboot/&lt;/a&gt; から pxelinux.0 をダウンロードして置いていたのですが、ブートしてみると他のファイルも必要なことがわかりました。&lt;/p&gt;

&lt;p&gt;試行錯誤した結果、 &lt;a href=&#34;https://www.ubuntulinux.jp/ubuntu/mirrors&#34;&gt;日本国内のダウンロードサイト | Ubuntu Japanese Team&lt;/a&gt; に載っているミラーの1つの &lt;a href=&#34;ftp://ftp.kddilabs.jp/Linux/packages/ubuntu/archive/dists/xenial/main/installer-amd64/current/images/netboot/&#34;&gt;ftp://ftp.kddilabs.jp/Linux/packages/ubuntu/archive/dists/xenial/main/installer-amd64/current/images/netboot/&lt;/a&gt; から netboot.tar.gz をダウンロードして展開すれば大丈夫でした。&lt;/p&gt;

&lt;h3 id=&#34;bootpd:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;bootpd&lt;/h3&gt;

&lt;p&gt;私がよくわかっていなくて、ここはちょっと苦労しました。まず、インターネット共有を切にした状態では /etc/bootpd.plist は以下のようになっていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE plist PUBLIC &amp;quot;-//Apple//DTD PLIST 1.0//EN&amp;quot; &amp;quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;quot;&amp;gt;
&amp;lt;plist version=&amp;quot;1.0&amp;quot;&amp;gt;
&amp;lt;dict&amp;gt;
	&amp;lt;key&amp;gt;bootp_enabled&amp;lt;/key&amp;gt;
	&amp;lt;false/&amp;gt;
	&amp;lt;key&amp;gt;detect_other_dhcp_server&amp;lt;/key&amp;gt;
	&amp;lt;false/&amp;gt;
	&amp;lt;key&amp;gt;dhcp_enabled&amp;lt;/key&amp;gt;
	&amp;lt;false/&amp;gt;
	&amp;lt;key&amp;gt;dhcp_ignore_client_identifier&amp;lt;/key&amp;gt;
	&amp;lt;true/&amp;gt;
	&amp;lt;key&amp;gt;use_server_config_for_dhcp_options&amp;lt;/key&amp;gt;
	&amp;lt;false/&amp;gt;
&amp;lt;/dict&amp;gt;
&amp;lt;/plist&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;「システム環境設定」→「共有」と進んで「インターネット共有」のチェックボックスをオンにしようとしたのですが、画面中央に「接続を共有するためのポートを選択していないため、インターネット共有を開始できません。」と表示されていてオンにならない状態でした。&lt;/p&gt;

&lt;p&gt;試行錯誤した結果、MacをWi-FiでWi-Fi AP (Time Capsule)に繋ぎつつ&lt;a href=&#34;http://www.apple.com/jp/shop/product/MD463ZM/A/apple-thunderbolt%E3%82%AE%E3%82%AC%E3%83%93%E3%83%83%E3%83%88ethernet%E3%82%A2%E3%83%80%E3%83%97%E3%82%BF?afid=p238%7CsKTonmsKf-dc_mtid_18707vxu38484_pcrid_96182712077_&amp;amp;cid=aos-jp-kwg-pla-btb-product-MD463ZM/A&#34;&gt;Apple Thunderbolt - ギガビットEthernetアダプタ - Apple (日本)&lt;/a&gt;でも有線で繋いだ状態で、「共有する接続経路」で「Wi-Fi」を選び、「相手のコンピュータでのポート」で「Thunderbolt Ethernet」にチェックをつけた状態で「インターネット共有」にチェックをつけるとうまくいきました。&lt;/p&gt;

&lt;p&gt;この時はよく分かってなかったのですが、参考にした記事にもある通り、Express 5800のLANケーブルはMacに繋ぐのが正しいです。上記の構成図も正しい構成のほうを書いています。&lt;/p&gt;

&lt;p&gt;この状態で5秒ぐらいすると /etc/bootpd.plist が以下のように変更されました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE plist PUBLIC &amp;quot;-//Apple//DTD PLIST 1.0//EN&amp;quot; &amp;quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;quot;&amp;gt;
&amp;lt;plist version=&amp;quot;1.0&amp;quot;&amp;gt;
&amp;lt;dict&amp;gt;
	&amp;lt;key&amp;gt;Subnets&amp;lt;/key&amp;gt;
	&amp;lt;array&amp;gt;
		&amp;lt;dict&amp;gt;
			&amp;lt;key&amp;gt;_creator&amp;lt;/key&amp;gt;
			&amp;lt;string&amp;gt;com.apple.NetworkSharing&amp;lt;/string&amp;gt;
			&amp;lt;key&amp;gt;allocate&amp;lt;/key&amp;gt;
			&amp;lt;true/&amp;gt;
			&amp;lt;key&amp;gt;dhcp_domain_name_server&amp;lt;/key&amp;gt;
			&amp;lt;array&amp;gt;
				&amp;lt;string&amp;gt;192.168.2.1&amp;lt;/string&amp;gt;
			&amp;lt;/array&amp;gt;
			&amp;lt;key&amp;gt;dhcp_router&amp;lt;/key&amp;gt;
			&amp;lt;string&amp;gt;192.168.2.1&amp;lt;/string&amp;gt;
			&amp;lt;key&amp;gt;interface&amp;lt;/key&amp;gt;
			&amp;lt;string&amp;gt;bridge100&amp;lt;/string&amp;gt;
			&amp;lt;key&amp;gt;lease_max&amp;lt;/key&amp;gt;
			&amp;lt;integer&amp;gt;86400&amp;lt;/integer&amp;gt;
			&amp;lt;key&amp;gt;lease_min&amp;lt;/key&amp;gt;
			&amp;lt;integer&amp;gt;86400&amp;lt;/integer&amp;gt;
			&amp;lt;key&amp;gt;name&amp;lt;/key&amp;gt;
			&amp;lt;string&amp;gt;192.168.2/24&amp;lt;/string&amp;gt;
			&amp;lt;key&amp;gt;net_address&amp;lt;/key&amp;gt;
			&amp;lt;string&amp;gt;192.168.2.0&amp;lt;/string&amp;gt;
			&amp;lt;key&amp;gt;net_mask&amp;lt;/key&amp;gt;
			&amp;lt;string&amp;gt;255.255.255.0&amp;lt;/string&amp;gt;
			&amp;lt;key&amp;gt;net_range&amp;lt;/key&amp;gt;
			&amp;lt;array&amp;gt;
				&amp;lt;string&amp;gt;192.168.2.2&amp;lt;/string&amp;gt;
				&amp;lt;string&amp;gt;192.168.2.254&amp;lt;/string&amp;gt;
			&amp;lt;/array&amp;gt;
		&amp;lt;/dict&amp;gt;
	&amp;lt;/array&amp;gt;
	&amp;lt;key&amp;gt;bootp_enabled&amp;lt;/key&amp;gt;
	&amp;lt;false/&amp;gt;
	&amp;lt;key&amp;gt;detect_other_dhcp_server&amp;lt;/key&amp;gt;
	&amp;lt;array&amp;gt;
		&amp;lt;string&amp;gt;bridge100&amp;lt;/string&amp;gt;
	&amp;lt;/array&amp;gt;
	&amp;lt;key&amp;gt;dhcp_enabled&amp;lt;/key&amp;gt;
	&amp;lt;array&amp;gt;
		&amp;lt;string&amp;gt;bridge100&amp;lt;/string&amp;gt;
	&amp;lt;/array&amp;gt;
	&amp;lt;key&amp;gt;dhcp_ignore_client_identifier&amp;lt;/key&amp;gt;
	&amp;lt;true/&amp;gt;
	&amp;lt;key&amp;gt;ignore_allow_deny&amp;lt;/key&amp;gt;
	&amp;lt;array&amp;gt;
		&amp;lt;string&amp;gt;bridge100&amp;lt;/string&amp;gt;
	&amp;lt;/array&amp;gt;
	&amp;lt;key&amp;gt;use_server_config_for_dhcp_options&amp;lt;/key&amp;gt;
	&amp;lt;false/&amp;gt;
&amp;lt;/dict&amp;gt;
&amp;lt;/plist&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Subnets キーの &lt;code&gt;&amp;lt;/dict&amp;gt;&lt;/code&gt; の前に以下の設定を追加します。 &lt;code&gt;cHhlbGludXguMAA=&lt;/code&gt; は &lt;code&gt;pxelinux.0&lt;/code&gt; をBase64エンコーディングした値です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;		&amp;lt;key&amp;gt;dhcp_option_66&amp;lt;/key&amp;gt;
		&amp;lt;string&amp;gt;192.168.2.1&amp;lt;/string&amp;gt;
		&amp;lt;key&amp;gt;dhcp_option_67&amp;lt;/key&amp;gt;
		&amp;lt;data&amp;gt;cHhlbGludXguMAA=&amp;lt;/data&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここで追記した内容を反映させる際に、「システム環境設定」の「共有」で「インターネット共有」をオフ→オンにすると設定ファイルが元に戻されてしまってダメでした。&lt;/p&gt;

&lt;p&gt;/etc/bootpd.plist を書き換えた後、以下のようにコマンドで bootpd を再起動すると大丈夫でした。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo launchctl unload /System/Library/LaunchDaemons/bootps.plist
sudo launchctl load -w /System/Library/LaunchDaemons/bootps.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/etc/bootpub を作成・編集して固定アサインの設定もやっておきました。
が、今思えば私はこれはいらないかなと思います。後述の通り、ネットワークブートが終わったらLANケーブルを繋ぎ変えて、Wi-Fi APのDHCPを使ってIPアドレスを取得してその後のインストールを行うので。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# hostname      hwtype  hwaddr              ipaddr          bootfile
client1         1       01:02:03:04:05:06   192.168.2.11    pxelinux.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hwaddrの値は実際には事前に Express 5800 で &lt;code&gt;ip a&lt;/code&gt; で調べたMACアドレスに書き換えました。PXEブート中にもMACアドレスが表示されていたのでそれを見て書き換えるのでも良さそうです。&lt;/p&gt;

&lt;p&gt;Macで &lt;code&gt;ifconfig&lt;/code&gt; を実行すると &lt;code&gt;bridge100&lt;/code&gt; というのが作られていました。最初は &lt;code&gt;bridge0&lt;/code&gt; というのが作られたのですが、このときは接続を間違えていて ServerをWi-Fi APに有線でつなぎ、MacはWi-Fi APにWi-Fiと有線でつないでいました。&lt;/p&gt;

&lt;p&gt;その後上記の構成図の配線に修正したりしているうちに &lt;code&gt;bridge0&lt;/code&gt; とは別に &lt;code&gt;bridge100&lt;/code&gt; というのが作られていました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ifconfig&lt;/code&gt; の結果は以下のようになっていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ifconfig
...(snip)...
bridge100: flags=8863&amp;lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&amp;gt; mtu 1500
        options=3&amp;lt;RXCSUM,TXCSUM&amp;gt;
        ether ba:f6:b1:71:3c:64
        inet 192.168.2.1 netmask 0xffffff00 broadcast 192.168.2.255
        inet6 fe80::b8f6:b1ff:fe71:3c64%bridge100 prefixlen 64 scopeid 0x12
        Configuration:
                id 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0
                maxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200
                root id 0:0:0:0:0:0 priority 0 ifcost 0 port 0
                ipfilter disabled flags 0x2
        member: en4 flags=3&amp;lt;LEARNING,DISCOVER&amp;gt;
                ifmaxaddr 0 port 17 priority 0 path cost 0
        nd6 options=1&amp;lt;PERFORMNUD&amp;gt;
        media: autoselect
        status: active
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;os-xのファイアウォールを切る必要はない:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;OS Xのファイアウォールを切る必要はない&lt;/h3&gt;

&lt;p&gt;初回はたぶんファイアウォールは切る必要があるだろうと思って切っておきました。&lt;/p&gt;

&lt;p&gt;「システム環境設定」→「セキュリティとプライバシー」→「ファイアウォール」タブ
左下の「変更するにはカギをクリックします」を押してパスワードを入力し、
「ファイアウォールを切にする」ボタンを押してオフにしました。&lt;/p&gt;

&lt;p&gt;Ubuntuのインストールが終わったら「ファイアウォールを入にする」ボタンを押して
オンに戻しておきます。&lt;/p&gt;

&lt;p&gt;が、2回目の検証でファイアウォールを切らなくても大丈夫なことがわかりました。&lt;/p&gt;

&lt;h3 id=&#34;phoenix-biosでpxeブートを有効にする:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;Phoenix BIOSでPXEブートを有効にする&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://changineer.info/server/server_hardware_management/server_hardware_bios.html#Phoenix_BIOS_8211BIOS_PXE_boot&#34;&gt;BIOS 設定方法&lt;/a&gt;を参考にしました。&lt;/p&gt;

&lt;p&gt;Express 5800を再起動し、起動時に[F2]キーを押してPhoenix BIOSの設定画面に入ります。カーソルキーの左右で[Boot]メニューを選びます。私はPXEブートを無効にしていたので、[PCI BEV]は画面下部の[Excluded from boot order:]のほうにありました。カーソルキーの上下で[PCI BEV]を選んでxキーを押し、画面上部の[Boot priority order:]のほうに移動します。
その後テンキーの+を押して[PCI BEV]を1番上に持ってきます。購入時に同梱されていた日本語キーボードを使っているのですがフルキーの-は効くのですが+ (Shift+;)は効きませんでした。&lt;/p&gt;

&lt;p&gt;なお、一旦有効にした後は[PCI BEV]の項目は[PCI BEV: IBA GE Slot 00C8 v1352]という表示になっていました。&lt;/p&gt;

&lt;p&gt;変更したら[F10]を押してBIOSの設定を保存して終了します。&lt;/p&gt;

&lt;p&gt;Ubuntuの設定が終わったら[PCI BEV]を[Excluded from boot order:]のほうに戻しておきます。&lt;/p&gt;

&lt;h3 id=&#34;pxeブートでubuntuのインストール:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;PXEブートでUbuntuのインストール&lt;/h3&gt;

&lt;p&gt;Express 5800を再起動すると、Ubuntuのインストーラが起動しました。
予めMacで &lt;code&gt;tail -f /var/log/system.log | grep DHCP&lt;/code&gt; を実行しておくとDHCPのログが確認できました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tail -f /var/log/system.log | grep DHCP
May  2 00:55:44 machostname bootpd[8589]: DHCP REQUEST [bridge100]: 1,01:02:03:04:05:06
May  2 00:56:37 machostname bootpd[8589]: DHCP DISCOVER [bridge100]: 1,01:02:03:04:05:06
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;実際には &lt;code&gt;machostname&lt;/code&gt; の部分はMacBook Proのホスト名が、 &lt;code&gt;01:02:03:04:05:06&lt;/code&gt; の部分は Express 5800 のネットワークカードのMACアドレスが出力されていますが、セキュリティ上伏せています。&lt;/p&gt;

&lt;p&gt;後は普通にUbuntuのインストーラに沿ってインストールすれば良いのですが、インストーラが起動した後はMacを経由せずに通信するほうが効率が良いので、Express 5800とMacをつないでいるLANケーブルをMacから外してWi-Fi APに繋ぎ直します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+--------+  Ethernet   +----------+ 
| Server | ----------&amp;gt; | Wi-Fi AP | -----&amp;gt; Internet
+--------+             +----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストーラの「Ubuntu アーカイブのミラーを選択」のところで「戻る」を選び、
「Ubuntu インストーラメインメニュー」で「ネットワークの設定」を選びます。
するとDHCPでIPアドレスを再取得してくれます。&lt;/p&gt;

&lt;h3 id=&#34;ubuntuのセットアップ:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;Ubuntuのセットアップ&lt;/h3&gt;

&lt;p&gt;以下はUbuntuのセットアップのメモです。&lt;/p&gt;

&lt;p&gt;ホームパーティションの暗号化とパーティショニングの暗号化LVMを選んでみました。
後者を選ぶと暗号化用のパスフレーズを求められるので設定します。設定するとサーバの起動時にパスフレーズの入力が必要になります。&lt;/p&gt;

&lt;p&gt;インストールするソフトウェアの選択では以下の3つを選びました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;標準システムユーティリティ&lt;/li&gt;
&lt;li&gt;OpenSSH server&lt;/li&gt;
&lt;li&gt;Basic Ubuntu server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GRUBブートローダはSSDのデバイスにインストールしました。&lt;/p&gt;

&lt;p&gt;タイムゾーンは日本にし、システム時間はUTCにしました。&lt;/p&gt;

&lt;h2 id=&#34;おわりに:7c8148b4a0be8b5912c049d4f8205326&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;PXEブート便利です！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 14.04のPython3でvenvを使う手順のメモ</title>
      <link>/blog/2015/07/26/use_python3_venv_on_ubuntu_14.04/</link>
      <pubDate>Sun, 26 Jul 2015 23:09:17 +0900</pubDate>
      
      <guid>/blog/2015/07/26/use_python3_venv_on_ubuntu_14.04/</guid>
      <description>

&lt;p&gt;Ubuntu 14.04のPython3でvenv環境をつくろうとしたらエラーになったのですが、&lt;a href=&#34;http://www.thefourtheye.in/2014/12/Python-venv-problem-with-ensurepip-in-Ubuntu.html&#34;&gt;thefourtheye&amp;rsquo;s Tech Blog: Python&amp;rsquo;s venv problem with ensurepip in Ubuntu&lt;/a&gt;に回避方法が紹介されていました。&lt;/p&gt;

&lt;p&gt;venv環境の作成手順をメモしておきます。&lt;/p&gt;

&lt;h2 id=&#34;事前準備:05eb07f168fcd264f562f523d3cefc83&#34;&gt;事前準備&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install python3 python3-pip
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;venv環境作成手順:05eb07f168fcd264f562f523d3cefc83&#34;&gt;venv環境作成手順&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;pyvenv-3.4 --without-pip venv
source venv/bin/activate
curl -LO https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2015-08-29追記-スクリプトを書きました:05eb07f168fcd264f562f523d3cefc83&#34;&gt;2015-08-29追記: スクリプトを書きました&lt;/h2&gt;

&lt;p&gt;以下の内容を~/bin/venv3などというファイル名で保存します。sourceで実行するので実行パーミションは付けないでください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;venv_dir=&amp;quot;${1:-venv}&amp;quot;
pyvenv-3.4 --without-pip &amp;quot;${venv_dir}&amp;quot;
source &amp;quot;${venv_dir}/bin/activate&amp;quot;
curl -L https://bootstrap.pypa.io/get-pip.py | python3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使い方は &lt;code&gt;source ~/bin/venv3 作成するディレクトリ名&lt;/code&gt; です。作成するディレクトリ名を省略するとカレントディレクトリ下のvenvになります。
使用例は以下の通りです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagrant@vagrant-ubuntu-trusty-64:/tmp$ source ~/bin/venv3 venv3
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 1379k  100 1379k    0     0  2741k      0 --:--:-- --:--:-- --:--:-- 2737k
Collecting pip
  Using cached pip-7.1.2-py2.py3-none-any.whl
Collecting setuptools
  Using cached setuptools-18.2-py2.py3-none-any.whl
Collecting wheel
  Using cached wheel-0.24.0-py2.py3-none-any.whl
Installing collected packages: pip, setuptools, wheel
Successfully installed pip-7.1.2 setuptools-18.2 wheel-0.24.0
(venv3) vagrant@vagrant-ubuntu-trusty-64:/tmp$
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>