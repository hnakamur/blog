<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ubuntu on hnakamur&#39;s blog</title>
    <link>https://hnakamur.github.io/blog/tags/ubuntu/</link>
    <description>Recent content in ubuntu on hnakamur&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 05 Jul 2018 16:20:00 +0900</lastBuildDate>
    
	<atom:link href="https://hnakamur.github.io/blog/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>macOS→VagrantのUbuntu→LXDコンテナへのポートフォワーディング</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/07/05/port-forwarding-macos-vagrant-lxd/</link>
      <pubDate>Thu, 05 Jul 2018 16:20:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/07/05/port-forwarding-macos-vagrant-lxd/</guid>
      <description>はじめに VagrantでUbuntu 18.04 LTSとLXDをインストールする手順 で構築したLXDの環境で、macOS→VagrantのUbuntu</description>
    </item>
    
    <item>
      <title>VagrantでUbuntu 18.04 LTSとLXDをインストールする手順</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/07/05/install-lxd-on-ubuntu-18.04-lts-on-vagrant/</link>
      <pubDate>Thu, 05 Jul 2018 15:40:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/07/05/install-lxd-on-ubuntu-18.04-lts-on-vagrant/</guid>
      <description>はじめに 私自身は職場でも自宅でも Ubuntu MATE 18.04 LTS を使っていてVagrantはもう使っていません。 ですが職場の同僚が macOS を使っていてLXDの環境をセット</description>
    </item>
    
    <item>
      <title>go-carbonのdebパッケージをsbuildとPPAでビルドした</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/06/15/built-go-carbon-deb-using-sbuild-and-ppa/</link>
      <pubDate>Fri, 15 Jun 2018 10:55:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/06/15/built-go-carbon-deb-using-sbuild-and-ppa/</guid>
      <description>はじめに lomik/go-carbon: Golang implementation of Graphite/Carbon server with classic architecture: Agent -&amp;gt; Cache -&amp;gt; Persister のdebパッケージをsbuildとPPAでビルドしたときのメモです。 成果物は以下に有ります。 PPA: go-carbon : Hiroaki Nakamura d</description>
    </item>
    
    <item>
      <title>sbuildで外部レポジトリを使う</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/06/15/use-extra-repository-in-sbuild/</link>
      <pubDate>Fri, 15 Jun 2018 10:12:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/06/15/use-extra-repository-in-sbuild/</guid>
      <description>はじめに 外部レポジトリのdebパッケージに依存したdebパッケージをsbuildでビルドするための手順メモです。 以下の2つの方法がありますが</description>
    </item>
    
    <item>
      <title>PPAでのビルドの予行演習にsbuildを使う</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/06/13/use-sbuild-for-ppa-build-rehearsal/</link>
      <pubDate>Wed, 13 Jun 2018 18:00:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/06/13/use-sbuild-for-ppa-build-rehearsal/</guid>
      <description>はじめに PPAでビルドする前に手元でビルドが通ることを確認したくてpbuilderを使っていましたが、pbuilderではビルドが通るのにP</description>
    </item>
    
    <item>
      <title>universal-ctagsのUbuntu 18.04 LTS用debパッケージをビルドした</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/06/08/build-universal-ctags-deb-for-ubuntu-18.04-lts/</link>
      <pubDate>Fri, 08 Jun 2018 00:30:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/06/08/build-universal-ctags-deb-for-ubuntu-18.04-lts/</guid>
      <description>はじめに ctagsというと Ubuntu 18.04 LTS には exuberant-ctags (1:5.9~svn20110310-11) というパッケージがあります。ですが、バージョン番号のsvnの後の日付が2011年とあるようにかなり古</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04 LTSでsbuildをセットアップ</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/06/07/setup-sbuild-on-ubuntu-18.04-lts/</link>
      <pubDate>Thu, 07 Jun 2018 21:10:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/06/07/setup-sbuild-on-ubuntu-18.04-lts/</guid>
      <description>はじめに 手元でpbuilderでdebパッケージのビルドが通ってからPPAでビルドしたらテストの1つがエラーになるという問題が起きてしまい、</description>
    </item>
    
    <item>
      <title>nginxのコードリーディングにrtagsを使う</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/23/use-rtags-for-nginx-code-reading/</link>
      <pubDate>Wed, 23 May 2018 22:25:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/23/use-rtags-for-nginx-code-reading/</guid>
      <description>はじめに Ubuntu 18.04 LTS用にrtagsのdebパッケージを作成した で作成したrtagsを使ってnginxのコードリーディングをするための手順メモで</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04 LTS用にrtagsのdebパッケージを作成した</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/23/build-rtags-deb-for-ubuntu-18.04-lts/</link>
      <pubDate>Wed, 23 May 2018 14:10:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/23/build-rtags-deb-for-ubuntu-18.04-lts/</guid>
      <description>はじめに rtagsのdebパッケージを作成した のときのメモを端折りすぎて、Ubuntu 18.04 LTS用に rtags 2.18のパッケージを作ろうと思ったら苦</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04 LTSにSlack 3.2.0-beta.2をインストール</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/22/install-slack-3.2.0-beta.2-on-ubuntu-18.04-lts/</link>
      <pubDate>Tue, 22 May 2018 15:10:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/22/install-slack-3.2.0-beta.2-on-ubuntu-18.04-lts/</guid>
      <description>はじめに Ubuntu MATE 18.04 LTSにSlack 3.2.0-beta.2をインストールしたときのメモです。 snapパッケージでのインストール Linux版 Slack (</description>
    </item>
    
    <item>
      <title>Ubuntuのデスクトップ環境でsshのパスフレーズ入力を1回だけにする</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/21/input-ssh-passphrase-only-once-on-ubuntu-desktop/</link>
      <pubDate>Mon, 21 May 2018 16:10:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/21/input-ssh-passphrase-only-once-on-ubuntu-desktop/</guid>
      <description>Ubuntuのデスクトップ環境でssh-agentを使ってsshのパスフレーズ入力を1回だけで良いようにするための設定メモです。 といっても、</description>
    </item>
    
    <item>
      <title>ClamAVをUbuntu MATE 18.04 LTSにセットアップ</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/21/setup-clamav-on-ubuntu-mate-18.04-lts/</link>
      <pubDate>Mon, 21 May 2018 15:00:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/21/setup-clamav-on-ubuntu-mate-18.04-lts/</guid>
      <description>はじめに Ubuntu MATE 18.04 LTSの環境にオープンソースのアンチウィルスソフト ClamAV をセットアップしてみたメモです。例によっていろいろ試行錯誤した後に思い出し</description>
    </item>
    
    <item>
      <title>Ubuntu MATE 18.04 LTSの私用設定メモ</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/21/my-settings-on-ubunt-mate/</link>
      <pubDate>Mon, 21 May 2018 12:20:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/21/my-settings-on-ubunt-mate/</guid>
      <description>はじめに USキーボードのThinkPad T480sとThinkPad X260にUbuntu MATE 18.04 LTSをセットアップしました。ということで自分</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04でVPN切断後にホスト名解決が動くようにするための回避策</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/06/workaround-to-get-dns-working-after-vpn-disconnection-on-ubuntu-18.04/</link>
      <pubDate>Sun, 06 May 2018 20:35:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/06/workaround-to-get-dns-working-after-vpn-disconnection-on-ubuntu-18.04/</guid>
      <description>はじめに Ubuntu 17.10でL2TPのVPN接続を試してみた でVPN切断後にホスト名解決が動かなくなるのでWifiを一旦オフにしてオンにしていたの</description>
    </item>
    
    <item>
      <title>Ubuntuでsnapを使って最新バージョンのgoをインストール</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/06/install-latest-version-of-golang-using-snap-on-ubuntu/</link>
      <pubDate>Sun, 06 May 2018 15:10:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/06/install-latest-version-of-golang-using-snap-on-ubuntu/</guid>
      <description>結論 私が今後あちこちの環境でインストールすることになるので結論を先にメモしておきます。 Ubuntuでsnapを使ってgo 1.10.xの最新版</description>
    </item>
    
    <item>
      <title>GNOME上でEmacsライクなキーバインディングを使う</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/06/use-emacs-like-keybindings-on-gnome/</link>
      <pubDate>Sun, 06 May 2018 14:40:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/06/use-emacs-like-keybindings-on-gnome/</guid>
      <description>はじめに 元々macOSのChromeでURL欄を編集するときにEmacsライクなキーバインディングを使うのに慣れていたので、GNOMEのCh</description>
    </item>
    
    <item>
      <title>MacBook Pro上のUbuntu 18.04でサスペンドが動くようにする</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/06/make-suspend-working-in-ubuntu-18.04-on-macbook-pro/</link>
      <pubDate>Sun, 06 May 2018 09:45:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/06/make-suspend-working-in-ubuntu-18.04-on-macbook-pro/</guid>
      <description>はじめに MacBook Pro 15-inch, Mid 2012 (機種ID: MacBookPro10,1)にUbuntu 18.04をインストールしてみたのですが、動かしたまま画面を閉じる</description>
    </item>
    
    <item>
      <title>GNOMEの端末でssh-addを自動実行</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/05/run-ssh-add-on-gnome-terminal/</link>
      <pubDate>Sat, 05 May 2018 00:30:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/05/run-ssh-add-on-gnome-terminal/</guid>
      <description>はじめに UbuntuのGNOME環境では「自動起動するアプリケーションの設定」でSSH鍵エージェントが設定されています。 端末を起動したときに</description>
    </item>
    
    <item>
      <title>GNOME Shellの時刻表示に日付や秒を表示</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/04/display-date-and-seconds-on-gnome-shell/</link>
      <pubDate>Fri, 04 May 2018 21:25:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/04/display-date-and-seconds-on-gnome-shell/</guid>
      <description>はじめに How do I change the date format in Gnome 3 shell? - Ask Ubuntu を参考にしました。 日本語環境の場合デフォルトでは「金曜日 21 : 32」のようになっていました。 日付を表示 以下</description>
    </item>
    
    <item>
      <title>pbuilderで特定のディストリビューションのchroot環境を作成</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/04/create-pbuilder-chroot-of-specified-distribution/</link>
      <pubDate>Fri, 04 May 2018 21:10:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/04/create-pbuilder-chroot-of-specified-distribution/</guid>
      <description>はじめに Ubuntu 18.04上のpbuilderでUbuntu 16.04用のchroot環境を作成するというようにホストと違うディストリビューション</description>
    </item>
    
    <item>
      <title>apt-markを使ってdebパッケージのバージョン固定</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/04/hold-deb-package-version-using-apt-mark/</link>
      <pubDate>Fri, 04 May 2018 21:05:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/04/hold-deb-package-version-using-apt-mark/</guid>
      <description>はじめに nginx にはmainline版とstable版がありますが、 どのバージョンのnginxを使うべきか？ - 考える人、コードを書く人 を参考に私は</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04でaptを使ってchromeをインストール</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/04/install-chrome-using-apt-on-ubuntu-18.04/</link>
      <pubDate>Fri, 04 May 2018 21:00:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/04/install-chrome-using-apt-on-ubuntu-18.04/</guid>
      <description>はじめに How to install google chrome on ubuntu 18.04 / 18.10 を参考にUbuntu 18.04でaptを使ってchromeをインストールしたメモです。 インストール手順 curl https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key</description>
    </item>
    
    <item>
      <title>macOS High SierraとUbuntu 18.04でVeraCryptを使う</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/02/use-veracrypt-on-mac-os-high-sierra-and-ubuntu-18.04/</link>
      <pubDate>Wed, 02 May 2018 21:00:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/02/use-veracrypt-on-mac-os-high-sierra-and-ubuntu-18.04/</guid>
      <description>はじめに VeraCryptでデータパーティションを暗号化してみた ではWindows 10とUbuntu 17.10のデュアルブート環境でデータ用</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04でcopr-cliのdebパッケージを作ったときのメモ</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/01/build-copr-cli-deb-package-for-ubuntu18.04/</link>
      <pubDate>Tue, 01 May 2018 12:35:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/01/build-copr-cli-deb-package-for-ubuntu18.04/</guid>
      <description>はじめに Ubuntu16.04でrpmビルド用にmockとcopr-cliをセットアップ に書いた copr-cli パッケージのビルド手順をサボってメモしてな</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04でgit-buildpackageとfreightを使うときのメモ</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/05/01/ubuntu-18.04-git-buildpackage-freight/</link>
      <pubDate>Tue, 01 May 2018 12:35:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/05/01/ubuntu-18.04-git-buildpackage-freight/</guid>
      <description>はじめに git-buildpackageでdebパッケージをビルドしてPPAにアップロードする手順 freightでプライベートdebレポジト</description>
    </item>
    
    <item>
      <title>Ubuntu 16.04上にUbuntu 18.04のPXEブートサーバをセットアップ</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/04/24/ubuntu18.04-pxe-boot-server-on-ubuntu16.04/</link>
      <pubDate>Tue, 24 Apr 2018 01:00:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/04/24/ubuntu18.04-pxe-boot-server-on-ubuntu16.04/</guid>
      <description>はじめに Ubuntu 16.04をルーター化 したところに Ubuntu 18.04のPXEブートサーバをセットアップしたメモです。 Ubuntu 18.04はリリース前の 2018-</description>
    </item>
    
    <item>
      <title>Ubuntu 16.04をルーター化</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/04/23/setup-router-on-ubuntu16.04/</link>
      <pubDate>Mon, 23 Apr 2018 00:30:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/04/23/setup-router-on-ubuntu16.04/</guid>
      <description>はじめに LANポートが2つついているFUJITSU PRIMERGY TX1310 M1でUbuntu 16.04をルーター化したメモです。 Ubuntu 14.04のルーター化 - Qiita を参</description>
    </item>
    
    <item>
      <title>VeraCryptでデータパーティションを暗号化してみた</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/04/22/use-veracrypt-for-data-partition/</link>
      <pubDate>Sun, 22 Apr 2018 20:45:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/04/22/use-veracrypt-for-data-partition/</guid>
      <description>はじめに Windows 10とUbuntu 16.04のデュアルブート環境でデータ用のパーティションを VeraCrypt - Free Open source disk encryption with strong security for the Paranoid で暗号化して 両方からマウント</description>
    </item>
    
    <item>
      <title>Ubuntu16.04でrpmビルド用にmockとcopr-cliをセットアップ</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/04/21/setup-mock-and-copr-cli-for-building-rpm-on-ubuntu-16.04/</link>
      <pubDate>Sat, 21 Apr 2018 21:00:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/04/21/setup-mock-and-copr-cli-for-building-rpm-on-ubuntu-16.04/</guid>
      <description>はじめに Ubuntu 16.04で mock でローカルでrpmをビルドするための環境構築の手順メモです。 Copr Build Service でrpmをビルドする際に、ビルドが通ることを事前に</description>
    </item>
    
    <item>
      <title>Ubuntu16.04でセカンダリIPアドレス追加</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/04/21/add-secondary-ip-address-on-ubuntu-16.04/</link>
      <pubDate>Sat, 21 Apr 2018 12:30:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/04/21/add-secondary-ip-address-on-ubuntu-16.04/</guid>
      <description>networking - How do I add an additional IP address to /etc/network/interfaces? - Ask Ubuntu とそこでコメントされていた NetworkConfiguration - Debian Wiki の iproute2 method を見て試してみたメモです。 NetworkConfiguration - Debian Wiki の iproute2 method で書かれていたのは /etc/network/interfaces で同じネッ</description>
    </item>
    
    <item>
      <title>Ubuntu 17.10でスクリーンショットを作成してgimpで編集</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/03/31/create-and-edit-screenshots-with-gimp-on-ubuntu-17.10/</link>
      <pubDate>Sat, 31 Mar 2018 10:00:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/03/31/create-and-edit-screenshots-with-gimp-on-ubuntu-17.10/</guid>
      <description>はじめに Ubuntu 17.10でスクリーンショットを作成してgimpで編集する際の手順メモです。 スクリーンショット作成 GNOMEのスクリーンショットの</description>
    </item>
    
    <item>
      <title>Ubuntu 17.10でL2TPのVPN接続を試してみた</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/03/31/l2tp-vpn-on-ubuntu-17.10/</link>
      <pubDate>Sat, 31 Mar 2018 08:40:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/03/31/l2tp-vpn-on-ubuntu-17.10/</guid>
      <description>はじめに Ubuntu 17.10でL2TPのVPN接続を試してみたのでメモです。 以下の手順の一部は接続先の設定に依存して変動がありえます。 セットアップ 必</description>
    </item>
    
    <item>
      <title>Ubuntu 17.10とgnomeとIBus mozcのキーボードショートカットを自分好みに設定</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/03/30/ubuntu-17.10-gnome-ibus-mozc-keyboard-shortcut/</link>
      <pubDate>Fri, 30 Mar 2018 16:30:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/03/30/ubuntu-17.10-gnome-ibus-mozc-keyboard-shortcut/</guid>
      <description>はじめに 私はThinkPadとMacBook ProでともにUSキーボードを使っています。 Windows、macOS、Ubuntuでウィンドウ</description>
    </item>
    
    <item>
      <title>Ubuntu 17.10とWindows10でデュアルブート構成にしてみた</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/03/23/ubuntu-17.10-windows10-dual-boot/</link>
      <pubDate>Fri, 23 Mar 2018 20:15:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/03/23/ubuntu-17.10-windows10-dual-boot/</guid>
      <description>はじめに Ubuntu 17.10とmacOS High Sierraでデュアルブート構成にしてみた の後、ThinkPad X260でUbuntu 17.10とWind</description>
    </item>
    
    <item>
      <title>Ubuntu 17.10とmacOS High Sierraでデュアルブート構成にしてみた</title>
      <link>https://hnakamur.github.io/blog/content/post/2018/03/23/ubuntu-17.10-mac-os-high-sierra-dual-boot/</link>
      <pubDate>Fri, 23 Mar 2018 14:50:00 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2018/03/23/ubuntu-17.10-mac-os-high-sierra-dual-boot/</guid>
      <description>はじめに 個人的にLinuxデスクトップの機運が高まってきたので、Ubuntu 17.10のデスクトップ環境を試してみました。 例によって自分用メ</description>
    </item>
    
    <item>
      <title>Ubuntu 16.04 LTSでLXD 2.0をセットアップして使ってみる</title>
      <link>https://hnakamur.github.io/blog/content/post/2016/05/07/start-using-lxd-2.0-on-ubuntu-16.04/</link>
      <pubDate>Sat, 07 May 2016 14:12:49 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2016/05/07/start-using-lxd-2.0-on-ubuntu-16.04/</guid>
      <description>参考記事 公式ドキュメントのLinux Containers - LXD - はじめに - コマンドラインによくまとまっているのですが、より詳細には The LXD 2.0 Story (Prologue) | Ubuntu Insights にリストアップ</description>
    </item>
    
    <item>
      <title>Ubuntu 16.04 LTSでLXD 2.0を試してみた</title>
      <link>https://hnakamur.github.io/blog/content/post/2016/05/07/tried-lxd-2.0-on-ubuntu-16.04/</link>
      <pubDate>Sat, 07 May 2016 14:12:49 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2016/05/07/tried-lxd-2.0-on-ubuntu-16.04/</guid>
      <description>はじめに LXC 2.0でCentOS 7のコンテナを動かしてみた · hnakamur&#39;s blog at githubでLXC 2.0を試しましたが、今度はLXD 2.0を試してみました</description>
    </item>
    
    <item>
      <title>Ubuntuでホームディレクトリを暗号化するのを止めた</title>
      <link>https://hnakamur.github.io/blog/content/post/2016/05/02/uninstall-encrypted-home-on-ubuntu/</link>
      <pubDate>Mon, 02 May 2016 12:28:08 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2016/05/02/uninstall-encrypted-home-on-ubuntu/</guid>
      <description>背景 MacをPXEサーバにしてExpress5800/S70タイプRBにUbuntu16.04をインストールしてみた · hnakamur&#39;s blog at githubでホ</description>
    </item>
    
    <item>
      <title>Ubuntu 16.04でNo-IPのダイナミックDNSサービスを使ってみた</title>
      <link>https://hnakamur.github.io/blog/content/post/2016/05/02/use-no-ip-dynamic-dns-on-ubuntu-16.04/</link>
      <pubDate>Mon, 02 May 2016 09:39:31 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2016/05/02/use-no-ip-dynamic-dns-on-ubuntu-16.04/</guid>
      <description>背景 MacをPXEサーバにしてExpress5800/S70タイプRBにUbuntu16.04をインストールしてみた · hnakamur&#39;s blog at githubで自</description>
    </item>
    
    <item>
      <title>MacをPXEサーバにしてExpress5800/S70タイプRBにUbuntu16.04をインストールしてみた</title>
      <link>https://hnakamur.github.io/blog/content/post/2016/05/01/install_ubuntu_xenial_with_pxe_boot/</link>
      <pubDate>Sun, 01 May 2016 22:36:19 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2016/05/01/install_ubuntu_xenial_with_pxe_boot/</guid>
      <description>背景 Goで書いたプログラムをMacBook Pro上で負荷試験をしていたら、ビーチボールカーソルが回りっぱなしになって大変でした。そういえば、</description>
    </item>
    
    <item>
      <title>Ubuntu 14.04のPython3でvenvを使う手順のメモ</title>
      <link>https://hnakamur.github.io/blog/content/post/2015/07/26/use_python3_venv_on_ubuntu_14.04/</link>
      <pubDate>Sun, 26 Jul 2015 23:09:17 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/content/post/2015/07/26/use_python3_venv_on_ubuntu_14.04/</guid>
      <description>Ubuntu 14.04のPython3でvenv環境をつくろうとしたらエラーになったのですが、thefourtheye&#39;s Tech Blog: Python&#39;s venv problem with ensurepip in Ubuntu</description>
    </item>
    
  </channel>
</rss>