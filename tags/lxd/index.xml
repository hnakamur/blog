<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lxd on hnakamur&#39;s blog</title>
    <link>https://hnakamur.github.io/blog/tags/lxd/</link>
    <description>Recent content in Lxd on hnakamur&#39;s blog</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 21 Oct 2019 06:05:00 +0900</lastBuildDate>
    <atom:link href="https://hnakamur.github.io/blog/tags/lxd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>multipassのVM作成時にcloud-initでLXDをセットアップ</title>
      <link>https://hnakamur.github.io/blog/2019/10/21/setup-lxd-on-multipass-using-cloud-init/</link>
      <pubDate>Mon, 21 Oct 2019 06:05:00 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2019/10/21/setup-lxd-on-multipass-using-cloud-init/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/CanonicalLtd/multipass&#34;&gt;multipass&lt;/a&gt; ではVMの作成時に &lt;code&gt;multipass launch&lt;/code&gt; の &lt;code&gt;--cloud-init&lt;/code&gt; オプションで &lt;a href=&#34;https://github.com/cloud-init/cloud-init&#34;&gt;cloud-init&lt;/a&gt; を使って初期化を行えます。&lt;/p&gt;&#xA;&lt;p&gt;LXD をセットアップする手順を試行錯誤したのでメモです。&lt;/p&gt;&#xA;&lt;h1 id=&#34;参考資料&#34;&gt;参考資料&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloudinit.readthedocs.io/en/latest/topics/modules.html&#34;&gt;cloud-init の Modules のドキュメント&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cloud-init/cloud-init/blob/ubuntu/19.2-36-g059d049c-0ubuntu2_18.04.1/cloudinit/config/cc_lxd.py&#34;&gt;Ubuntu 18.04 LTS の cloud-init の cc_lxd.py のソース&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;cloud-initの設定ファイル例その1&#34;&gt;cloud-initの設定ファイル例その1&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;まず apt の設定でURLを日本のミラーサイトにします。&lt;/li&gt;&#xA;&lt;li&gt;zfs でループバックのストレージを 80GB で作成します。&lt;/li&gt;&#xA;&lt;li&gt;LXD のストレージバックエンドを zfs にします。&lt;/li&gt;&#xA;&lt;li&gt;LXDのブリッジをデフォルト設定で新規作成します。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#cloud-config&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;en_US.utf8&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Asia/Tokyo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;package_upgrade&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;package_reboot_if_required&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;primary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;arches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;amd64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://jp.archive.ubuntu.com/ubuntu/&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lxd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;storage_backend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;zfs&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;storage_create_loop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;bridge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;lxdbr0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上記のファイルを &lt;code&gt;lxd-cloud-config.yml&lt;/code&gt; などお好みの名前で保存し、以下のコマンドを実行してVMを作成・起動します。ディスクサイズは上記の zfs のプールサイズ80GBにシステム領域で20GBを使う想定で合計100GBとしています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDでUbuntuコンテナにロケールとタイムゾーンを設定するプロファイル</title>
      <link>https://hnakamur.github.io/blog/2019/08/15/lxd-profile-to-set-locale-and-timezone-to-ubuntu-container/</link>
      <pubDate>Thu, 15 Aug 2019 12:45:00 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2019/08/15/lxd-profile-to-set-locale-and-timezone-to-ubuntu-container/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.simos.info/how-to-preconfigure-lxd-containers-with-cloud-init/&#34;&gt;How to preconfigure LXD containers with cloud-init – Mi blog lah!&lt;/a&gt; に cloud-init を使って Ubuntu コンテナの初期化時にロケールとタイムゾーンを設定する方法が紹介されていたのでメモしておきます。&lt;/p&gt;&#xA;&lt;h1 id=&#34;ubuntu-用のプロファイル作成&#34;&gt;Ubuntu 用のプロファイル作成&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2019/08/15/lxd-container-templates/&#34;&gt;LXDでコンテナの初期化に使われるテンプレート&lt;/a&gt; に書いたように CentOS 7 コンテナは cloud-init 非対応ですので、 Ubuntu 用のプロファイルを作成して、そこにロケールとタイムゾーンの設定を入れることにします。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDでコンテナの初期化に使われるテンプレート</title>
      <link>https://hnakamur.github.io/blog/2019/08/15/lxd-container-temlates/</link>
      <pubDate>Thu, 15 Aug 2019 11:00:00 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2019/08/15/lxd-container-temlates/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cloudinit.readthedocs.io/en/latest/topics/dir_layout.html&#34;&gt;Custom network configuration with cloud-init - LXD - system container manager&lt;/a&gt; に説明がありますが、LXDのコンテナイメージにはいくつかのテンプレートファイルがメタデータとして含まれていて、コンテナの初期化の際に使用されます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>macOS→VagrantのUbuntu→LXDコンテナへのポートフォワーディング</title>
      <link>https://hnakamur.github.io/blog/2018/07/05/port-forwarding-macos-vagrant-lxd/</link>
      <pubDate>Thu, 05 Jul 2018 16:20:00 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2018/07/05/port-forwarding-macos-vagrant-lxd/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2018/07/05/install-lxd-on-ubuntu-18.04-lts-on-vagrant/&#34;&gt;VagrantでUbuntu 18.04 LTSとLXDをインストールする手順&lt;/a&gt; で構築したLXDの環境で、macOS→VagrantのUbuntu→LXDコンテナへのポートフォワーディングをしたのでメモです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>VagrantでUbuntu 18.04 LTSとLXDをインストールする手順</title>
      <link>https://hnakamur.github.io/blog/2018/07/05/install-lxd-on-ubuntu-18.04-lts-on-vagrant/</link>
      <pubDate>Thu, 05 Jul 2018 15:40:00 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2018/07/05/install-lxd-on-ubuntu-18.04-lts-on-vagrant/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;&#xA;&lt;p&gt;私自身は職場でも自宅でも Ubuntu MATE 18.04 LTS を使っていてVagrantはもう使っていません。&#xA;ですが職場の同僚が macOS を使っていてLXDの環境をセットアップするのに少々手間どったのでメモしておきます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDのコンテナイメージのエクスポート・インポート</title>
      <link>https://hnakamur.github.io/blog/2018/07/05/export-and-import-lxd-container-image/</link>
      <pubDate>Thu, 05 Jul 2018 14:50:00 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2018/07/05/export-and-import-lxd-container-image/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2018/07/04/saml2-single-sign-on-with-nginx-and-shibboleth/&#34;&gt;nginxとshibbolethでSAML2のシングルサインオンを試してみた&lt;/a&gt; で使ったCentOS7のLXDコンテナのイメージをエクスポートし、別のマシンにコピーしてインポートするのを試してみたのでメモです。&lt;/p&gt;&#xA;&lt;p&gt;LXD 3.2で試しました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDのproxyを使ってポートフォワーディング</title>
      <link>https://hnakamur.github.io/blog/2018/07/05/port-forwarding-using-lxd-proxy/</link>
      <pubDate>Thu, 05 Jul 2018 08:50:00 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2018/07/05/port-forwarding-using-lxd-proxy/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;&#xA;&lt;p&gt;LXDのコンテナでnginxを動かして、ホストからChromeなどのブラウザでアクセスしたいことがよくあります。&lt;/p&gt;&#xA;&lt;p&gt;LXDのイシューを見るとiptablesで実現可能とのことなのですが、iptablesとネットワークに弱い私がコマンド例を見て雰囲気で実行してもうまくできず、回避策としてホストでnginxを動かしてリバースプロキシでLXDコンテナのnginxに繋いで使っていました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDのdnsmasqで名前解決するための設定</title>
      <link>https://hnakamur.github.io/blog/2017/03/26/modify-resolv-conf-for-lxd-dnsmasq/</link>
      <pubDate>Sun, 26 Mar 2017 09:00:00 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2017/03/26/modify-resolv-conf-for-lxd-dnsmasq/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;p&gt;Ubuntu 16.04のLXDでホストマシンでコンテナ名で名前解決するための設定メモです。&#xA;ブリッジを使ったネットワーク構成での話です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ip a show dev lxdbr0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;4: lxdbr0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP group default qlen 1000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    link/ether fe:47:a7:ef:13:80 brd ff:ff:ff:ff:ff:ff&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    inet 10.155.92.1/24 scope global lxdbr0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       valid_lft forever preferred_lft forever&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    inet6 fe80::fc47:a7ff:feef:1380/64 scope link&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       valid_lft forever preferred_lft forever&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;正しいと思われる方法&#34;&gt;正しいと思われる方法&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.hiroom2.com/2016/06/19/ubuntu-16-04-lxd-lxc%E3%81%A7%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%92%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E3%82%8B/&#34;&gt;Ubuntu 16.04: LXD/LXCでコンテナを立ち上げる - Narrow Escape&lt;/a&gt; にあるように&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDでネストした非特権コンテナを試してみた</title>
      <link>https://hnakamur.github.io/blog/2017/03/21/tried-nested-unprivileged-lxd-containers/</link>
      <pubDate>Tue, 21 Mar 2017 21:00:00 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2017/03/21/tried-nested-unprivileged-lxd-containers/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/ten_forward/status/844107303099932676&#34;&gt;https://twitter.com/ten_forward/status/844107303099932676&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/ten_forward/status/844142416282054658&#34;&gt;https://twitter.com/ten_forward/status/844142416282054658&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;というツイートを受けて自分でもLXDでネストした非特権コンテナを試してみました。&#xA;環境はUbuntu 16.04です。&#xA;lxdのバージョンは2.0.9です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXD で privileged な CentOS 7コンテナを作る</title>
      <link>https://hnakamur.github.io/blog/2016/10/22/lxd-privileged-centos-container/</link>
      <pubDate>Sat, 22 Oct 2016 18:54:49 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/10/22/lxd-privileged-centos-container/</guid>
      <description>&lt;p&gt;小ネタのメモです。&lt;/p&gt;&#xA;&lt;p&gt;先日 LXD 2.0.5 で CentOS 7 コンテナを起動して &lt;code&gt;journalctl -xe&lt;/code&gt; を実行すると以下のようなエラーが出ていました。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Oct 22 09:53:58 centos systemd-sysctl[36]: Failed to write &amp;#39;16&amp;#39; to &amp;#39;/proc/sys/kernel/sysrq&amp;#39;: Permission denied&#xA;Oct 22 09:53:58 centos systemd-sysctl[36]: Failed to write &amp;#39;1&amp;#39; to &amp;#39;/proc/sys/fs/protected_hardlinks&amp;#39;: Permission denied&#xA;Oct 22 09:53:58 centos systemd-sysctl[36]: Failed to write &amp;#39;1&amp;#39; to &amp;#39;/proc/sys/kernel/core_uses_pid&amp;#39;: Permission denied&#xA;Oct 22 09:53:58 centos systemd-sysctl[36]: Failed to write &amp;#39;1&amp;#39; to &amp;#39;/proc/sys/fs/protected_symlinks&amp;#39;: Permission denied&#xA;Oct 22 09:53:58 centos systemd-remount-fs[35]: /bin/mount for / exited with exit status 32.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;コンテナ作成時に以下のように config で &lt;code&gt;security.privileged&lt;/code&gt; を true に設定しておけば出なくなりました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pacemakerを使ってPostgreSQLのアクティブ・スタンバイ(1&#43;1構成)を試してみた</title>
      <link>https://hnakamur.github.io/blog/2016/08/21/experiment-postgresql-active-standby-cluster-using-pacemaker/</link>
      <pubDate>Sun, 21 Aug 2016 11:23:01 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/08/21/experiment-postgresql-active-standby-cluster-using-pacemaker/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;p&gt;STONITH無し、quorum無しのアクティブ・スタンバイ(1+1構成)がとりあえず動くところまでは来たので、一旦メモです。&lt;/p&gt;&#xA;&lt;h2 id=&#34;参考資料&#34;&gt;参考資料&lt;/h2&gt;&#xA;&lt;p&gt;以下の資料と連載記事がわかりやすくて非常に参考になりました。ありがとうございます！&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDのdnsmasqの固定IP設定をSIGHUPで更新する</title>
      <link>https://hnakamur.github.io/blog/2016/08/12/update-lxd-dnsmasq-dhcp-hosts-config-with-sighup/</link>
      <pubDate>Fri, 12 Aug 2016 06:38:18 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/08/12/update-lxd-dnsmasq-dhcp-hosts-config-with-sighup/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2016/05/07/how-to-use-fixed-ip-address-for-a-lxd-container/&#34;&gt;LXDコンテナで固定IPアドレスを使うための設定 · hnakamur&amp;rsquo;s blog at github&lt;/a&gt; では &lt;code&gt;/etc/dnsmasq.conf&lt;/code&gt; に直接 &lt;code&gt;dhcp-host&lt;/code&gt; で設定を書いていましたが、変更するためには &lt;code&gt;lxd-bridge&lt;/code&gt; の再起動が必要でした。&lt;/p&gt;&#xA;&lt;p&gt;その後 &lt;a href=&#34;http://manpages.ubuntu.com/manpages/xenial/en/man8/dnsmasq.8.html&#34;&gt;Ubuntu Manpage: dnsmasq - A lightweight DHCP and caching DNS server.&lt;/a&gt; を見て &lt;code&gt;--dhcp-hostsfile=&amp;lt;path&amp;gt;&lt;/code&gt; または &lt;code&gt;--dhcp-hostsdir=&amp;lt;path&amp;gt;&lt;/code&gt; を使っておけば &lt;code&gt;lxd-bridge&lt;/code&gt; を再起動しなくても &lt;code&gt;dnsmasq&lt;/code&gt; に &lt;code&gt;SIGHUP&lt;/code&gt; を送れば更新できることを知りました。 &lt;code&gt;--dhcp-hostsdir=&amp;lt;path&amp;gt;&lt;/code&gt; の場合は、指定したディレクトリ以下のファイルを追加・更新する場合は SIGHUP すら不要で、ファイルを削除した後に反映するときだけ SIGHUP が必要です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDのDHCPで使っていないIPアドレスを一括で解放するスクリプトを書いた</title>
      <link>https://hnakamur.github.io/blog/2016/08/11/release-all-unused-addresses-of-lxd-bridge/</link>
      <pubDate>Thu, 11 Aug 2016 22:58:21 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/08/11/release-all-unused-addresses-of-lxd-bridge/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2016/05/07/how-to-use-fixed-ip-address-for-a-lxd-container/&#34;&gt;LXDコンテナで固定IPアドレスを使うための設定 · hnakamur&amp;rsquo;s blog at github&lt;/a&gt; の設定を行ってもIPアドレスが指定通りにならないことがありました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;journal -xe&lt;/code&gt; で見てみると&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Aug 11 22:46:55 bai1b7faf04 dnsmasq-dhcp[11082]: not using configured address 10.155.92.102 because it is leased to 00:16:3e:1e:08:8a&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;というメッセージが出ていて、他のMACアドレスに貸出中になっています。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDコンテナでPostgreSQLの非同期リプリケーションを試してみた</title>
      <link>https://hnakamur.github.io/blog/2016/07/23/tried-postgresql-async-replication-in-lxd-containers/</link>
      <pubDate>Sat, 23 Jul 2016 21:13:52 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/07/23/tried-postgresql-async-replication-in-lxd-containers/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://lets.postgresql.jp/documents/technical/replication/1/&#34;&gt;ストリーミング・レプリケーションの構築 — Let&amp;rsquo;s Postgres&lt;/a&gt; と &lt;a href=&#34;http://d.hatena.ne.jp/hiroe_orz17/20111113/1321180635&#34;&gt;PostgreSQL9.1ためしてみた【非同期レプリケーション編】 - ごろねこ日記&lt;/a&gt; を読んで、2台のLXDコンテナを使ってPostgreSQLの非同期リプリケーションを試してみたのでメモです。&lt;/p&gt;&#xA;&lt;p&gt;また&lt;a href=&#34;https://www.packtpub.com/big-data-and-business-intelligence/postgresql-replication-second-edition&#34;&gt;PostgreSQL Replication - Second Edition | PACKT Books&lt;/a&gt;が $10 と安かったので、買って非同期レプリケーションの章まで読みました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDのREST APIクライアントライブラリpylxdを試してみた</title>
      <link>https://hnakamur.github.io/blog/2016/05/07/tried-pylxd/</link>
      <pubDate>Sat, 07 May 2016 21:17:35 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/05/07/tried-pylxd/</guid>
      <description>&lt;p&gt;Python Package Index (PyPI)の &lt;a href=&#34;https://pypi.python.org/pypi/pylxd/2.0.0&#34;&gt;pylxd 2.0.0&lt;/a&gt;のページにインストール方法と使い方の例が書いてあるので、これに沿って試しました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;インストール&#34;&gt;インストール&lt;/h2&gt;&#xA;&lt;p&gt;Ubuntu 16.04だとaptでインストール可能なのでそちらでインストールしました。Python3用のpython3-pylxdパッケージとPython2用のpython-pylxdパッケージがありますが、今後Ansibleのモジュールを作ることを想定してPython2用のパッケージをインストールして試してみました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDのREST APIをcurlで試してみた</title>
      <link>https://hnakamur.github.io/blog/2016/05/07/tried-lxd-rest-api-with-curl/</link>
      <pubDate>Sat, 07 May 2016 21:17:34 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/05/07/tried-lxd-rest-api-with-curl/</guid>
      <description>&lt;h2 id=&#34;lxdのrest-api&#34;&gt;LXDのREST API&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://linuxcontainers.org/ja/lxd/rest-api/&#34;&gt;Linux Containers - LXD - REST API&lt;/a&gt;と&lt;a href=&#34;https://github.com/lxc/lxd/blob/master/doc/rest-api.md&#34;&gt;lxd/rest-api.md at master · lxc/lxd&lt;/a&gt;にLXDのREST APIについて説明があります。&lt;/p&gt;&#xA;&lt;p&gt;また&lt;a href=&#34;https://github.com/lxc/lxd#using-the-rest-api&#34;&gt;Using the REST API&lt;/a&gt;に &lt;code&gt;curl&lt;/code&gt; コマンドでのAPI呼び出し例が書かれていました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>AnsibleのLXDコネクションプラグインを試してみた</title>
      <link>https://hnakamur.github.io/blog/2016/05/07/tried-ansible-lxd-connection-plugin/</link>
      <pubDate>Sat, 07 May 2016 20:32:13 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/05/07/tried-ansible-lxd-connection-plugin/</guid>
      <description>&lt;p&gt;LXDを使うとなるとAnsibleのLXDコネクションプラグインが欲しいなと思って&lt;a href=&#34;https://github.com/ansible/ansible&#34;&gt;ansible/ansibleのgithubのレポジトリ&lt;/a&gt;を眺めていたら &lt;a href=&#34;https://github.com/ansible/ansible/blob/fca5ba153e9258d6a9a28c418d8339d507eee81c/lib/ansible/plugins/connection/lxd.py&#34;&gt;lib/ansible/plugins/connection/lxd.py&lt;/a&gt; に既に作られていることに気付きました。&lt;/p&gt;&#xA;&lt;p&gt;ソースを見ると &lt;code&gt;lxc&lt;/code&gt; コマンドを使った実装になっていました。aptでインストールしたansible 2.0.0.2にこのファイルだけ追加して使えないか試してみたのですが、 &lt;code&gt;AttributeError: &#39;PlayContext&#39; object has no attribute &#39;executable&#39;&lt;/code&gt; というエラーが出て使えませんでした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXDコンテナで固定IPアドレスを使うための設定</title>
      <link>https://hnakamur.github.io/blog/2016/05/07/how-to-use-fixed-ip-address-for-a-lxd-container/</link>
      <pubDate>Sat, 07 May 2016 18:01:51 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/05/07/how-to-use-fixed-ip-address-for-a-lxd-container/</guid>
      <description>&lt;h2 id=&#34;2016-08-12-追記&#34;&gt;2016-08-12 追記&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;lxd-bridge&lt;/code&gt; サービスを再起動せずに固定IPアドレス設定を更新できるようにするための設定方法を &lt;a href=&#34;https://hnakamur.github.io/blog/blog/2016/08/12/update-lxd-dnsmasq-dhcp-hosts-config-with-sighup/&#34;&gt;LXDのdnsmasqの固定IP設定をSIGHUPで更新する · hnakamur&amp;rsquo;s blog at github&lt;/a&gt; に書きました。こちらのほうがお勧めです。&lt;/p&gt;&#xA;&lt;h2 id=&#34;設定まとめ&#34;&gt;設定まとめ&lt;/h2&gt;&#xA;&lt;p&gt;自分が後から参照することを想定して先に設定方法をまとめます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXCの特定の1つのコンテナの起動状態をシェルスクリプトで確認したいときのお勧めの方法</title>
      <link>https://hnakamur.github.io/blog/2016/05/07/script-to-check-running-status-of-lxd-container/</link>
      <pubDate>Sat, 07 May 2016 14:12:49 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/05/07/script-to-check-running-status-of-lxd-container/</guid>
      <description>&lt;h2 id=&#34;イマイチな方法1-lxc-listの出力をawkで加工&#34;&gt;イマイチな方法1: lxc listの出力をawkで加工&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;lxc list -h&lt;/code&gt; を見ると &lt;code&gt;lxc list [resource] [filters] [--format table|json] [-c columns] [--fast]&lt;/code&gt; というコマンドラインになっていて、 &lt;code&gt;-c&lt;/code&gt; オプションで表示するカラムを指定可能です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu 16.04 LTSでLXD 2.0をセットアップして使ってみる</title>
      <link>https://hnakamur.github.io/blog/2016/05/07/start-using-lxd-2.0-on-ubuntu-16.04/</link>
      <pubDate>Sat, 07 May 2016 14:12:49 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/05/07/start-using-lxd-2.0-on-ubuntu-16.04/</guid>
      <description>&lt;h2 id=&#34;参考記事&#34;&gt;参考記事&lt;/h2&gt;&#xA;&lt;p&gt;公式ドキュメントの&lt;a href=&#34;https://linuxcontainers.org/ja/lxd/getting-started-cli/&#34;&gt;Linux Containers - LXD - はじめに - コマンドライン&lt;/a&gt;によくまとまっているのですが、より詳細には &lt;a href=&#34;http://insights.ubuntu.com/2016/03/14/the-lxd-2-0-story-prologue/&#34;&gt;The LXD 2.0 Story (Prologue) | Ubuntu Insights&lt;/a&gt; にリストアップされている記事がわかりやすかったです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu 16.04 LTSでLXD 2.0を試してみた</title>
      <link>https://hnakamur.github.io/blog/2016/05/07/tried-lxd-2.0-on-ubuntu-16.04/</link>
      <pubDate>Sat, 07 May 2016 14:12:49 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2016/05/07/tried-lxd-2.0-on-ubuntu-16.04/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2016/04/19/run_centos7_containers_on_lxc2/&#34;&gt;LXC 2.0でCentOS 7のコンテナを動かしてみた · hnakamur&amp;rsquo;s blog at github&lt;/a&gt;でLXC 2.0を試しましたが、今度はLXD 2.0を試してみました。&lt;/p&gt;&#xA;&lt;p&gt;実は私は、コンテナをローカルホストでしか動かさないならLXC、リモートホストでも動かすならLXDという使い分けなのかなと漠然と思っていました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LXD 0.7ではlxc execでシェルの対話操作もできるようになっていました</title>
      <link>https://hnakamur.github.io/blog/2015/04/23/try-lxd-0.7-with-vagrant/</link>
      <pubDate>Thu, 23 Apr 2015 00:08:30 +0900</pubDate>
      <guid>https://hnakamur.github.io/blog/2015/04/23/try-lxd-0.7-with-vagrant/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/blog/2014/12/01/lxd-the-linux-container-daemon/&#34;&gt;LXDを試してみた · hnakamur&amp;rsquo;s blog at github&lt;/a&gt;の記事を書いて以来、LXD触る時間を作れてなかったのですが、久々に試してみました。&lt;/p&gt;&#xA;&lt;p&gt;今では&lt;a href=&#34;https://github.com/lxc/lxd&#34;&gt;lxc/lxd&lt;/a&gt;にVagrantfileが同梱されているので、それを使うだけで簡単に試せます。&lt;/p&gt;&#xA;&lt;p&gt;VirtualBox 4.3.26, Vagrant 1.7.2, OS X Yosemiteという環境で試しました。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
