<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hnakamur&#39;s blog at github</title>
    <link>https://hnakamur.github.io/blog/tags/osx/index.xml</link>
    <description>Recent content on hnakamur&#39;s blog at github</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <atom:link href="https://hnakamur.github.io/blog/tags/osx/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Homebrewを辞めてMacPorts 2.3.3を入れてpkgngをビルドしてみた</title>
      <link>https://hnakamur.github.io/blog/2015/06/11/tried_macports/</link>
      <pubDate>Thu, 11 Jun 2015 01:09:08 +0900</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2015/06/11/tried_macports/</guid>
      <description>

&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/shibu_jp/status/598332736638582785&#34;&gt;https://twitter.com/shibu_jp/status/598332736638582785&lt;/a&gt; と &lt;a href=&#34;http://gihyo.jp/admin/serial/01/bsd-yomoyama/0002&#34;&gt;第2回　パッケージ管理システム「pkg 1.5」と基本的な使い方：BSD界隈四方山話｜gihyo.jp … 技術評論社&lt;/a&gt;で、実験段階ですがOS Xもサポート対象となったという話を見て &lt;code&gt;pkg&lt;/code&gt; と &lt;code&gt;MacPorts&lt;/code&gt; をシームレスに組み合わせて使えるかが気になっていました。&lt;/p&gt;

&lt;p&gt;FreeBSDではpkgコマンドでバイナリパッケージをインストールし、Ports Collectionでソースからビルドというのが簡単にできるようになっているのですが、上記の記事によるとpkgとPorts Collectionがシームレスに連動しているそうです。&lt;/p&gt;

&lt;p&gt;なので、OS X上では &lt;code&gt;pkg&lt;/code&gt; と &lt;code&gt;MacPorts&lt;/code&gt; が連動するのかな、するといいなあ、と思って、まずは &lt;code&gt;MacPorts&lt;/code&gt; を試してみます。&lt;/p&gt;

&lt;p&gt;私はだいぶ前に MacPorts から Homebrew に切り替えていたので、MacPortsは久々に試します。&lt;/p&gt;

&lt;h2 id=&#34;確認した環境&#34;&gt;確認した環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;MacBook Pro (Retina, Mid 2012)&lt;/li&gt;
&lt;li&gt;OS X Yosemite 10.10.3&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;homebrewのアンインストール&#34;&gt;Homebrewのアンインストール&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/UmedaTakefumi/items/dc52f008586cbf06582f&#34;&gt;Homebrewをアンインストールするには - Qiita&lt;/a&gt;を参考にといいつつ、いきなりバッサリ消すとなにかあったときに戻れないので、アンインストールはせずにHomebrewでインストールしたパッケージのサービスを停止して、/usr/localディレクトリを/usr/local.bakに退避しておくことにします。移行が無事完了したらアンインストールするということで。&lt;/p&gt;

&lt;p&gt;以下のコマンドを実行して~/Library/LaunchAgents/にシンボリックリンクを張ったサービスを停止・解除します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for f in ~/Library/LaunchAgents/homebrew.*; do launchctl unload $f; done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/usr/localを/usr/local.bakに退避します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mv /usr/local /usr/local.bak
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;macportsのインストール&#34;&gt;MacPortsのインストール&lt;/h1&gt;

&lt;p&gt;MacPortsのバイナリパッケージをダウンロードしてインストールします。MacPorts-2.3.3-10.10-Yosemite.pkgをFinderでダブルクリックしてもいいのですが、将来スクリプトで自動化することを見据えて、OS Xの &lt;code&gt;installer&lt;/code&gt; コマンドでインストールしてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/Downloads
curl -O https://distfiles.macports.org/MacPorts/MacPorts-2.3.3-10.10-Yosemite.pkg
sudo installer -pkg MacPorts-2.3.3-10.10-Yosemite.pkg -target /
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://guide.macports.org/#installing.shell&#34;&gt;2.5.1. The Postflight Script&lt;/a&gt;の説明に従って、環境変数PATHとMANPATHの設定を追加します。以下はシェルはbashを使っていて~/.bash_profileに追加する場合の例です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;lt;&amp;lt;&#39;EOF&#39; &amp;gt;&amp;gt; ~/.bash_profile
export PATH=/opt/local/bin:/opt/local/sbin:$PATH
export MANPATH=/opt/local/share/man:$MANPATH
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下のコマンドを実行して、上で追加した設定を有効にします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;exec $SHELL -l
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;portコマンドにPATHが通ったことを確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ which port
/opt/local/bin/port
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://www.macports.org/install.php#pkg&#34;&gt;Mac OS X Package (.pkg) Installer&lt;/a&gt;の説明に従って、MacPorts自体のアップデートを行います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo port -v selfupdate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;出力の最後に以下のように表示されたので、既に最新版になっていたそうです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---&amp;gt;  MacPorts base is already the latest version

The ports tree has been updated. To upgrade your installed ports, you should run
  port upgrade outdated
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記の説明によるとインストールしたportsをアップグレードするときは &lt;code&gt;ports upgrade outdated&lt;/code&gt; と実行すればよいそうです。&lt;/p&gt;

&lt;h1 id=&#34;pkgngをソースからビルド&#34;&gt;pkgngをソースからビルド&lt;/h1&gt;

&lt;p&gt;FreeBSDのpkgはpkgngと呼ばれることもあります。&lt;a href=&#34;https://wiki.freebsd.org/pkgng&#34;&gt;pkgng - FreeBSD Wiki&lt;/a&gt;によるとngはNext Generationの略のようです。&lt;/p&gt;

&lt;p&gt;githubにソースレポジトリ &lt;a href=&#34;https://github.com/freebsd/pkg&#34;&gt;freebsd/pkg&lt;/a&gt;があったので、ソースからビルドして入れてみます。&lt;/p&gt;

&lt;p&gt;ホームディレクトリ直下にpkgディレクトリを作るようにして入れてみました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd
git clone https://github.com/freebsd/pkg
cd pkg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;git tag&lt;/code&gt; で確認すると最新のリリースは 1.5.3 でしたので、それにしてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout 1.5.3
git checkout -b 1.5.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/freebsd/pkg#building-pkg-using-sources-from-git&#34;&gt;freebsd/pkg&lt;/a&gt;を参考にやってみました。この手順ではビルドに必要なパッケージをFreeBSDにインストール済みの古いバージョンの &lt;code&gt;pkg&lt;/code&gt; コマンドで入れていますが、OS Xの場合は無いのでMacPortsで入れます。&lt;/p&gt;

&lt;p&gt;また &lt;code&gt;pkgconf&lt;/code&gt; はMacPortsでは &lt;code&gt;pkgconfig&lt;/code&gt; という名前なのでそこも変えています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo port install autoconf automake libtool pkgconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;./autogen.sh
./configure
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;./configure&lt;/code&gt; が以下のようにエラーになってしまいました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;…(略)…
checking for library containing archive_read_open... -larchive
checking archive.h usability... no
checking archive.h presence... no
checking for archive.h... no
configure: error: Unable to find the libarchive headers
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そこでlibarchiveをMacPortsでインストールしました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo port install libarchive
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;MacPortsでインストールしたパッケージを見つけてもらうため、&lt;a href=&#34;http://blog.francoismaillet.com/compile-against-libraries-installed-with-macports/&#34;&gt;Compile against libraries installed with MacPorts | Blog de François Maillet&lt;/a&gt;を参考に以下のようにオプションをつけて &lt;code&gt;./configure&lt;/code&gt; を再度実行しました。pkgのsrcディレクトリを見ると、pkgはC++ではなくCで実装されていますので、 &lt;code&gt;configure&lt;/code&gt; の引数もCPPFLAGSではなくCFLAGSにしています。
今度は &lt;code&gt;configure&lt;/code&gt; が成功しました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./configure CFLAGS=&amp;quot;-I/opt/local/include&amp;quot; LDFLAGS=&amp;quot;-L/opt/local/lib&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;configure&lt;/code&gt; の次は &lt;code&gt;make&lt;/code&gt; を実行します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1つ警告が出ました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;…(略)…
  CCLD     pkg-static
libtool: warning: complete static linking is impossible in this configuration
  CCLD     pkg
…(略)…
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;./configure --help&lt;/code&gt; してみると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  --with-staticonly       Only build the static version (default is no)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というオプションがあり、デフォルトではスタティックリンクするバージョンとしないバージョンの両方を作るようになっているようです。&lt;/p&gt;

&lt;p&gt;とりあえずスタティックリンクしないバージョンはビルドできているのでとりあえず先に進みます。&lt;/p&gt;

&lt;p&gt;以下のコマンドを実行してインストールします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/usr/localに以下のようなファイルとディレクトリが作られました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find /usr/local
/usr/local
/usr/local/etc
/usr/local/etc/bash_completion.d
/usr/local/etc/bash_completion.d/_pkg.bash
/usr/local/etc/periodic
/usr/local/etc/periodic/daily
/usr/local/etc/periodic/daily/411.pkg-backup
/usr/local/etc/periodic/daily/490.status-pkg-changes
/usr/local/etc/periodic/security
/usr/local/etc/periodic/security/410.pkg-audit
/usr/local/etc/periodic/security/460.pkg-checksum
/usr/local/etc/periodic/weekly
/usr/local/etc/periodic/weekly/400.status-pkg
/usr/local/etc/pkg.conf.sample
/usr/local/include
/usr/local/include/pkg.h
/usr/local/lib
/usr/local/lib/libpkg.3.dylib
/usr/local/lib/libpkg.dylib
/usr/local/lib/libpkg.la
/usr/local/lib/libpkg_static.a
/usr/local/lib/libpkg_static.la
/usr/local/libdata
/usr/local/libdata/pkgconfig
/usr/local/libdata/pkgconfig/pkg.pc
/usr/local/man
/usr/local/man/man3
/usr/local/man/man3/pkg_printf.3
/usr/local/man/man3/pkg_repos.3
/usr/local/man/man5
/usr/local/man/man5/pkg-repository.5
/usr/local/man/man5/pkg.conf.5
/usr/local/man/man8
/usr/local/man/man8/pkg-add.8
/usr/local/man/man8/pkg-alias.8
/usr/local/man/man8/pkg-annotate.8
/usr/local/man/man8/pkg-audit.8
/usr/local/man/man8/pkg-autoremove.8
/usr/local/man/man8/pkg-backup.8
/usr/local/man/man8/pkg-check.8
/usr/local/man/man8/pkg-clean.8
/usr/local/man/man8/pkg-config.8
/usr/local/man/man8/pkg-convert.8
/usr/local/man/man8/pkg-create.8
/usr/local/man/man8/pkg-delete.8
/usr/local/man/man8/pkg-fetch.8
/usr/local/man/man8/pkg-info.8
/usr/local/man/man8/pkg-install.8
/usr/local/man/man8/pkg-lock.8
/usr/local/man/man8/pkg-query.8
/usr/local/man/man8/pkg-register.8
/usr/local/man/man8/pkg-remove.8
/usr/local/man/man8/pkg-repo.8
/usr/local/man/man8/pkg-rquery.8
/usr/local/man/man8/pkg-search.8
/usr/local/man/man8/pkg-set.8
/usr/local/man/man8/pkg-shell.8
/usr/local/man/man8/pkg-shlib.8
/usr/local/man/man8/pkg-ssh.8
/usr/local/man/man8/pkg-static.8
/usr/local/man/man8/pkg-stats.8
/usr/local/man/man8/pkg-unlock.8
/usr/local/man/man8/pkg-update.8
/usr/local/man/man8/pkg-updating.8
/usr/local/man/man8/pkg-upgrade.8
/usr/local/man/man8/pkg-version.8
/usr/local/man/man8/pkg-which.8
/usr/local/man/man8/pkg.8
/usr/local/sbin
/usr/local/sbin/pkg
/usr/local/sbin/pkg-static
/usr/local/sbin/pkg2ng
/usr/local/share
/usr/local/share/zsh
/usr/local/share/zsh/site-functions
/usr/local/share/zsh/site-functions/_pkg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pkgコマンドとpkg-staticコマンドは/usr/local/sbinにインストールされていました。
&lt;code&gt;otool -L&lt;/code&gt; で確認すると両方ともダイナミックリンクになっていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ otool -L /usr/local/sbin/pkg
/usr/local/sbin/pkg:
        /usr/local/lib/libpkg.3.dylib (compatibility version 4.0.0, current version 4.0.0)
        /opt/local/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)
        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1213.0.0)
        /usr/lib/libutil.dylib (compatibility version 1.0.0, current version 1.0.0)
        /opt/local/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)
        /usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0)
        /opt/local/lib/libarchive.13.dylib (compatibility version 15.0.0, current version 15.2.0)
        /opt/local/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8)
        /opt/local/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.6)
        /opt/local/lib/liblzma.5.dylib (compatibility version 8.0.0, current version 8.1.0)
$ otool -L /usr/local/sbin/pkg-static
/usr/local/sbin/pkg-static:
        /usr/lib/libutil.dylib (compatibility version 1.0.0, current version 1.0.0)
        /opt/local/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)
        /opt/local/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)
        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1213.0.0)
        /usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0)
        /opt/local/lib/libarchive.13.dylib (compatibility version 15.0.0, current version 15.2.0)
        /opt/local/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8)
        /opt/local/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.6)
        /opt/local/lib/liblzma.5.dylib (compatibility version 8.0.0, current version 8.1.0)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/usr/local/sbinにはPATHが通っていなかったので、設定を変更して有効にしました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &#39;export PATH=/usr/local/sbin:$PATH&#39; &amp;gt;&amp;gt; ~/.bash_profile
exec $SHELL -l
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ which pkg
/usr/local/sbin/pkg
$ pkg --version
1.5.3-cfa5423
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というわけでビルドは出来ました。が OS X用のバイナリパッケージレポジトリの情報は見つけられず。&lt;/p&gt;

&lt;p&gt;pkgコマンドの使い方については&lt;a href=&#34;https://github.com/freebsd/pkg#a-quick-usage-introduction-to-pkg&#34;&gt;freebsd/pkg&lt;/a&gt;のREADMEに&lt;a href=&#34;https://github.com/freebsd/pkg#a-quick-usage-introduction-to-pkg&#34;&gt;A quick usage introduction to pkg&lt;/a&gt;というセクションがありました。&lt;/p&gt;

&lt;h1 id=&#34;情報収集中&#34;&gt;情報収集中&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=8828866&#34;&gt;Baseline Mac OS X Support merged into FreeBSD package manager | Hacker News&lt;/a&gt;にいくつか有用な情報がありました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=8829040&#34;&gt;This change was written by Landon Fuller, one of the founders of MacPorts. There&amp;hellip; | Hacker News&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;pkgngをOS X対応にするプルリクエスト &lt;a href=&#34;https://github.com/freebsd/pkg/pull/1113&#34;&gt;Baseline Mac OS X Support by landonf · Pull Request #1113 · freebsd/pkg&lt;/a&gt;はMacPorts創始者の1人によるもので、&lt;a href=&#34;https://github.com/freebsd/pkg/pull/1113#issuecomment-68063964&#34;&gt;Baseline Mac OS X Support by landonf · Pull Request #1113 · freebsd/pkg&lt;/a&gt;のコメントによるとMacPortsのtclで書いている部分をlibpkgを使って書き直すことが出来るかを模索するつもりらしいです。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=8829179&#34;&gt;You can already have that with pkgsrc for osx - joyent maintains the osx binary &amp;hellip; | Hacker News&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;このスレッドによるとpkgngがOS X対応する前から&lt;a href=&#34;http://pkgsrc.joyent.com/&#34;&gt;pkgsrc&lt;/a&gt;というパッケージ管理システムがあるそうです。Node.jsのJoyent, Inc.が作ってるんですね。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.saveosx.org/&#34;&gt;saveosx&lt;/a&gt;にYosemite 64bit用のバイナリパッケージがあるようです。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ということで、今後どうなっていくか要注目です。&lt;/p&gt;

&lt;h1 id=&#34;2015-06-13追記-pkgsrcについて訂正&#34;&gt;2015-06-13追記 pkgsrcについて訂正&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://www.pkgsrc.org/&#34;&gt;pkgsrc&lt;/a&gt;自体はFreeBSDのportsからフォークしてNetBSDで開発されているもので、Joyent, Inc.が提供しているのはSmartOS/illumos, Mac OS X, and Linux用のバイナリバッケージでした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://pkgsrc.joyent.com/&#34;&gt;pkgsrc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pkgsrc&#34;&gt;pkgsrc - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また &lt;a href=&#34;http://www.saveosx.org/&#34;&gt;saveosx&lt;/a&gt;は&lt;a href=&#34;https://github.com/cmacrae/saveosx&#34;&gt;cmacrae/saveosx&lt;/a&gt;を見るとOS X用のpkgsrcをインストールするためのスクリプトでした。パッケージ自体はJoyentが提供しているそうです。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>