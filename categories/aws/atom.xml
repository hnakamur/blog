<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AWS | hnakamur's blog at github]]></title>
  <link href="http://hnakamur.github.io/blog/categories/aws/atom.xml" rel="self"/>
  <link href="http://hnakamur.github.io/blog/"/>
  <updated>2014-09-07T17:26:51+09:00</updated>
  <id>http://hnakamur.github.io/blog/</id>
  <author>
    <name><![CDATA[Hiroaki Nakamura]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[EC2で同じリージョンの全ホストのプライベートIPを起動時にhostsに自動登録]]></title>
    <link href="http://hnakamur.github.io/blog/2013/02/16/aws-update-hosts-for-servers-in-same-region/"/>
    <updated>2013-02-16T18:31:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2013/02/16/aws-update-hosts-for-servers-in-same-region</id>
    <content type="html"><![CDATA[<p>Elastic IPの上限数にひっかかって使えない自体に遭遇したので作りました。</p>

<p><a href="http://aws.amazon.com/jp/contact-us/eip_limit_request/">Elastic IP アドレス上限緩和申請 | アマゾン ウェブ サービス（AWS 日本語）</a> から緩和申請できるようです。</p>

<p>が、申請完了画面で、3〜5営業日かかる、緊急の場合は、完了画面に表示されるCase Numberを添えて <a href="&#x6d;&#97;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x65;&#99;&#50;&#45;&#114;&#x65;&#x71;&#117;&#101;&#x73;&#x74;&#64;&#x61;&#x6d;&#97;&#122;&#111;&#110;&#46;&#x63;&#111;&#109;">&#101;&#x63;&#x32;&#45;&#x72;&#x65;&#113;&#x75;&#101;&#x73;&#x74;&#x40;&#x61;&#109;&#97;&#122;&#111;&#110;&#46;&#99;&#111;&#x6d;</a> に送るようにと書かれていました。</p>

<p>（Case Numberを添えてというのは今気付いた。再度メールしました。ブログに書くために読み返してよかった）</p>

<p>そこで、hostsにプライベートアドレスを登録するスクリプトを書くことにしました。</p>

<p><a href="http://frmmpgit.blog.fc2.com/blog-entry-123.html">EC2 - 動的プライベートIPアドレスをどうにかする | code up</a> を参考にしました。ありがとうございます。</p>

<p>最初は対象のホストの一覧を指定するようなスクリプトを書いていたのですが、ホストを増やすことを考えると編集と反映が面倒だと予想して、リージョン内の全ホストを一括登録することにしました。</p>

<h2>情報取得用のAIMユーザ作成</h2>

<p>AIMでUserを作ってUser PolicyにReadOnlyAccessを与えます。</p>

<h2>スクリプト設置</h2>

<p>以下の設定ファイルとスクリプトを設置します。</p>

<p>アクセスキーとシークレットキーは上で作ったユーザのものを設定します。</p>

<p>/root/.amazon_address_finder_key</p>

<pre><code>export AWS_ACCESS_KEY=${your_access_key_here}
export AWS_SECRET_KEY=${your_secret_key_here}
</code></pre>

<p>/usr/local/sbin/update_hosts.sh</p>

<pre><code>#!/bin/sh
. /root/.amazon_address_finder_key
region=`ec2-metadata | sed -n 's/^local-hostname: ip-[0-9-]*\.\(.*\)\.compute\.i
nternal/\1/p'`

ec2-describe-instances --region $region -H --show-empty-fields | gawk '
BEGIN {OFS="\t"; print "127.0.0.1", "localhost localhost.localdomain"}
/^INSTANCE/ {ip = $18}  
/^TAG/ {print ip, gensub(/.*\tName\t([^\t]*).*/, "\\1", $0)}  
' &gt; /etc/hosts
</code></pre>

<p>/etc/cron.d/update_hosts</p>

<pre><code>@reboot root /usr/local/sbin/update_hosts.sh
</code></pre>

<h2>実行</h2>

<p>これで、OS起動時にhostsが上書き更新されます。</p>

<p>インタンスのNameタグに設定した値がホスト名になります。</p>

<p>出力例</p>

<pre><code>127.0.0.1       localhost localhost.localdomain
10.132.102.199  web01
10.128.21.174   web02
10.120.32.111   app01
10.132.103.238  app02
</code></pre>

<h2>githubに移動しました</h2>

<p>さらにhostnameも更新するようにして、スクリプトが発展してきたので、
<a href="https://github.com/hnakamur/aws_scripts">hnakamur/aws_scripts · GitHub</a>
に移動しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IAM管理コンソールでAWSの管理画面用のユーザを作成]]></title>
    <link href="http://hnakamur.github.io/blog/2013/02/09/create-aim-user/"/>
    <updated>2013-02-09T09:37:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2013/02/09/create-aim-user</id>
    <content type="html"><![CDATA[<p>AWS (Amazon Web Services)の管理コンソールを複数人で使う場合に大元のIDとパスワードを共有するのは避けたい場合、IAMでユーザを作成するのがよいと<a href="https://twitter.com/fujiwara">@fujiwara</a>さんに教わりました。これは実際に試した時のメモです。</p>

<p>なお、IAMはIdentity and Access Managementの略です。</p>

<h2>管理者: AIMユーザのログインURLの設定</h2>

<p>初期状態では <a href="https://">https://</a>{ランダムな数字}.signin.aws.amazon.com/console のようなURLになっていますが、好きなサブドメインに変更が可能です。</p>

<ol>
<li>AWSの管理コンソールにログイン</li>
<li>[IAM]をクリック</li>
<li>左のメニューで[Dashboard]をクリック</li>
<li>[Create Account Alias]ボタンを押し、[Account Alias]にサブドメインを入力します。すると <a href="https://">https://</a>{入力したサブドメイン}.signin.aws.amazon.com/console がログインURLになります。</li>
</ol>


<p>元に戻したい場合は[Remove Account Alias]ボタンを押します。</p>

<h2>管理者: AIMユーザの作成</h2>

<h3>ユーザの作成とAPIアクセスキーのダウンロード</h3>

<ol>
<li>AWSの管理コンソールにログイン</li>
<li>[IAM]をクリック</li>
<li>左のメニューで[Users]をクリック</li>
<li>上のツールバーで[Create New Users]ボタンを押す</li>
<li>[Create User]ダイアログで[Enter User Names:]に作成したいユーザのIDを入力。

<ul>
<li>同時に5人までつくれるようです(実際に試したのは1人だけです)。</li>
<li>AWSサービスのAPIを使う場合は[Generate an access key for each User]チェックボックスをオンのままにしておきます。ここでオフにしていても後からキーを発行できるので、不明の場合はオフでいいです。</li>
</ul>
</li>
<li>[Create User]ダイアログで[Create]ボタンを押す</li>
<li>[Download Credentials]ボタンを押して、"User Name",&ldquo;Access Key Id&rdquo;,&ldquo;Secret Access Key"が書かれたCSVファイルをダウンロード</li>
<li>[Close Windows]ボタンを押す</li>
</ol>


<h3>ユーザの初期パスワード作成とダウンロード</h3>

<ol>
<li>ユーザ一覧でユーザを選択して、上のツールバーの[User Actions]ボタンを押すか、右クリックのポップアップメニューから[Manage Password]メニューを選択</li>
<li>[Manage Password]ダイアログで[Assign an auto-generated password]ラジオボタンを選択した状態で[Apply]ボタンを押す</li>
<li>[Download Credentials]ボタンを押し、"User Name",&ldquo;Password&rdquo;,&ldquo;Direct Signin Link"が書かれたCSVファイルをダウンロード</li>
<li>[Close Windows]ボタンを押す</li>
</ol>


<h2>利用者: 初回ログインとパスワード変更</h2>

<ol>
<li>&ldquo;User Name&rdquo;,&ldquo;Password&rdquo;,&ldquo;Direct Signin Link"が書かれたCSVファイルのURLをブラウザで開き、ID、パスワードを入力してログインします。</li>
<li>ツールバー右上のユーザIDのドロップダウンメニューを開き、[Security Credentials]を選択</li>
<li>現在のパスワードと新しいパスワードを入力して[Change Password]ボタンを押して変更</li>
</ol>


<h2>管理者: 利用者のパスワード変更</h2>

<p>ユーザ一覧でポップアップメニューの[Manage Password]メニューから変更できます。</p>

<h2>管理者: 利用者のAPIアクセスキー追加、削除</h2>

<p>ユーザ一覧でポップアップメニューの[Manage Access Keys]メニューから変更できます。</p>

<h2>管理者: 利用者のユーザ削除</h2>

<p>ユーザ一覧でポップアップメニューの[Delete User]メニューから削除できます。</p>
]]></content>
  </entry>
  
</feed>
