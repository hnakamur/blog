<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chef Solo on hnakamur&#39;s blog at github</title>
    <link>http://localhost:1313/blog/categories/chef-solo/</link>
    <description>Recent content in Chef Solo on hnakamur&#39;s blog at github</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Fri, 04 May 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/categories/chef-solo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CentOS6でchef-soloとknife-soloをセットアップ</title>
      <link>http://localhost:1313/blog/2012/05/04/setup-chef-solo-and-knife-solo-on-centos6/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2012/05/04/setup-chef-solo-and-knife-solo-on-centos6/</guid>
      <description>

&lt;h2 id=&#34;なぜ:4b0627b315e1a219f8d473e2d3addbcb&#34;&gt;なぜ？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://higelog.brassworks.jp/?p=654&#34;&gt;chef-soloで作業環境構築の自動化 | ひげろぐ&lt;/a&gt; を参考に、Chefサーバは使いたくないけど、chef-soloとknifeを使いたい！
ということで、そういう環境を作るためのスクリプトを作りました。
だいぶ前から試行錯誤してたけど、ようやくできたので公開。&lt;/p&gt;

&lt;h2 id=&#34;セットアップスクリプト:4b0627b315e1a219f8d473e2d3addbcb&#34;&gt;セットアップスクリプト&lt;/h2&gt;

&lt;p&gt;chef-soloやknifeはrootユーザで実行する想定です。&lt;/p&gt;

&lt;p&gt;このスクリプトではruby、rubygems、ruby-devel、make、gccをyumで、
chefとknife-soloをgemでインストールします。&lt;/p&gt;

&lt;p&gt;chef-soloやknife実行時にオプションをなるべく指定不要にするため、設定ファイルはデフォルトの場所に配置しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;/etc/chef/solo.rb&lt;/li&gt;
&lt;li&gt;/root/.chef/knife.rb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他の詳細は
&lt;a href=&#34;https://github.com/hnakamur/setup_linux/blob/master/centos6/install_chef-solo.sh&#34;&gt;install_chef-solo.sh&lt;/a&gt;
を参照してください。&lt;/p&gt;

&lt;p&gt;ちょっと注意が必要なのは、shのヒアドキュメントで&lt;code&gt;`hostname`&lt;/code&gt;が展開されるのを避けるために、&lt;code&gt;\`hostname\`&lt;/code&gt;とエスケープしていることです。
＃余談ですが、markdownだとバックスラッシュやバックティックはエスケープしないといけないんですね。&lt;/p&gt;

&lt;p&gt;knife.rbの設定は
&lt;a href=&#34;https://gist.github.com/1039666&#34;&gt;Base &amp;ldquo;knife&amp;rdquo; configuration for a standard chef-solo setup — Gist&lt;/a&gt; を書き換えて作りました。が、まだよく理解していません。&lt;/p&gt;

&lt;h2 id=&#34;セットアップ手順:4b0627b315e1a219f8d473e2d3addbcb&#34;&gt;セットアップ手順&lt;/h2&gt;

&lt;p&gt;特に設定変更が不要であれば&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl https://raw.github.com/hnakamur/setup_linux/master/centos6/install_chef-solo.sh | sudo sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でセットアップできます。変更したい場合はとってきて書き換えてから実行してください。&lt;/p&gt;

&lt;h2 id=&#34;クックブック作成例:4b0627b315e1a219f8d473e2d3addbcb&#34;&gt;クックブック作成例&lt;/h2&gt;

&lt;p&gt;例えば&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;knife cookbook create ntp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と実行すると、/etc/chef/site-cookbooks/ntp/ 以下にフォルダ構成とファイルが作られます。あとは編集して作ります。&lt;/p&gt;

&lt;h2 id=&#34;実行例:4b0627b315e1a219f8d473e2d3addbcb&#34;&gt;実行例&lt;/h2&gt;

&lt;p&gt;/root/.chef/chef.json&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;run_list&amp;quot;:[&amp;quot;recipe[ntp]&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というファイルを用意して&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chef-solo -j /root/.chef/chef.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で実行します。&lt;/p&gt;

&lt;h2 id=&#34;私のスタンス:4b0627b315e1a219f8d473e2d3addbcb&#34;&gt;私のスタンス&lt;/h2&gt;

&lt;p&gt;minimalistな私は正直 &lt;a href=&#34;http://wiki.opscode.com/display/chef/Home&#34;&gt;Chef&lt;/a&gt; はそんなに好きじゃないです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.opscode.com/display/chef/Architecture&#34;&gt;Architecture&lt;/a&gt; を見ると、CouchDB, Solr, RabbitMQ が必要って、高々サーバをセットアップするのになんでこんなにいろいろ稼働させる必要があるの？って感じてしまいます。セットアップ手順が自動化されたとしても、自分のマシンでそれだけのサーバが動いているのがもったいない、無駄にマシンリソースを消費してエコじゃない、と思います。&lt;/p&gt;

&lt;p&gt;そもそも私がやるような3台構成ぐらいの環境構築にそこまで大掛かりな仕組みはいらないというのもありますし。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://rexify.org/&#34;&gt;&amp;reg;?ex - A simple framework to simplify systemadministration&lt;/a&gt; はsshの鍵認証またはパスワード認証で接続してリモートで処理を実行できるのでこちらのほうが好きです。リモートマシンのセットアップにsshサーバ以外に何か必要というのは、なんか違う気がするんですよね。&lt;/p&gt;

&lt;p&gt;それからクックブック1つに対して、フォルダやファイルがたくさんできるのもあまり好きじゃないです。設定管理ツールじゃなくてパッケージ管理ツールですけどHomebrewはFormulaが1つのrubyスクリプトでこれは非常に編集が楽なんです。RexはRexfileにテンプレートファイルを含めることも可能なので&lt;/p&gt;

&lt;p&gt;あと処理を手続き的に記述するではなく、最終的な状態を宣言的に記述するというスタイルですが、これも限定的だと思っています。結局のところ、複雑な処理だと処理順序も関係するので、やらせたいことを手続き的にかける方がストレートなのかなと。実行する必要があるかチェックする処理を最初に入れて、それを含めた一連の処理を一つのコマンドとして提供すれば、利用側のコードはシンプルになるのでそれで十分だと思います。&lt;/p&gt;

&lt;p&gt;あと、実行対象の処理をJSONファイルに書いて、ファイル名を引数で指定して実行ってのもイケてない。rakeやRexのようにタスクを引数に指定させて欲しいです。&lt;/p&gt;

&lt;p&gt;と文句ばかり言っているようですが、DevOpsを提唱したopscode.comが出しているツールだし、一度は使ってみるべきということで。あと、まわりでも使っているので、ツールは揃えておいたほうが良いかなという思いもあります。私自身はいいのですが、まわりで使わされる人が何種類も覚えることを強要されるのは無駄だろうし。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>