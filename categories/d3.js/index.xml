<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hnakamur&#39;s blog at github</title>
    <link>https://hnakamur.github.io/blog/categories/d3.js/index.xml</link>
    <description>Recent content on hnakamur&#39;s blog at github</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <atom:link href="https://hnakamur.github.io/blog/categories/d3.js/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>d3.jsを使ったツールチップあり複数折れ線グラフのサンプルを作った</title>
      <link>https://hnakamur.github.io/blog/2013/03/02/multi-series-line-chart-example-with-tooltip-using-d3-dot-js/</link>
      <pubDate>Sat, 02 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://hnakamur.github.io/blog/2013/03/02/multi-series-line-chart-example-with-tooltip-using-d3-dot-js/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://d3js.org/&#34;&gt;D3.js - Data-Driven Documents&lt;/a&gt;を使ってツールチップあり複数折れ線グラフのサンプルを作ったのでメモ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/downloads/code/2013-03-02-multi-series-line-chart-example-with-tooltip-using-d3-dot-js/3884955.html&#34;&gt;サンプル&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://bl.ocks.org/mbostock/3884955&#34;&gt;Multi-Series Line Chart&lt;/a&gt;のサンプルをベースに改良しました。&lt;/p&gt;

&lt;h2 id=&#34;x軸のラベルを回転&#34;&gt;X軸のラベルを回転&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.d3noob.org/2013/01/how-to-rotate-text-labels-for-x-axis-of.html&#34;&gt;D3.js Tips and Tricks: How to rotate the text labels for the x Axis of a d3.js graph&lt;/a&gt;を参考にして回転させました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  svg.append(&amp;quot;g&amp;quot;)
      .attr(&amp;quot;class&amp;quot;, &amp;quot;x axis&amp;quot;)
      .attr(&amp;quot;transform&amp;quot;, &amp;quot;translate(0,&amp;quot; + height + &amp;quot;)&amp;quot;)
      .call(xAxis)
      .selectAll(&amp;quot;text&amp;quot;)
        .style(&amp;quot;text-anchor&amp;quot;, &amp;quot;end&amp;quot;)
        .attr(&amp;quot;dx&amp;quot;, &amp;quot;-.8em&amp;quot;)
        .attr(&amp;quot;dy&amp;quot;, &amp;quot;-.6em&amp;quot;)
        .attr(&amp;quot;transform&amp;quot;, &amp;quot;rotate(-90)&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ツールチップを出す&#34;&gt;ツールチップを出す&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/biovisualize/1016860#gistcomment-61316&#34;&gt;Simple D3 tooltip&lt;/a&gt;の手法で、線でもツールチップは出せなくはないのですが、カーソル位置のデータが取れないので、データの点に円を作成することにしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://groups.google.com/forum/?fromgroups=#!topic/d3-js/8XLzUYLoFnY&#34;&gt;multi-line chart with circle points - Google グループ&lt;/a&gt;を参考に以下の様なコードで円を作成しました。&lt;/p&gt;

&lt;p&gt;ツールチップを出す部分は&lt;a href=&#34;https://gist.github.com/biovisualize/1016860#gistcomment-61316&#34;&gt;Simple D3 tooltip&lt;/a&gt;を参考にしました。元のコードではイベントを&lt;code&gt;event&lt;/code&gt;で参照していましたが、ChromeとSafariでは動くもののFirefoxではundefinedになっていました。&lt;a href=&#34;https://github.com/mbostock/d3/wiki/Selections#wiki-on&#34;&gt;Selections · mbostock/d3 Wiki&lt;/a&gt;を見ると、&lt;code&gt;d3.event&lt;/code&gt;で参照するのが正しいので修正しました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; city. selectAll(&amp;quot;circle&amp;quot;)
      .data(function(d) { return d.values.map(function(v) {
              return {date: v.date, temperature: v.temperature, name: d.name};
            }); })
    .enter().append(&amp;quot;circle&amp;quot;)
      .attr(&amp;quot;cx&amp;quot;, function(d, i) { return x(d.date); })
      .attr(&amp;quot;cy&amp;quot;, function(d, i) { return y(d.temperature); })
      .style(&amp;quot;fill&amp;quot;, function(d) { return color(d.name); })
      .attr(&amp;quot;r&amp;quot;, 1)
      .on(&amp;quot;mouseover&amp;quot;, function(){
        return tooltip.style(&amp;quot;visibility&amp;quot;, &amp;quot;visible&amp;quot;);
      })
      .on(&amp;quot;mousemove&amp;quot;, function(d){
        return tooltip
          .style(&amp;quot;top&amp;quot;, (d3.event.pageY-10)+&amp;quot;px&amp;quot;)
          .style(&amp;quot;left&amp;quot;,(d3.event.pageX+10)+&amp;quot;px&amp;quot;)
          .html(&amp;quot;&amp;lt;dl&amp;gt;&amp;lt;dt&amp;gt;date&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;quot; + d3.time.format(&amp;quot;%Y-%m-%d&amp;quot;)(d.date) + &amp;quot;&amp;lt;/dd&amp;gt;&amp;lt;dt&amp;gt;temperature&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;quot; + d.temperature + &amp;quot;&amp;lt;/dd&amp;gt;&amp;lt;dt&amp;gt;name&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;quot; + d.name + &amp;quot;&amp;lt;/dd&amp;gt;&amp;lt;/dl&amp;gt;&amp;quot;);
      })
      .on(&amp;quot;mouseout&amp;quot;, function(){
        return tooltip.style(&amp;quot;visibility&amp;quot;, &amp;quot;hidden&amp;quot;);
      });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;見た目がうるさくないように円の半径は1とし、線だけ見えるような感じにしています。すると点にカーソルでポイントするのが大変なので、太めのストロークを透明色で指定して、ポイントしやすくしています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.tooltip {
  border: 1px solid black;
  background-color: white;
  padding: 5px 8px 4px 8px;
  border-radius: 4px;
  -moz-border-radius: 4px;
  -webkit-border-radius: 4px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;線のデータ補完を止める&#34;&gt;線のデータ補完を止める&lt;/h2&gt;

&lt;p&gt;データ補完してしまうと、線とデータ点がずれてしまうので、補完は止めます。
interpolate()を呼ばなければOK。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var line = d3.svg.line()
    //.interpolate(&amp;quot;basis&amp;quot;)
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>