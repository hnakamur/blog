<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[hnakamur's blog at github]]></title>
  <link href="http://hnakamur.github.com/blog/atom.xml" rel="self"/>
  <link href="http://hnakamur.github.com/blog/"/>
  <updated>2012-03-03T22:03:37+09:00</updated>
  <id>http://hnakamur.github.com/blog/</id>
  <author>
    <name><![CDATA[Hiroaki Nakamura]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[mod_xsendfileでダウンロード後にサーバ上のファイル自動削除]]></title>
    <link href="http://hnakamur.github.com/blog/2012/03/03/delete-on-close-using-mod-xsendfile/"/>
    <updated>2012-03-03T20:26:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/03/03/delete-on-close-using-mod-xsendfile</id>
    <content type="html"><![CDATA[<p><a href="https://tn123.org/mod_xsendfile/">mod_xsendfile</a>のホームページ上でリリースされているバージョン0.12には含まれていませんが、<a href="https://github.com/nmaier/mod_xsendfile/commit/f6b853ce0e555b61f83f928d9f927349346018b4">Githubのレポジトリのソース</a>ではX-Sendfile-Temporaryという拡張ヘッダに対応しています。</p>

<p>Scientific Linux 6.1で実験しました。</p>

<h2>mod_xsendfileのインストール</h2>

<p>以下の手順でインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install -y httpd-devel
</span><span class='line'>git clone https://github.com/nmaier/mod_xsendfile.git
</span><span class='line'><span class="nb">cd </span>mod_xsendfile
</span><span class='line'>apxs -cia mod_xsendfile.c
</span></code></pre></td></tr></table></div></figure>


<p>実験スクリプト用にApacheの設定ファイルを作成します。</p>

<figure class='code'><figcaption><span>/etc/httpd/conf.d/xsendfile_test.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&lt;Directory /var/www/html/xsendfile&gt;
</span><span class='line'>    XSendFilePath /var/www/html/xsendfile/data AllowFileDelete
</span><span class='line'>    &lt;Files out.php&gt;
</span><span class='line'>      XSendFile on
</span><span class='line'>    &lt;/Files&gt;
</span><span class='line'>&lt;/Directory&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Apache再起動。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/etc/init.d/httpd graceful
</span></code></pre></td></tr></table></div></figure>


<h2>実験</h2>

<p>実験スクリプト用のフォルダを作ります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir /var/www/html/xsendfile/data/
</span><span class='line'>chown -R apache:apache /var/www/html/xsendfile
</span></code></pre></td></tr></table></div></figure>


<p>実験用のPHPスクリプトを作成します。</p>

<figure class='code'><figcaption><span>/var/www/html/xsendfile/out.php</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="nv">$path</span> <span class="o">=</span> <span class="s1">&#39;/var/www/html/xsendfile/data/file1.txt&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$fname</span> <span class="o">=</span> <span class="nb">basename</span><span class="p">(</span><span class="nv">$path</span><span class="p">);</span>
</span><span class='line'><span class="nb">header</span><span class="p">(</span><span class="s2">&quot;X-Sendfile-Temporary: </span><span class="si">$path</span><span class="s2">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nb">header</span><span class="p">(</span><span class="s2">&quot;Content-Type: application/octet-stream&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nb">header</span><span class="p">(</span><span class="s2">&quot;Content-Disposition: attachment; filename=</span><span class="se">\&quot;</span><span class="si">$fname</span><span class="se">\&quot;</span><span class="s2">&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>実験用のダウンロードファイルを作成します。</p>

<figure class='code'><figcaption><span>/var/www/html/xsendfile/data/file1.txt</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Hello, X-Sendfile-Temporary!
</span></code></pre></td></tr></table></div></figure>


<p>これで、ブラウザで http://your_host_here/xsendfile/out.php を開くとダウンロード後にサーバ上のファイルが削除されました。</p>

<h2>今回のはまりポイント</h2>

<figure class='code'><figcaption><span>/etc/httpd/conf.d/xsendfile_test.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&lt;Directory /var/www/html/xsendfile&gt;
</span><span class='line'>    XSendFilePath /var/www/html/xsendfile/data
</span><span class='line'>    &lt;Files out.php&gt;
</span><span class='line'>      XSendFile on
</span><span class='line'>    &lt;/Files&gt;
</span><span class='line'>&lt;/Directory&gt;
</span></code></pre></td></tr></table></div></figure>


<p>のようにAllowFileDeleteを忘れていたら、out.phpを開いた時に404 Not Foundエラーになり、Apacheのエラーログには以下のようなエラーが出ていました。</p>

<figure class='code'><figcaption><span>/var/log/httpd/error_log</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[Sat Mar 03 15:57:07 2012] [error] [client 192.168.11.3] (14)Bad address: xsendfile: cannot open file: (null)
</span></code></pre></td></tr></table></div></figure>


<p>AllowFileDeleteをつければOKでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopressでgithubにブログ開設]]></title>
    <link href="http://hnakamur.github.com/blog/2012/03/03/how-to-setup-octopress/"/>
    <updated>2012-03-03T18:34:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/03/03/how-to-setup-octopress</id>
    <content type="html"><![CDATA[<p>rbenvとoctopressをインストールしてgithubにブログを作る手順のメモです。</p>

<h2>rbenvをインストール</h2>

<ul>
<li><a href="https://github.com/sstephenson/rbenv#section_2.1">sstephenson/rbenv</a></li>
<li><a href="https://github.com/sstephenson/ruby-build">sstephenson/ruby-build</a></li>
</ul>


<p>を参考にインストールしました。</p>

<p>インストール先は~/.rbenvとしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd
</span><span class='line'>git clone git://github.com/sstephenson/rbenv.git .rbenv
</span><span class='line'>
</span><span class='line'>echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &gt;&gt; .bash_profile
</span><span class='line'>echo 'eval "$(rbenv init -)"' &gt;&gt; .bash_profile
</span><span class='line'>
</span><span class='line'>. ~/.bash_profile</span></code></pre></td></tr></table></div></figure>


<p>ruby-buildをインストールします。なお、私はHomebrewを使っているので/usr/localには書き込み権限をつけてあります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd
</span><span class='line'>git clone git://github.com/sstephenson/ruby-build.git
</span><span class='line'>cd ruby-build
</span><span class='line'>./install.sh</span></code></pre></td></tr></table></div></figure>


<p>rbenvでruby 1.9.2-p290をインストール。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rbenv install 1.9.2-p290</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv versions
</span><span class='line'>* 1.9.2-p290 (set by /Users/hnakamur/octopress/.rbenv-version)</span></code></pre></td></tr></table></div></figure>


<p>でインストールされたrubyがrbenvで認識されたことを確認。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rbenv global 1.9.2-p290</span></code></pre></td></tr></table></div></figure>


<p>で切替。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ which ruby
</span><span class='line'>/Users/hnakamur/.rbenv/shims/ruby
</span><span class='line'>$ ruby --version
</span><span class='line'>ruby 1.9.2p290 (2011-07-09 revision 32553) [x86_64-darwin11.3.0]</span></code></pre></td></tr></table></div></figure>


<h2>octopressでgitにブログをセットアップ</h2>

<p><a href="http://octopress.org/docs/deploying/github/">Deploying to Github Pages - Octopress</a>
を参考にセットアップしました。</p>

<p>ここでは~/octopressを作業ディレクトリとしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd
</span><span class='line'>git clone git://github.com/imathis/octopress.git octopre
</span><span class='line'>cd octopress
</span><span class='line'>ruby --version
</span><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash
</span><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<p>ブラウザでgithubを開き、自分のアカウント(私の場合はhnakamur)でblogというプロジェクトを作ります。ブラウザで https://github.com/hnakamur/blog を開き、&#8221;Next steps:&#8221;に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add origin git@github.com:hnakamur/blog.git</span></code></pre></td></tr></table></div></figure>


<p>と書かれている行のgitのURL(ここではgit@github.com:hnakamur/blog.git)をコピーします。</p>

<p>その後</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>を実行し、&#8221;Enter the read/write url for your repository:&#8221;というプロンプトが出たらURLを貼り付けます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Enter the read/write url for your repository: git@github.com:hnakamur/blog.git</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi _config.yml</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>title: "hnakamur's blog at github"
</span><span class='line'>subtitle: my trial and error log
</span><span class='line'>author: Hiroaki Nakamura
</span><span class='line'>…(略)…
</span><span class='line'>date_format: "%Y-%m-%d"</span></code></pre></td></tr></table></div></figure>


<h2>記事の作成と投稿</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post['Hello, octopress!']</span></code></pre></td></tr></table></div></figure>


<p>と実行すると、最後に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Creating new post: source/_posts/2012-03-03-hello.markdown</span></code></pre></td></tr></table></div></figure>


<p>と作成されたファイルが表示されます。</p>

<p>エディタでこのファイルを開いて記事を書きます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi source/_posts/2012-03-03-hello.markdown</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "Hello, octopress!"
</span><span class='line'>date: 2012-03-03 17:57
</span><span class='line'>comments: true
</span><span class='line'>categories: octopress
</span><span class='line'>---
</span><span class='line'>octopressでブログ記事を投稿してみるテスト。</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<p>でHTMLが生成されます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>を実行して、ブラウザで
http://localhost:4000/blog/
を開くと、プレビューできます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p>でgithubにプッシュされ、10分ぐらい待つと
http://hnakamur.github.com/blog/
に記事のページで作られました。</p>

<p>時間がかかるのは初回にgithub pagesを作るときだけで、次回以降は即座に作られました。</p>

<h2>記事のソースをgithubにプッシュ</h2>

<p>リモートの設定にoriginを追加して、そこをデフォルトのブランチに設定。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add origin git@github.com:hnakamur/blog.git
</span><span class='line'>git config branch.master.remote origin</span></code></pre></td></tr></table></div></figure>


<p>設定の変更と生成されたソースをコミット、プッシュします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m 'Modify config. Add source and sass'
</span><span class='line'>git push origin HEAD:source</span></code></pre></td></tr></table></div></figure>


<p>github上でのブランチ名をsourceではなくmasterにしてよければ、単に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git push</span></code></pre></td></tr></table></div></figure>


<p>でOKです。</p>

<h2>ローカルのApacheでプレビュー</h2>

<p>Apacheは事前にセットアップ済みという前提で、プレビュー用の設定を追加します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo vi /etc/apache2/other/blog.conf</span></code></pre></td></tr></table></div></figure>


<p>と実行して、以下の内容で作成します(hnakamurの部分は自分のアカウント名で置換してください)。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Alias /blog /Users/hnakamur/octopress/public
</span><span class='line'>&lt;Directory /Users/hnakamur/octopress/public&gt;
</span><span class='line'>  AllowOverride None
</span><span class='line'>  DirectoryIndex index.html
</span><span class='line'>  Order allow,deny
</span><span class='line'>  Allow from all
</span><span class='line'>&lt;/Directory&gt;</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apachectl restart</span></code></pre></td></tr></table></div></figure>


<p>でApacheを再起動します。</p>

<p>これ以降は記事を編集してrake generateだけ実行すれば <a href="http://localhost/blog/">http://localhost/blog/</a> を開いてプレビューできます。</p>

<h2>今回のはまりポイント</h2>

<h3>YAMLで文字列を&#8221;&#8220;で囲む必要があった</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake generate
</span><span class='line'>(in /Users/hnakamur/octopress)
</span><span class='line'>## Generating Site with Jekyll
</span><span class='line'>unchanged sass/screen.scss
</span><span class='line'>/Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/psych.rb:148:in `parse': couldn't parse YAML at line 16 column 13 (Psych::SyntaxError)
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/psych.rb:148:in `parse_stream'
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/psych.rb:119:in `parse'
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/psych.rb:106:in `load'
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/psych.rb:205:in `load_file'
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/jekyll-0.11.0/lib/jekyll.rb:119:in `configuration'
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/jekyll-0.11.0/bin/jekyll:207:in `&lt;top (required)&gt;'
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/bin/jekyll:19:in `load'
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/bin/jekyll:19:in `&lt;main&gt;'</span></code></pre></td></tr></table></div></figure>


<p>_config.ymlの</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>date_format: %Y-%m-%dT%k:%M:%S%z</span></code></pre></td></tr></table></div></figure>


<p>を</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>date_format: "%Y-%m-%dT%k:%M:%S%z"</span></code></pre></td></tr></table></div></figure>


<p>と修正して再実行したらOKでした。</p>

<h3>git push origin sourceでエラー</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git push origin source
</span><span class='line'>error: src refspec source does not match any.
</span><span class='line'>error: failed to push some refs to 'git@github.com:hnakamur/blog.git'</span></code></pre></td></tr></table></div></figure>


<p>ググって <a href="http://stackoverflow.com/questions/959477/error-when-git-push-to-github">Error when &#8220;git push&#8221; to github - Stack Overflow</a> を発見。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git push origin HEAD:source</span></code></pre></td></tr></table></div></figure>


<p>にしたらOK。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello, octopress!]]></title>
    <link href="http://hnakamur.github.com/blog/2012/03/03/hello/"/>
    <updated>2012-03-03T17:57:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/03/03/hello</id>
    <content type="html"><![CDATA[<p>octopressでブログ記事を投稿してみるテスト。</p>
]]></content>
  </entry>
  
</feed>
