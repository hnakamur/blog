<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[hnakamur's blog at github]]></title>
  <link href="http://hnakamur.github.com/blog/atom.xml" rel="self"/>
  <link href="http://hnakamur.github.com/blog/"/>
  <updated>2012-06-21T17:59:18+09:00</updated>
  <id>http://hnakamur.github.com/blog/</id>
  <author>
    <name><![CDATA[Hiroaki Nakamura]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[daemontoolsの使い方]]></title>
    <link href="http://hnakamur.github.com/blog/2012/06/21/how-to-use-daemontools/"/>
    <updated>2012-06-21T17:48:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/06/21/how-to-use-daemontools</id>
    <content type="html"><![CDATA[<p><a href="http://www.nslabs.jp/daemontools.rhtml">daemontoolsを使う | Netsphere Laboratories</a>を参考にしました。ありがとうございます。</p>

<h2>私的ルール</h2>

<h3>無効化したサービスは/service/.disabled/に移動</h3>

<p>/service/以下に.で始まるフォルダ名にすると無視されるということですが、my_service_nameを.my_service_nameと変えるのはタイプが面倒なので、/service/.disabledというフォルダを作って無効化するときはその下に移動することにしました。</p>

<h3>作業するときは/serviceに移動</h3>

<p>svcやsvstatにフルパスを指定しても動くのですが、/service/と/service/.disabled間で移動するときにタイプ量が増えるので、最初にcd /serviceしてから作業することにしました。</p>

<h2>手順</h2>

<h3>サービス追加</h3>

<p>node-virtualhost1.example.comという名前でサービスを追加する例。
exec -cの後はサービスに応じて変更します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /service
</span><span class='line'>mkdir -p .disabled/node-virtualhost1.example.com
</span><span class='line'>cat &lt;&lt;EOF &gt; .disabled/node-virtualhost1.example.com/run
</span><span class='line'>#!/bin/sh
</span><span class='line'>exec -c /usr/local/node-v0.6.19/bin/node /var/www/app/virtualhost1.example.com/hello.js
</span><span class='line'>EOF
</span><span class='line'>chmod 755 .disabled/node-virtualhost1.example.com/run</span></code></pre></td></tr></table></div></figure>


<h3>サービス有効化</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /service
</span><span class='line'>mv .disabled/node-virtualhost1.example.com .</span></code></pre></td></tr></table></div></figure>


<h4>状態確認</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># svstat node-virtualhost1.example.com/
</span><span class='line'>node-virtualhost1.example.com/: up (pid 1493) 3 seconds</span></code></pre></td></tr></table></div></figure>


<h3>サービス無効化</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /service
</span><span class='line'>mv node-virtualhost1.example.com .disabled/
</span><span class='line'>svc -tx .disabled/node-virtualhost1.example.com</span></code></pre></td></tr></table></div></figure>


<h4>状態確認</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># svstat .disabled/node-virtualhost1.example.com/
</span><span class='line'>.disabled/node-virtualhost1.example.com/: supervise not running</span></code></pre></td></tr></table></div></figure>


<h3>サービス一時停止(Down)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /service
</span><span class='line'>svc -d node-virtualhost1.example.com</span></code></pre></td></tr></table></div></figure>


<h4>状態確認</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># svstat node-virtualhost1.example.com/
</span><span class='line'>node-virtualhost1.example.com/: down 1 seconds, normally up</span></code></pre></td></tr></table></div></figure>


<h3>サービス一時停止からの再開(Up)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /service
</span><span class='line'>svc -u node-virtualhost1.example.com</span></code></pre></td></tr></table></div></figure>


<h4>状態確認</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># svstat node-virtualhost1.example.com/
</span><span class='line'>node-virtualhost1.example.com/: up (pid 1512) 1 seconds</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[daemontoolsのインストール手順]]></title>
    <link href="http://hnakamur.github.com/blog/2012/06/21/how-to-install-daemontools/"/>
    <updated>2012-06-21T17:36:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/06/21/how-to-install-daemontools</id>
    <content type="html"><![CDATA[<p>CentOS6.2で確認。</p>

<p>OS起動時にdaemontoolsを起動する設定は<a href="http://cr.yp.to/daemontools/start.html">How to start daemontools</a>を参照。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install -y make gcc rpm-build &&
</span><span class='line'>rpm -ivh http://mirrors.qmailtoaster.com/daemontools-toaster-0.76-1.3.6.src.rpm &&
</span><span class='line'>rpmbuild -ba /root/rpmbuild/SPECS/daemontools-toaster.spec &&
</span><span class='line'>rpm -ivh /root/rpmbuild/RPMS/x86_64/daemontools-toaster-0.76-1.3.6.x86_64.rpm &&
</span><span class='line'>cat &gt; /etc/init/svscan.conf &lt;&lt;EOF &&
</span><span class='line'>start on runlevel [12345]
</span><span class='line'>stop on runlevel [^12345]
</span><span class='line'>respawn
</span><span class='line'>exec /command/svscanboot
</span><span class='line'>EOF
</span><span class='line'>/command/svscanboot &</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS6でchef-soloとknife-soloをセットアップ]]></title>
    <link href="http://hnakamur.github.com/blog/2012/05/04/setup-chef-solo-and-knife-solo-on-centos6/"/>
    <updated>2012-05-04T15:03:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/05/04/setup-chef-solo-and-knife-solo-on-centos6</id>
    <content type="html"><![CDATA[<h2>なぜ？</h2>

<p><a href="http://higelog.brassworks.jp/?p=654">chef-soloで作業環境構築の自動化 | ひげろぐ</a> を参考に、Chefサーバは使いたくないけど、chef-soloとknifeを使いたい！
ということで、そういう環境を作るためのスクリプトを作りました。
だいぶ前から試行錯誤してたけど、ようやくできたので公開。</p>

<h2>セットアップスクリプト</h2>

<p>chef-soloやknifeはrootユーザで実行する想定です。</p>

<p>このスクリプトではruby、rubygems、ruby-devel、make、gccをyumで、
chefとknife-soloをgemでインストールします。</p>

<p>chef-soloやknife実行時にオプションをなるべく指定不要にするため、設定ファイルはデフォルトの場所に配置しています。</p>

<ul>
<li>/etc/chef/solo.rb</li>
<li>/root/.chef/knife.rb</li>
</ul>


<p>その他の詳細は
<a href="https://github.com/hnakamur/setup_linux/blob/master/centos6/install_chef-solo.sh">install_chef-solo.sh</a>
を参照してください。</p>

<p>ちょっと注意が必要なのは、shのヒアドキュメントで<code>`hostname`</code>が展開されるのを避けるために、<code>\`hostname\`</code>とエスケープしていることです。
＃余談ですが、markdownだとバックスラッシュやバックティックはエスケープしないといけないんですね。</p>

<p>knife.rbの設定は
<a href="https://gist.github.com/1039666">Base &#8220;knife&#8221; configuration for a standard chef-solo setup — Gist</a> を書き換えて作りました。が、まだよく理解していません。</p>

<h2>セットアップ手順</h2>

<p>特に設定変更が不要であれば</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl https://raw.github.com/hnakamur/setup_linux/master/centos6/install_chef-solo.sh | sudo sh</span></code></pre></td></tr></table></div></figure>


<p>でセットアップできます。変更したい場合はとってきて書き換えてから実行してください。</p>

<h2>クックブック作成例</h2>

<p>例えば</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife cookbook create ntp</span></code></pre></td></tr></table></div></figure>


<p>と実行すると、/etc/chef/site-cookbooks/ntp/ 以下にフォルダ構成とファイルが作られます。あとは編集して作ります。</p>

<h2>実行例</h2>

<p>/root/.chef/chef.json</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "run_list":["recipe[ntp]"]
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>というファイルを用意して</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo chef-solo -j /root/.chef/chef.json</span></code></pre></td></tr></table></div></figure>


<p>で実行します。</p>

<h2>私のスタンス</h2>

<p>minimalistな私は正直 <a href="http://wiki.opscode.com/display/chef/Home">Chef</a> はそんなに好きじゃないです。</p>

<p><a href="http://wiki.opscode.com/display/chef/Architecture">Architecture</a> を見ると、CouchDB, Solr, RabbitMQ が必要って、高々サーバをセットアップするのになんでこんなにいろいろ稼働させる必要があるの？って感じてしまいます。セットアップ手順が自動化されたとしても、自分のマシンでそれだけのサーバが動いているのがもったいない、無駄にマシンリソースを消費してエコじゃない、と思います。</p>

<p>そもそも私がやるような3台構成ぐらいの環境構築にそこまで大掛かりな仕組みはいらないというのもありますし。</p>

<p><a href="http://rexify.org/">(R)?ex - A simple framework to simplify systemadministration</a> はsshの鍵認証またはパスワード認証で接続してリモートで処理を実行できるのでこちらのほうが好きです。リモートマシンのセットアップにsshサーバ以外に何か必要というのは、なんか違う気がするんですよね。</p>

<p>それからクックブック1つに対して、フォルダやファイルがたくさんできるのもあまり好きじゃないです。設定管理ツールじゃなくてパッケージ管理ツールですけどHomebrewはFormulaが1つのrubyスクリプトでこれは非常に編集が楽なんです。RexはRexfileにテンプレートファイルを含めることも可能なので</p>

<p>あと処理を手続き的に記述するではなく、最終的な状態を宣言的に記述するというスタイルですが、これも限定的だと思っています。結局のところ、複雑な処理だと処理順序も関係するので、やらせたいことを手続き的にかける方がストレートなのかなと。実行する必要があるかチェックする処理を最初に入れて、それを含めた一連の処理を一つのコマンドとして提供すれば、利用側のコードはシンプルになるのでそれで十分だと思います。</p>

<p>あと、実行対象の処理をJSONファイルに書いて、ファイル名を引数で指定して実行ってのもイケてない。rakeやRexのようにタスクを引数に指定させて欲しいです。</p>

<p>と文句ばかり言っているようですが、DevOpsを提唱したopscode.comが出しているツールだし、一度は使ってみるべきということで。あと、まわりでも使っているので、ツールは揃えておいたほうが良いかなという思いもあります。私自身はいいのですが、まわりで使わされる人が何種類も覚えることを強要されるのは無駄だろうし。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[/etc/sudoers.d/を使う→やっぱり止め]]></title>
    <link href="http://hnakamur.github.com/blog/2012/05/04/use-slash-etc-slash-sudoers-dot-d-slash/"/>
    <updated>2012-05-04T11:16:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/05/04/use-slash-etc-slash-sudoers-dot-d-slash</id>
    <content type="html"><![CDATA[<p>これまでいつも/etc/sudoersを編集していたのですが、よくみるとファイル末尾に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)
</span><span class='line'>#includedir /etc/sudoers.d</span></code></pre></td></tr></table></div></figure>


<p>と書いてあって、/etc/sudoers.d/にファイルを置けば/etc/sudoersを編集しなくても済むんですね。（しかしなんでincludedirには#をつける仕様なんだろ。今までずっとコメントアウトされていると思ってました。その上のコメント行に#ついててもコメントじゃないと書いてあるのに気づいたのが今日です）</p>

<p>/etc/sudoers.d/hnakamur を</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Defaults:hnakamur !requiretty
</span><span class='line'>hnakamur ALL=(ALL)      NOPASSWD: ALL</span></code></pre></td></tr></table></div></figure>


<p>として試してみました。</p>

<p>sudoすると</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo: /etc/sudoers.d/hnakamur is mode 0644, should be 0440</span></code></pre></td></tr></table></div></figure>


<p>というエラー。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod 0440 /etc/sudoers.d/hnakamur</span></code></pre></td></tr></table></div></figure>


<p>して再度試すとOKでした。</p>

<p>visudoではこのファイルは編集対象ではないので、複数人で同時に編集しないよう連絡しあうなどの運用が別途必要です。このせいでみんな使ってないんだろうか？</p>

<h2>/etc/sudoers.d/* の罠にはまった</h2>

<p>(2012-05-05 追記)</p>

<p>使うべきでない理由がわかりました！</p>

<p>/etc/sudoers.d/*のファイルで文法エラーのまま保存してしまうと、次にsudoを実行した時に以下の様なエラーが出ました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo -s
</span><span class='line'>&gt;&gt;&gt; /etc/sudoers.d/hnakamur: syntax error near line 2 &lt;&lt;&lt;
</span><span class='line'>sudo: parse error in /etc/sudoers.d/hnakamur near line 2
</span><span class='line'>sudo: no valid sudoers sources found, quitting</span></code></pre></td></tr></table></div></figure>


<p>こうなるとsu -でrootになるしかないです。/etc/sudoers.d/*を使わずvisudoで編集する場合は、保存時に文法エラーがある場合は抜けずに再編集が可能なので安全です。</p>

<h2>visudoを使えば/etc/sudoers.d/* でも大丈夫</h2>

<p>(2012-05-05 追記)</p>

<p>さらに追記。visudoは/etc/sudoers.d/*に文法がエラーがある場合も抜ける前にプロンプトが出ました。人手で編集するときは必ずvisudoを使うよう肝に銘じます。</p>

<h2>/etc/sudoers.d/* だとvisudoでもダメなパターンがありました</h2>

<p>(2012-05-05 追記)</p>

<p>さらに追記。
visudoで起動して:e /etc/sudoers.d/hnakamurと切り替えて編集して:wqで保存して抜けると、文法エラーがあってもスルーしてしまいました。rootでもう一度起動して何も変更せずに:qで終わると文法エラーに反応してくれるのですが。</p>

<p>ということで、結論としては/etc/sudoers.d/*は私は使わないことにしました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lua, V8, ruby, mrubyでfib(39)の実行時間比較]]></title>
    <link href="http://hnakamur.github.com/blog/2012/05/04/fib-39-benchmark-in-lua/"/>
    <updated>2012-05-04T11:06:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/05/04/fib-39-benchmark-in-lua</id>
    <content type="html"><![CDATA[<p><a href="http://www.quredo.net/2012/04/mruby-%E8%BB%BD%E9%87%8Fruby-%E3%82%BD%E3%83%BC%E3%82%B9%E5%85%AC%E9%96%8B/">mruby (軽量ruby) ソース公開 | quredo-style</a>を見て、自分の環境でlua, luajit, V8, ruby, mrubyで試してみた。</p>

<p>テスト環境</p>

<ul>
<li>Model: MacBook Air 13-inch, Mid 2011</li>
<li>CPU: 1.7GHz Intel Core i5</li>
<li>RAM: 4GB 1333MHz DDR3</li>
<li>OS: Mac OS X Lion 10.7.3</li>
</ul>


<h2>lua</h2>

<p>fib.lua</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function fib(n)
</span><span class='line'>  if n &lt; 2 then
</span><span class='line'>    return n
</span><span class='line'>  end
</span><span class='line'>  return fib(n-2) + fib(n-1)
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>print(fib(39))</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ lua -v
</span><span class='line'>Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
</span><span class='line'>$ time lua fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m21.368s
</span><span class='line'>user  0m21.345s
</span><span class='line'>sys   0m0.016s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./lua -v
</span><span class='line'>Lua 5.2.0  Copyright (C) 1994-2011 Lua.org, PUC-Rio
</span><span class='line'>$ time ./lua fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m19.603s
</span><span class='line'>user  0m19.585s
</span><span class='line'>sys   0m0.012s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./luajit -v
</span><span class='line'>Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio
</span><span class='line'>LuaJIT 1.1.8  Copyright (C) 2005-2012 Mike Pall, http://luajit.org/
</span><span class='line'>$ time ./luajit fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m4.302s
</span><span class='line'>user  0m4.292s
</span><span class='line'>sys   0m0.006s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ luajit -v
</span><span class='line'>LuaJIT 2.0.0-beta9 -- Copyright (C) 2005-2011 Mike Pall. http://luajit.org/
</span><span class='line'>$ time luajit fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m1.299s
</span><span class='line'>user  0m1.289s
</span><span class='line'>sys   0m0.004s</span></code></pre></td></tr></table></div></figure>


<h2>V8</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function fib(n) {
</span><span class='line'>  if (n &lt; 2) return n;
</span><span class='line'>  return fib(n-2) + fib(n-1);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>print(fib(39));</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ v8
</span><span class='line'>V8 version 3.9.24 [sample shell]
</span><span class='line'>&gt; quit()
</span><span class='line'>$ time v8 fib.js
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m1.417s
</span><span class='line'>user  0m1.407s
</span><span class='line'>sys   0m0.013s</span></code></pre></td></tr></table></div></figure>


<h2>ruby</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def fib n
</span><span class='line'>  return n if n &lt; 2
</span><span class='line'>  fib(n-2) + fib(n-1)
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>puts fib(39)</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.8.7-p358 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  1m47.227s
</span><span class='line'>user  1m46.945s
</span><span class='line'>sys   0m0.132s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.9.3-p125 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m16.504s
</span><span class='line'>user  0m16.374s
</span><span class='line'>sys   0m0.051s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ time bin/mruby fib.rb 
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m35.465s
</span><span class='line'>user  0m35.423s
</span><span class='line'>sys   0m0.014s</span></code></pre></td></tr></table></div></figure>


<p>[2012-05-03 23:21]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 4.3.1のファイルテンプレートをカスタマイズ]]></title>
    <link href="http://hnakamur.github.com/blog/2012/03/11/custom-file-template-for-xcode-4-dot-3-1/"/>
    <updated>2012-03-11T20:22:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/03/11/custom-file-template-for-xcode-4-dot-3-1</id>
    <content type="html"><![CDATA[<p><a href="http://meandmark.com/blog/2011/11/creating-custom-xcode-4-file-templates/">Creating Custom Xcode 4 File Templates</a>を参考に作成してみました。</p>

<p>Apple提供のファイルテンプレートは
/Developer/Platforms/iPhoneOS.platform/Developer/Library/Xcode/Templates/File Templates
にあるとのこと。ですが、Xcode 4.3.1からは/Developperではなく/Applications/Xcodeにインストールされるので、Xcode 4.3.1のみの環境ではここにはないかもしれません。</p>

<p>私は<a href="https://github.com/MacRuby/MacRuby">MacRubyのgithubレポジトリ</a>をクローンして、misc/xcode4-templates/File Templates/Ruby/Ruby File.xctemplate/ をコピーして書き換えてカスタマイズしました。</p>

<p>コピー先は
/Users/ユーザ名/Library/Developer/Xcode/Templates/File Templates/グループ名/ファイルタイプ.xctemplate/
です。</p>

<p>コピー後Xcodeを再起動すると認識されました。</p>

<p>なお、オリジナルと同じグループ名とファイルタイプにすると、同じ名前のものが2つ並んで紛らわしい状態になります。ですので、違う名前にしたほうが良いです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[macruby-nightly-2012-03-07をXcode 4.3.1で試す]]></title>
    <link href="http://hnakamur.github.com/blog/2012/03/11/try-macruby-nightly-2012-03-07-with-xcode-4-dot-3-1/"/>
    <updated>2012-03-11T12:29:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/03/11/try-macruby-nightly-2012-03-07-with-xcode-4-dot-3-1</id>
    <content type="html"><![CDATA[<p><a href="http://d.hatena.ne.jp/seiunsky/20111225/1324740191">おまいらもMacRubyでMacアプリ作ろう - @sugamasao.blog.title # => ”コードで世界を変えたい”</a>を見て、ファイルやプロジェクトのテンプレートを追加すればXcode 4.3.1も使えそうだと思い、<a href="http://d.hatena.ne.jp/kouji0625/20090919/p1">Snow LeopardのXcodeにRubyCocoaのテンプレートをインストール - 高尾宏治日記 on はてな</a>を参考にコピーしてみようかと思ったのですが、<a href="http://www.macruby.org/trac/ticket/1466">#1466 (does not install MacRuby&#8217;s Templetes and rb_nibtool into Xcode 4.3) – MacRuby</a>というページを見つけました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer/ </span></code></pre></td></tr></table></div></figure>


<p>を実行しておいてから、
<a href="http://www.macruby.org/files/nightlies/">MacRuby » Files</a>から<a href="http://www.macruby.org/files/nightlies/macruby_nightly-2012-03-07.pkg">macruby_nightly-2012-03-07.pkg</a>を実行してインストールしてみました。</p>

<p>これでばっちりになりました。新規プロジェクト作成で[MacRuby Application]も選択可能ですし、Interface BuilderでHelloWorldControllerのoutletも認識されました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 4.2.1でMacRuby 0.10を試す]]></title>
    <link href="http://hnakamur.github.com/blog/2012/03/11/try-macruby-0-dot-10-with-xcode-4-dot-2-1/"/>
    <updated>2012-03-11T10:42:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/03/11/try-macruby-0-dot-10-with-xcode-4-dot-2-1</id>
    <content type="html"><![CDATA[<h2>Xcode 4.1やXcode 4.3.1ではうまくいかずXcode 4.2.1ならOKだった</h2>

<p>最終的にうまく行ったバージョンの組み合わせは以下の通りです。</p>

<ul>
<li>Mac OS X 10.7.3</li>
<li>Xcode 4.2.1</li>
<li>MacRuby 0.10</li>
</ul>


<p>最初は以下の環境でした。</p>

<ul>
<li>Mac OS X 10.7.3</li>
<li>Xcode 4.1 (4.1.xのxはうろ覚えだけど4.1.1だったかな)</li>
</ul>


<p><a href="http://www.macruby.org/downloads.html">MacRuby » Download MacRuby</a>
からMacRuby 0.10をダウンロードし、インストールしました。</p>

<p><a href="http://www.macruby.org/documentation/tutorial.html">MacRuby » Introductory Tutorial</a>を試していたのですが、XcodeのInterface BuilderでHelloWorldControllerを作ってもoutletが認識されないという問題が発生しました。</p>

<p>ググってみると<a href="http://www.macruby.org/trac/ticket/1322">#1322 (Xcode 4.1/4.2) – MacRuby</a>というページが。で、とりあえず最新のXcode 4.3.1をApp Storeからインストールしてみました。インストール時には元のXcode 4.1は消さずに残すようにしました。
で、Xcode 4.3.1で試したのですが[File]/[New]/[Project &#8230;]メニューを選んで、[Mac OS X]の[Application]を選んでも[MacRuby Application]が出てこない。</p>

<p>MacRubyより後にXcode 4.3.1をインストールしたので認識されていないのかなと思い、再度MacRuby 0.10のインストーラを実行するも変わらず。</p>

<p>Xcode 4.3.1のインストーラに古いXcodeを消すか聞かれた時に、Xcode 4.1とInstall Xcode 4.2.1が並んでいて、Install Xcode 4.2.1の行には/Applications/Install Xcode.appと書かれていました。そこでそれを実行してみると、Xcode 4.1が4.2.1にアップグレードされました。</p>

<p>これでようやくInterface BuilderでHelloWorldControllerのoutletが認識されるようになりました。</p>

<p><a href="https://developer.apple.com/library/mac/#documentation/DeveloperTools/Conceptual/WhatsNewXcode/Articles/xcode_4_3.html">What&#8217;s New In Xcode: New Features in Xcode 4.3</a>にも書かれていますが、Xcode 4.1/4.2は/Developer、Xcode 4.3.1は/Applications/Xcode.appにインストールされます。</p>

<p>さらに、<a href="http://stackoverflow.com/questions/669367/can-i-have-multiple-xcode-versions-installed">osx - Can I have multiple Xcode versions installed? - Stack Overflow</a>によるとXcodeのインストーラ実行時に[location&#8230;]プルダウンでインストール先のディレクトリを変えておけば複数バージョンの同居は可能らしいです。私は既に4.1を4.2.1にアップグレードしてしまったので4.2.1と4.3.1のみですが、これを知ってたら4.1も残しておきたかった。</p>

<p><a href="https://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/xcode-select.1.html">xcode-select(1) Mac OS X Developer Tools Manual Page</a>によると、4.2.1への切替は</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xcode-select -switch /Developer</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/MacRuby/MacRuby">MacRuby/MacRuby</a>によると、4.3.1への切替は</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer/</span></code></pre></td></tr></table></div></figure>


<p>で出来るようです。と書きながら気付いたのですが、上のリンクにMacRubyのインストール前にこれをやる必要があるかもと書いてますね。しかし、これをやってからMacRubyを再度インストールしてみましたが、やっぱり新規プロジェクト作成で[MacRuby Application]は出て来ませんでした。</p>

<p>ただ、xcode-selectで何が変わるのかはよくわかりません。Xcode自体は4.2.1は/Developer/Applications/Xcode.app、4.3.1は/Applications/Xcode.appで起動すればよいだけですし。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mod_xsendfileでダウンロード後にサーバ上のファイル自動削除]]></title>
    <link href="http://hnakamur.github.com/blog/2012/03/03/delete-on-close-using-mod-xsendfile/"/>
    <updated>2012-03-03T20:26:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/03/03/delete-on-close-using-mod-xsendfile</id>
    <content type="html"><![CDATA[<p><a href="https://tn123.org/mod_xsendfile/">mod_xsendfile</a>のホームページ上でリリースされているバージョン0.12には含まれていませんが、<a href="https://github.com/nmaier/mod_xsendfile/commit/f6b853ce0e555b61f83f928d9f927349346018b4">Githubのレポジトリのソース</a>ではX-Sendfile-Temporaryという拡張ヘッダに対応しています。</p>

<p>Scientific Linux 6.1で実験しました。</p>

<h2>mod_xsendfileのインストール</h2>

<p>以下の手順でインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install -y httpd-devel
</span><span class='line'>git clone https://github.com/nmaier/mod_xsendfile.git
</span><span class='line'><span class="nb">cd </span>mod_xsendfile
</span><span class='line'>apxs -cia mod_xsendfile.c
</span></code></pre></td></tr></table></div></figure>


<p>実験スクリプト用にApacheの設定ファイルを作成します。</p>

<figure class='code'><figcaption><span>/etc/httpd/conf.d/xsendfile_test.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&lt;Directory /var/www/html/xsendfile&gt;
</span><span class='line'>    XSendFilePath /var/www/html/xsendfile/data AllowFileDelete
</span><span class='line'>    &lt;Files out.php&gt;
</span><span class='line'>      XSendFile on
</span><span class='line'>    &lt;/Files&gt;
</span><span class='line'>&lt;/Directory&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Apache再起動。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/etc/init.d/httpd graceful
</span></code></pre></td></tr></table></div></figure>


<h2>実験</h2>

<p>実験スクリプト用のフォルダを作ります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir /var/www/html/xsendfile/data/
</span><span class='line'>chown -R apache:apache /var/www/html/xsendfile
</span></code></pre></td></tr></table></div></figure>


<p>実験用のPHPスクリプトを作成します。</p>

<figure class='code'><figcaption><span>/var/www/html/xsendfile/out.php</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="nv">$path</span> <span class="o">=</span> <span class="s1">&#39;/var/www/html/xsendfile/data/file1.txt&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$fname</span> <span class="o">=</span> <span class="nb">basename</span><span class="p">(</span><span class="nv">$path</span><span class="p">);</span>
</span><span class='line'><span class="nb">header</span><span class="p">(</span><span class="s2">&quot;X-Sendfile-Temporary: </span><span class="si">$path</span><span class="s2">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nb">header</span><span class="p">(</span><span class="s2">&quot;Content-Type: application/octet-stream&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nb">header</span><span class="p">(</span><span class="s2">&quot;Content-Disposition: attachment; filename=</span><span class="se">\&quot;</span><span class="si">$fname</span><span class="se">\&quot;</span><span class="s2">&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>実験用のダウンロードファイルを作成します。</p>

<figure class='code'><figcaption><span>/var/www/html/xsendfile/data/file1.txt</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Hello, X-Sendfile-Temporary!
</span></code></pre></td></tr></table></div></figure>


<p>これで、ブラウザで http://your_host_here/xsendfile/out.php を開くとダウンロード後にサーバ上のファイルが削除されました。</p>

<h2>今回のはまりポイント</h2>

<figure class='code'><figcaption><span>/etc/httpd/conf.d/xsendfile_test.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&lt;Directory /var/www/html/xsendfile&gt;
</span><span class='line'>    XSendFilePath /var/www/html/xsendfile/data
</span><span class='line'>    &lt;Files out.php&gt;
</span><span class='line'>      XSendFile on
</span><span class='line'>    &lt;/Files&gt;
</span><span class='line'>&lt;/Directory&gt;
</span></code></pre></td></tr></table></div></figure>


<p>のようにAllowFileDeleteを忘れていたら、out.phpを開いた時に404 Not Foundエラーになり、Apacheのエラーログには以下のようなエラーが出ていました。</p>

<figure class='code'><figcaption><span>/var/log/httpd/error_log</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[Sat Mar 03 15:57:07 2012] [error] [client 192.168.11.3] (14)Bad address: xsendfile: cannot open file: (null)
</span></code></pre></td></tr></table></div></figure>


<p>AllowFileDeleteをつければOKでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopressでgithubにブログ開設]]></title>
    <link href="http://hnakamur.github.com/blog/2012/03/03/how-to-setup-octopress/"/>
    <updated>2012-03-03T18:34:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/03/03/how-to-setup-octopress</id>
    <content type="html"><![CDATA[<p>rbenvとoctopressをインストールしてgithubにブログを作る手順のメモです。</p>

<h2>rbenvをインストール</h2>

<ul>
<li><a href="https://github.com/sstephenson/rbenv#section_2.1">sstephenson/rbenv</a></li>
<li><a href="https://github.com/sstephenson/ruby-build">sstephenson/ruby-build</a></li>
</ul>


<p>を参考にインストールしました。</p>

<p>インストール先は~/.rbenvとしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd
</span><span class='line'>git clone git://github.com/sstephenson/rbenv.git .rbenv
</span><span class='line'>
</span><span class='line'>echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &gt;&gt; .bash_profile
</span><span class='line'>echo 'eval "$(rbenv init -)"' &gt;&gt; .bash_profile
</span><span class='line'>
</span><span class='line'>. ~/.bash_profile</span></code></pre></td></tr></table></div></figure>


<p>ruby-buildをインストールします。なお、私はHomebrewを使っているので/usr/localには書き込み権限をつけてあります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd
</span><span class='line'>git clone git://github.com/sstephenson/ruby-build.git
</span><span class='line'>cd ruby-build
</span><span class='line'>./install.sh</span></code></pre></td></tr></table></div></figure>


<p>rbenvでruby 1.9.2-p290をインストール。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rbenv install 1.9.2-p290</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv versions
</span><span class='line'>* 1.9.2-p290 (set by /Users/hnakamur/octopress/.rbenv-version)</span></code></pre></td></tr></table></div></figure>


<p>でインストールされたrubyがrbenvで認識されたことを確認。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rbenv global 1.9.2-p290</span></code></pre></td></tr></table></div></figure>


<p>で切替。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ which ruby
</span><span class='line'>/Users/hnakamur/.rbenv/shims/ruby
</span><span class='line'>$ ruby --version
</span><span class='line'>ruby 1.9.2p290 (2011-07-09 revision 32553) [x86_64-darwin11.3.0]</span></code></pre></td></tr></table></div></figure>


<h2>octopressでgitにブログをセットアップ</h2>

<p><a href="http://octopress.org/docs/deploying/github/">Deploying to Github Pages - Octopress</a>
を参考にセットアップしました。</p>

<p>ここでは~/octopressを作業ディレクトリとしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd
</span><span class='line'>git clone git://github.com/imathis/octopress.git octopre
</span><span class='line'>cd octopress
</span><span class='line'>ruby --version
</span><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash
</span><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<p>ブラウザでgithubを開き、自分のアカウント(私の場合はhnakamur)でblogというプロジェクトを作ります。ブラウザで https://github.com/hnakamur/blog を開き、&#8221;Next steps:&#8221;に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add origin git@github.com:hnakamur/blog.git</span></code></pre></td></tr></table></div></figure>


<p>と書かれている行のgitのURL(ここではgit@github.com:hnakamur/blog.git)をコピーします。</p>

<p>その後</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>を実行し、&#8221;Enter the read/write url for your repository:&#8221;というプロンプトが出たらURLを貼り付けます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Enter the read/write url for your repository: git@github.com:hnakamur/blog.git</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi _config.yml</span></code></pre></td></tr></table></div></figure>


<p>ブログタイトルなどを編集します。</p>

<figure class='code'><figcaption><span>_config.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>url: http://hnakamur.github.com/blog
</span><span class='line'>title: &quot;hnakamur&#39;s blog at github&quot;
</span><span class='line'>subtitle: my trial and error log
</span><span class='line'>author: Hiroaki Nakamura
</span><span class='line'>…(略)…
</span><span class='line'>date_format: &quot;%Y-%m-%d&quot;
</span><span class='line'>…(略)…
</span></code></pre></td></tr></table></div></figure>


<p>さらに</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>permalink: /blog/:year/:month/:day/:title/
</span><span class='line'>…(略)…
</span><span class='line'>category_dir: blog/categories
</span><span class='line'>…(略)…
</span><span class='line'>titlecase: true       # Converts page and post titles to titlecase
</span></code></pre></td></tr></table></div></figure>


<p>を以下のように変更します。</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>permalink: /:year/:month/:day/:title/
</span><span class='line'>…(略)…
</span><span class='line'>category_dir: categories
</span><span class='line'>…(略)…
</span><span class='line'>titlecase: false      # Converts page and post titles to titlecase
</span></code></pre></td></tr></table></div></figure>


<p>これは記事のパーマリンクやカテゴリページのURLが/blog/blog/…のようになってしまうのを/blog/…のようにするためです。</p>

<p>またタイトルの先頭を大文字にするのもオフにしています。</p>

<p>なお、アーカイブのページのURLは/blog/blog/archiveになってしまっていますが、変更方法をまだ見つけられていません。</p>

<h2>記事の作成と投稿</h2>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>rake new_post[&#39;Hello, octopress!&#39;]
</span></code></pre></td></tr></table></div></figure>


<p>と実行すると、最後に</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Creating new post: source/_posts/2012-03-03-hello.markdown
</span></code></pre></td></tr></table></div></figure>


<p>と作成されたファイルが表示されます。</p>

<p>エディタでこのファイルを開いて記事を書きます。</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>vi source/_posts/2012-03-03-hello.markdown
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: &quot;Hello, octopress!&quot;
</span><span class='line'>date: 2012-03-03 17:57
</span><span class='line'>comments: true
</span><span class='line'>categories: octopress
</span><span class='line'>---
</span><span class='line'>octopressでブログ記事を投稿してみるテスト。
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>rake generate
</span></code></pre></td></tr></table></div></figure>


<p>でHTMLが生成されます。</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<p>を実行して、ブラウザで
http://localhost:4000/blog/
を開くと、プレビューできます。</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>でgithubにプッシュされ、10分ぐらい待つと
http://hnakamur.github.com/blog/
に記事のページで作られました。</p>

<p>時間がかかるのは初回にgithub pagesを作るときだけで、次回以降は即座に作られました。</p>

<h2>記事のソースをgithubにプッシュ</h2>

<p>リモートの設定にoriginを追加して、そこをデフォルトのブランチに設定。</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>git remote add origin git@github.com:hnakamur/blog.git
</span><span class='line'>git config branch.master.remote origin
</span></code></pre></td></tr></table></div></figure>


<p>設定の変更と生成されたソースをコミット、プッシュします。</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>git add .
</span><span class='line'>git commit -m &#39;Modify config. Add source and sass&#39;
</span><span class='line'>git push origin HEAD:source
</span></code></pre></td></tr></table></div></figure>


<p>github上でのブランチ名をsourceではなくmasterにしてよければ、単に</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>git push
</span></code></pre></td></tr></table></div></figure>


<p>でOKです。</p>

<h2>ローカルのApacheでプレビュー</h2>

<p>Apacheは事前にセットアップ済みという前提で、プレビュー用の設定を追加します。</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>sudo vi /etc/apache2/other/blog.conf
</span></code></pre></td></tr></table></div></figure>


<p>と実行して、以下の内容で作成します(hnakamurの部分は自分のアカウント名で置換してください)。</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Alias /blog /Users/hnakamur/octopress/public/blog
</span><span class='line'>&lt;Directory /Users/hnakamur/octopress/public/blog&gt;
</span><span class='line'>  AllowOverride None
</span><span class='line'>  DirectoryIndex index.html
</span><span class='line'>  Order allow,deny
</span><span class='line'>  Allow from all
</span><span class='line'>&lt;/Directory&gt;
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>sudo apachectl restart
</span></code></pre></td></tr></table></div></figure>


<p>でApacheを再起動します。</p>

<p>これ以降は記事を編集してrake generateだけ実行すれば <a href="http://localhost/blog/">http://localhost/blog/</a> を開いてプレビューできます。</p>

<h2>今回のはまりポイント</h2>

<h3>YAMLで文字列を&#8221;&#8220;で囲む必要があった</h3>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ rake generate
</span><span class='line'>(in /Users/hnakamur/octopress)
</span><span class='line'>## Generating Site with Jekyll
</span><span class='line'>unchanged sass/screen.scss
</span><span class='line'>/Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/psych.rb:148:in `parse&#39;: couldn&#39;t parse YAML at line 16 column 13 (Psych::SyntaxError)
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/psych.rb:148:in `parse_stream&#39;
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/psych.rb:119:in `parse&#39;
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/psych.rb:106:in `load&#39;
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/psych.rb:205:in `load_file&#39;
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/jekyll-0.11.0/lib/jekyll.rb:119:in `configuration&#39;
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/jekyll-0.11.0/bin/jekyll:207:in `&lt;top (required)&gt;&#39;
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/bin/jekyll:19:in `load&#39;
</span><span class='line'>  from /Users/hnakamur/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/bin/jekyll:19:in `&lt;main&gt;&#39;
</span></code></pre></td></tr></table></div></figure>


<p>_config.ymlの</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>date_format: %Y-%m-%dT%k:%M:%S%z
</span></code></pre></td></tr></table></div></figure>


<p>を</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>date_format: &quot;%Y-%m-%dT%k:%M:%S%z&quot;
</span></code></pre></td></tr></table></div></figure>


<p>と修正して再実行したらOKでした。</p>

<h3>git push origin sourceでエラー</h3>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ git push origin source
</span><span class='line'>error: src refspec source does not match any.
</span><span class='line'>error: failed to push some refs to &#39;git@github.com:hnakamur/blog.git&#39;
</span></code></pre></td></tr></table></div></figure>


<p>ググって <a href="http://stackoverflow.com/questions/959477/error-when-git-push-to-github">Error when &#8220;git push&#8221; to github - Stack Overflow</a> を発見。</p>

<figure class='code'><figcaption><span>_config.yml (before edit)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>git push origin HEAD:source
</span></code></pre></td></tr></table></div></figure>


<p>にしたらOK。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello, octopress!]]></title>
    <link href="http://hnakamur.github.com/blog/2012/03/03/hello/"/>
    <updated>2012-03-03T17:57:00+09:00</updated>
    <id>http://hnakamur.github.com/blog/2012/03/03/hello</id>
    <content type="html"><![CDATA[<p>octopressでブログ記事を投稿してみるテスト。</p>
]]></content>
  </entry>
  
</feed>
