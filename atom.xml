<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[hnakamur's blog at github]]></title>
  <link href="http://hnakamur.github.io/blog/atom.xml" rel="self"/>
  <link href="http://hnakamur.github.io/blog/"/>
  <updated>2014-06-10T07:32:18+09:00</updated>
  <id>http://hnakamur.github.io/blog/</id>
  <author>
    <name><![CDATA[Hiroaki Nakamura]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[久々にoctopressをアップデート]]></title>
    <link href="http://hnakamur.github.io/blog/2014/06/10/upgrade-octopress/"/>
    <updated>2014-06-10T07:26:53+09:00</updated>
    <id>http://hnakamur.github.io/blog/2014/06/10/upgrade-octopress</id>
    <content type="html"><![CDATA[<p>octopressをアップデートした時にハマったのでメモ。
アップデート手順は<a href="http://blog.n-z.jp/blog/2013-12-21-update-octopress.html">octopressをアップデートしてisolateを使い始めた - @znz blog</a>の「octopress のアップデート」の部分を参考にしました。ありがとうございます。</p>

<h2>Octopressのアップデート</h2>

<p><a href="http://octopress.org/docs/updating/">Updating Octopress - Octopress</a>の&#8221;How to Update&#8221;のコマンドを順に実行しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git pull octopress master     # Get the latest Octopress
</span><span class='line'>bundle install                # Keep gems updated
</span><span class='line'>rake update_source            # update the template's source
</span><span class='line'>rake update_style             # update the template's style</span></code></pre></td></tr></table></div></figure>


<p>git pullではconflictsが起きたので、適宜修正しました。基本的にはHEAD側を採用。</p>

<h2>sass-globbingをGemfileに追加。</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle exec rake generate</span></code></pre></td></tr></table></div></figure>


<p>を実行した時に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>LoadError on line ["161"] of /Users/hnakamur/octopress/vendor/bundle/ruby/2.1.0/gems/compass-0.12.6/lib/compass/configuration/data.rb: cannot load such file -- sass-globbing</span></code></pre></td></tr></table></div></figure>


<p>というエラーが出ました。</p>

<p>Gemfileにsass-globbingを追加して、<code>bundle</code>でインストールするとエラーは解消しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSX上でPythonのPILの代わりにPillowをインストールする]]></title>
    <link href="http://hnakamur.github.io/blog/2014/06/10/install-python-pillow-on-osx/"/>
    <updated>2014-06-10T06:25:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2014/06/10/install-python-pillow-on-osx</id>
    <content type="html"><![CDATA[<p>試したバージョン</p>

<ul>
<li>Python: 2.7.7</li>
<li>OSX: 10.8.5</li>
</ul>


<p>以前作った<a href="https://github.com/hnakamur/gae-oauth2-sample/">Google App Engine OAuth 2.0 sample</a>について問合せを受けたので、動作確認しようと思ったらPILのインストールでエラーになってしまいました。
とりあえず、このサンプルではPIL無くても問題なかったので、<a href="https://github.com/hnakamur/gae-oauth2-sample/blob/master/pip_install">pip_install</a>からPILを外して試しました。</p>

<p><a href="http://derivecv.tumblr.com/post/79130719546">【ライブラリ】Pillow : PIL (Python Imaging Library )の現代的フォーク版 | DERiVE ブログ &amp; メルマガ</a>によるとPILは開発停止していて<a href="http://pillow.readthedocs.org/en/latest/">Pillow — Pillow v2.4.0 (PIL fork)</a>を使うのが良いそうです。</p>

<p><a href="http://stackoverflow.com/questions/19532125/cant-install-pil-after-mac-os-x-10-9">python - Can&rsquo;t install PIL after Mac OS X 10.9 - Stack Overflow</a>を見るとPillowのインストールには<a href="http://xquartz.macosforge.org/landing/">XQuartz</a>が必要らしいです。</p>

<p>調べてみると、<a href="http://caskroom.io/">Homebrew Cask</a>に<a href="https://github.com/caskroom/homebrew-cask/blob/master/Casks/xquartz.rb">xquartz.rb</a>が含まれていました。
ということで、OSXでのインストール手順は以下で行けました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew cask install xquartz
</span><span class='line'>pip install Pillow</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef-soloとAnsibleとFabricを試した感想]]></title>
    <link href="http://hnakamur.github.io/blog/2013/09/01/tried-chef-ansible-fabric/"/>
    <updated>2013-09-01T23:48:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2013/09/01/tried-chef-ansible-fabric</id>
    <content type="html"><![CDATA[<p>Chef-soloとAnsibleとFabricを試してみたので感想をメモ。どれもそんなに深くは使い込んではいない。</p>

<p>このメモは自分の脳内の考えを整理するためのもので、人が使うことについてどうこう言うつもりはないです。</p>

<h2>Chef-solo</h2>

<ul>
<li>書いてみたcookbookはこちら。<a href="https://github.com/hnakamur/chef-cookbooks">hnakamur/chef-cookbooks</a> <a href="https://github.com/hnakamur/chef-repo">hnakamur/chef-repo</a></li>
<li>クックブックは手順を書くのではなくて結果を書くというのがどうも本質的に違うと私は思ってしまう。料理のレシピだって手順を書くし。書結果がこうあるべきというのはserverspecが出来た今となってはそちらに任せて、クックブックは本来手順を書くべきものだと思う。</li>
<li>RubyのDSLだけど結局上から順に評価されるので、実は手続きを書いていることになっている。でもファイル単位でしか再利用できないので、一部だけ使いたいと思ってコピペするしかなくなるのが悲しい。</li>
<li>Berkshelfでコミュニティクックブックをダウンロードして、ラッパークックブックを書くのがベストプラクティスってのが、無駄な苦行に思えてどうしても受け入れられない。自分のニーズに合わせて一から書くほうが早いしコンパクトで見やすい。これってDSLだからそうなるのかなー。</li>
<li>もしDSLではなくRubyのクラスとして定義するようになっていて、各タスクをメソッドとして定義するようになっていたら、もっと再利用しやすかったのではないかと思う。それってむしろrakeのほうが近い気がする。<a href="http://rubyhitsquad.com/Vlad_the_Deployer.html">Vlad the Deployer</a>とかVladから切りだされた<a href="http://rubygems.org/gems/rake-remote_task">rake-remote_task | RubyGems.org | your community gem host</a>ベースで組み立てる感じ。なんでVladは人気出なかったのかな～。Capistranoよりいいと思うんだけど。</li>
</ul>


<h2>Ansible</h2>

<ul>
<li>書いてみたplaybookはこちら。<a href="https://github.com/hnakamur/ansible-playbooks">hnakamur/ansible-playbooks</a></li>
<li>手続きを記述するのにyamlというのは力不足。基本は順次処理で実行条件で実行するしないの制御ができるだけ。単一のタスクではパラメータでループはできるけど、複数のタスクをまとめてループとかはできない。</li>
<li>モジュールとして用意されている処理はすっきり書けるが、そうでない場合はshellモジュールでゴリゴリ書くか自前モジュールを作るかになる。自前モジュールを作るのは簡単だが配布の仕組みが確立されていないので、自前でコピーする必要がある。</li>
<li>やはり手続きはプログラミング言語で記述するほうが自由度は高いと感じた。</li>
</ul>


<p>2013-09-02 追記</p>

<ul>
<li>訂正です。自作モジュール配布の仕組みは標準で用意されていました。libraryフォルダにモジュールを置いておけば自動で読み込まれます。<a href="http://www.ansibleworks.com/docs/bestpractices.html#bundling-ansible-modules-with-playbooks">Bundling Ansible Modules With Playbooks</a></li>
<li>それ以外の場所に置きたい場合は環境変数ANSIBLE_LIBRARYを設定するかコマンドラインオプションに&ndash;module-pathを指定すればOKです。 <a href="http://www.ansibleworks.com/docs/moduledev.html#module-development">Module Development | AnsibleWorks</a></li>
<li><a href="https://twitter.com/r_rudi">しろう</a>さん、<a href="https://twitter.com/r_rudi/status/374375071000702976">ご指摘</a>ありがとうございました！</li>
</ul>


<h2>Fabric</h2>

<ul>
<li>書いてみたfabfileはこちら。<a href="https://github.com/hnakamur/my-fabfiles">hnakamur/my-fabfiles</a></li>
<li>Pythonで手続きを書けるので、処理の流れは自由に書けて良い。</li>
<li>rpmがインストール済みならダウンロードしないといった処理も自然に書ける。chefやansibleだと素直に書くとsha256sumを計算するという処理が毎回走ってしまう。自分で条件判定処理を記述して実行条件をつければ可能だが、ごちゃごちゃして見づらくなる。</li>
<li>細かく関数に分けておけば必要なところだけの再利用も簡単。</li>
<li>Ansibleのモジュールのようなものも、ユーティリティ関数を書くだけの話なので、レシピを書くのとなんら変わらない。レシピとモジュールの開発を同じ枠組みでできるのは便利。モジュールつくって本家にpull requestとかしなくてもすぐ使えるし。</li>
<li>基本的にはコマンドを順次実行するだけという思想なので、冪等性について考慮した設計になってないのは不便。</li>
<li>vagrantでfabricでprovisionするプラグインも作ってみた。 <a href="https://github.com/hnakamur/vagrant-fabric-provisioner">hnakamur/vagrant-fabric-provisioner</a></li>
<li>テンプレートからファイル生成も標準では毎回上書きされてしまう。Ansibleと同じようにチェックサムを計算して違う時だけ上書きするような関数を自作してみた。<a href="https://github.com/hnakamur/my-fabfiles/blob/master/fabfile/common/lib/template.py">my-fabfiles/fabfile/common/lib/template.py at master · hnakamur/my-fabfiles</a> 変更したかどうかも戻り値で返すようにした。これによって変更した場合だけサービス再起動とかは可能になった。</li>
<li>が、本当はchefのnotificationのように、ホスト毎の処理が終わった後にサービス再起動をまとめて実行したいところ。post-processキューみたいな仕組みが必要そう。</li>
<li>処理をpythonで書けるのはいいのだが、リモートでの処理は基本コマンド実行になるのでpythonで直接ファイルを読み書きとかは出来ない。これがもどかしい感じ。</li>
<li>今バージョン1.7で2.0でオーバーホールするRoadmapのようだがどうなっていくかまだわからない感じ。</li>
</ul>


<h2>思いつき</h2>

<ul>
<li>ふと思いついたのだが、Goでライブラリを用意してレシピもGoで書くのは面白いかも。</li>
<li>Goならクロスコンパイルも簡単なので、ターゲットマシン用のバイナリを生成してrsync/scpでコピーしてターゲットマシン上で実行するという手が使える。するとファイルの読み書きもコマンド実行でもGoの関数からでもどちらでも実行できる。</li>
<li>dockerみたいに一つのバイナリで複数の役割を持てせるようにすれば、デーモンとして実行しておいて、さらにsshからコマンド実行して制御ということも可能かも。あるいはエージェントみたいにして相互通信とかサーバと通信して連携するという道も有り得る。</li>
<li>よくよく考えたら別にGoでなくても、言語処理系とライブラリとレシピのファイルをrsyncで送り込んで実行すれば同じか。</li>
<li>でもGoならタスクキューとか作ってgoroutineで並列処理したり、channelで連携制御したりというのが書きやすそうなので夢は広がるな〜。</li>
</ul>


<p>まずはローカルでコマンド実行するとか、テンプレートからファイル生成する（但し変更が無い場合は上書きしない）ユーティリティ関数群のライブラリを作ってみようということで今作り中。</p>

<p>他にもいろいろやることがあるので、ツールとして完成するところまで行くかは期待薄。でも、ツールとしては完成しなくてもユーティリティ関数のライブラリでも有効活用できるしGoの勉強にもなるので、気が向いた時にマイペースでやってみよう。</p>

<p>2013-09-02 追記その2</p>

<ul>
<li><a href="http://qiita.com/hnakamur/items/b20458110777c3ceea3a">Ansibleで自作モジュールを作成してplaybookと一緒に配布 - Qiita [キータ]</a>に書きましたが、Ansibleのモジュール作成は簡単です。一定のルールに従ってスクリプトファイルを作るだけです。</li>
<li>しかも、今頃気づいたのですが、モジュールはターゲットマシン上で実行されます。なので、例えばPythonで書く場合は直接ターゲットマシン上のファイルを読み書きできるわけです。</li>
<li>ということで、FabricはPythonだけどターゲットマシン上で実行されないのでもどかしいと思っていた問題はAnsibleのモジュールでは無関係です。</li>
<li>あとは、処理のフローが複雑な箇所はモジュールとして実装することにすれば、全体の流れはyamlで順次処理というのでも殆どの場合はカバーできるような気がしてきました。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant 1.1.5とSaharaを試した]]></title>
    <link href="http://hnakamur.github.io/blog/2013/04/03/how-to-setup-vagrant-1-dot-1-5-and-sahara/"/>
    <updated>2013-04-03T18:43:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2013/04/03/how-to-setup-vagrant-1-dot-1-5-and-sahara</id>
    <content type="html"><![CDATA[<h2>Vagrantと1.0.xと1.1.xについて</h2>

<p>バージョン1.1.xの位置づけについては以下の記事を参照。
<a href="http://www.hashicorp.com/blog/vagrant-1-1-and-vmware.html">Vagrant 1.1, VMware Fusion - HashiCorp</a>
変更履歴は <a href="https://github.com/mitchellh/vagrant/blob/master/CHANGELOG.md">vagrant/CHANGELOG.md at master · mitchellh/vagrant · GitHub</a>。</p>

<p>gem installで入れられるのは1.0.x系のみ。現在は1.0.7。
<a href="http://rubygems.org/search?utf8=%E2%9C%93&amp;query=vagrant">search | RubyGems.org | your community gem host</a></p>

<h2>Vagrant 1.1.5のインストール</h2>

<p><a href="http://www.vagrantup.com/">Vagrant</a>
→ <a href="http://downloads.vagrantup.com/">Vagrant - Downloads</a>
→ <a href="http://downloads.vagrantup.com/tags/v1.1.5">Vagrant - Downloads v1.1.5</a>
と進み、Vagrant.dmgをダウンロードしてインストール</p>

<h2>PATH設定</h2>

<p>vagrantコマンドにPATHを通します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat &lt;&lt;'EOF' &gt;&gt; ~/.bash_profile
</span><span class='line'>export PATH=/Applications/Vagrant/bin:$PATH
</span><span class='line'>EOF
</span><span class='line'>. ~/.bash_profile</span></code></pre></td></tr></table></div></figure>


<p>ruby 1.9.3p327が同梱されています。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ /Applications/Vagrant/embedded/bin/ruby --version
</span><span class='line'>ruby 1.9.3p327 (2012-11-10 revision 37606) [universal.x86_64-darwin12.2.1]</span></code></pre></td></tr></table></div></figure>


<h3>Vagrant 1.1.x用のSaharaをインストール</h3>

<p><a href="http://www.ryuzee.com/contents/blog/6555">Vagrantの必須プラグインSaharaをVagrant 1.1に対応させました | Ryuzee.com</a>の手順でインストール。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir -p ~/src/chef
</span><span class='line'>cd ~/src/chef
</span><span class='line'>git clone https://github.com/ryuzee/sahara.git
</span><span class='line'>cd sahara
</span><span class='line'>export PATH=/Applications/Vagrant/embedded/bin:$PATH
</span><span class='line'>sudo gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>bundle exec rake build
</span><span class='line'>vagrant plugin install pkg/sahara-0.0.14.gem</span></code></pre></td></tr></table></div></figure>


<p>~/.vagrant.d/gems/gems/sahara-0.0.14/にインストールされた。</p>

<h3>複数VM環境でのテスト</h3>

<p>Vagrantfile</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-*- mode: ruby -*-
</span><span class='line'>## vi: set ft=ruby :
</span><span class='line'>
</span><span class='line'>Vagrant::Config.run do |config|
</span><span class='line'>  config.ssh.private_key_path = "../vagrant.id_rsa"
</span><span class='line'>
</span><span class='line'>  config.vm.define :web1 do |c|
</span><span class='line'>    c.vm.box = "centos6.4"
</span><span class='line'>    c.vm.host_name = "web1"
</span><span class='line'>    c.vm.network :hostonly, "192.168.33.24"
</span><span class='line'>    c.vm.customize ["modifyvm", :id,
</span><span class='line'>      "--name", "web1",
</span><span class='line'>      "--natdnshostresolver1", "on",
</span><span class='line'>      "--cpus", 1,
</span><span class='line'>      "--memory", 512
</span><span class='line'>    ]
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  config.vm.define :db1 do |c|
</span><span class='line'>    c.vm.box = "centos6.4"
</span><span class='line'>    c.vm.host_name = "db1"
</span><span class='line'>    c.vm.network :hostonly, "192.168.33.25"
</span><span class='line'>    c.vm.customize ["modifyvm", :id,
</span><span class='line'>      "--name", "db1",
</span><span class='line'>      "--natdnshostresolver1", "on",
</span><span class='line'>      "--cpus", 1,
</span><span class='line'>      "--memory", 512
</span><span class='line'>    ]
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>なお、centos6.4のVMはrubyやchef-soloはインストールしていない状態になっています。</p>

<p>sandboxモードをオンにしてVM起動。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant sandbox on
</span><span class='line'>vagrant up</span></code></pre></td></tr></table></div></figure>


<p>ホスト側からchefセットアップ実行。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./bin/knife solo prepare web1
</span><span class='line'>./bin/knife solo prepare db1</span></code></pre></td></tr></table></div></figure>


<p>web1, db1にログインして/usr/bin/chef-soloが作成されたことを確認。</p>

<p>ロールバックを実行。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant sandbox rollback</span></code></pre></td></tr></table></div></figure>


<p>web1, db1にログインして/usr/bin/chef-soloが無いことを確認。</p>

<p>ホスト側から再度chefセットアップ実行。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./bin/knife solo prepare web1
</span><span class='line'>./bin/knife solo prepare db1</span></code></pre></td></tr></table></div></figure>


<p>コミット実行。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant sandbox commit</span></code></pre></td></tr></table></div></figure>


<p>ホスト側からchefクックブック実行。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./bin/knife solo cook web1
</span><span class='line'>./bin/knife solo cook db1</span></code></pre></td></tr></table></div></figure>


<p>web1, db1にログインして/usr/bin/chef-soloがあること、/etc/chefが作成されたことをを確認。</p>

<p>ロールバック実行。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant sandbox rollback</span></code></pre></td></tr></table></div></figure>


<p>web1, db1にログインして/usr/bin/chef-soloがあること、/etc/chefが無いことをを確認。</p>

<p>テスト環境</p>

<ul>
<li>OS: OS X 10.8.3</li>
<li>VirtualBox: 4.2.10</li>
<li>Vagrant: 1.1.5</li>
<li>sahara: <a href="https://github.com/ryuzee/sahara.git">https://github.com/ryuzee/sahara.git</a> commit d22795aa417ec1cb67eb92810afb52300edd3c44</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lua, V8, ruby, mrubyでfib(39)の実行時間比較]]></title>
    <link href="http://hnakamur.github.io/blog/2013/03/12/fib-39-benchmark-in-luajit/"/>
    <updated>2013-03-12T14:20:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2013/03/12/fib-39-benchmark-in-luajit</id>
    <content type="html"><![CDATA[<p><a href="http://hnakamur.github.com/blog/2012/05/04/fib-39-benchmark-in-lua/">lua, V8, ruby, mrubyでfib(39)の実行時間比較 - hnakamur&rsquo;s blog at github</a>が<a href="https://twitter.com/yukihiro_matz">@matz</a>さんにツイートされたのを受けて、各処理系の最新版で再度試してみました。</p>

<h2>テスト環境その1（前回とは違う環境です）</h2>

<ul>
<li>Model: MacBook Pro Retina, Mid 2012</li>
<li>CPU: 2.6GHz Intel Core i7</li>
<li>RAM: 16GB 1600MHz DDR3</li>
<li>OS: Mac OS X 10.8.2</li>
</ul>


<h3>2013-03-24 追記</h3>

<p>goでも試してみました</p>

<h3>go 1.0.3</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>package main
</span><span class='line'>
</span><span class='line'>import "fmt"
</span><span class='line'>
</span><span class='line'>func fib(n int) int {
</span><span class='line'>  if n &lt; 2 {
</span><span class='line'>    return n
</span><span class='line'>  }
</span><span class='line'>  return fib(n - 1) + fib(n - 2)
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>func main() {
</span><span class='line'>  fmt.Println(fib(39))
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ time fib39
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real    0m0.484s
</span><span class='line'>user    0m0.481s
</span><span class='line'>sys     0m0.002s</span></code></pre></td></tr></table></div></figure>


<h3>lua</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function fib(n)
</span><span class='line'>  if n &lt; 2 then
</span><span class='line'>    return n
</span><span class='line'>  end
</span><span class='line'>  return fib(n-2) + fib(n-1)
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>print(fib(39))</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ luajit -v
</span><span class='line'>LuaJIT 2.0.1 -- Copyright (C) 2005-2013 Mike Pall. http://luajit.org/
</span><span class='line'>$ time luajit fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m0.906s
</span><span class='line'>user  0m0.901s
</span><span class='line'>sys 0m0.003s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ lua -v
</span><span class='line'>Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio
</span><span class='line'>$ time lua fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m12.278s
</span><span class='line'>user  0m12.271s
</span><span class='line'>sys 0m0.006s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ src/lua -v
</span><span class='line'>Lua 5.2.1  Copyright (C) 1994-2012 Lua.org, PUC-Rio
</span><span class='line'>$ time src/lua ~/bench/fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m13.971s
</span><span class='line'>user  0m13.965s
</span><span class='line'>sys 0m0.005s</span></code></pre></td></tr></table></div></figure>


<h3>v8</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function fib(n) {
</span><span class='line'>  if (n &lt; 2) return n;
</span><span class='line'>  return fib(n-2) + fib(n-1);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>print(fib(39));</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ v8
</span><span class='line'>V8 version 3.16.14 [sample shell]
</span><span class='line'>&gt; ^D
</span><span class='line'>$ time v8 fib.js
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m0.804s
</span><span class='line'>user  0m0.798s
</span><span class='line'>sys 0m0.008s</span></code></pre></td></tr></table></div></figure>


<h3>ruby</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def fib n
</span><span class='line'>  return n if n &lt; 2
</span><span class='line'>  fib(n-2) + fib(n-1)
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>puts fib(39)</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git log -1 | grep commit
</span><span class='line'>commit 46d8c51763bd13b69a4234f0d4be05cbfd8ae401
</span><span class='line'>
</span><span class='line'>$ time bin/mruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m16.357s
</span><span class='line'>user  0m16.345s
</span><span class='line'>sys 0m0.008s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.9.3-p374 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m16.225s
</span><span class='line'>user  0m16.169s
</span><span class='line'>sys 0m0.043s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.9.3-p392 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m36.813s
</span><span class='line'>user  0m36.746s
</span><span class='line'>sys 0m0.043s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>2.0.0-p0 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby fib.rb 
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m31.828s
</span><span class='line'>user  0m31.743s
</span><span class='line'>sys 0m0.045s</span></code></pre></td></tr></table></div></figure>


<h3>2013-03-12 23:15 追記</h3>

<p>1.9.3-p374と1.9.3-p392でこんなに違うのは変だなと思って、1.9.3-p374を入れなおして再度測ってみました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.9.3-p374 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby ~/bench/fib.rb 
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m38.909s
</span><span class='line'>user  0m38.834s
</span><span class='line'>sys 0m0.045s</span></code></pre></td></tr></table></div></figure>


<p>以前1.9.3-p374を入れた時から、XCodeのバージョンが変わっているので、コンパイラが違うせいで大幅に時間が変わったようです。</p>

<h2>テスト環境その2</h2>

<p><a href="http://hnakamur.github.com/blog/2012/05/04/fib-39-benchmark-in-lua/">lua, V8, ruby, mrubyでfib(39)の実行時間比較 - hnakamur&rsquo;s blog at github</a>と同じマシンです。
OSはLionのままですがアップデートはしています。XCodeもバージョンアップしました。</p>

<ul>
<li>Model: MacBook Air 13-inch, Mid 2011</li>
<li>CPU: 1.7GHz Intel Core i5</li>
<li>RAM: 4GB 1333MHz DDR3</li>
<li>OS: Mac OS X Lion 10.7.5</li>
</ul>


<h3>lua</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ src/luajit -v
</span><span class='line'>LuaJIT 2.0.1 -- Copyright (C) 2005-2013 Mike Pall. http://luajit.org/
</span><span class='line'>$ time src/luajit ~/fib_bench/fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real    0m1.268s
</span><span class='line'>user    0m1.256s
</span><span class='line'>sys     0m0.003s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd ../lua-5.2.1
</span><span class='line'>$ src/lua -v
</span><span class='line'>Lua 5.2.1  Copyright (C) 1994-2012 Lua.org, PUC-Rio
</span><span class='line'>$ time src/lua ~/fib_bench/fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real    0m20.299s
</span><span class='line'>user    0m20.299s
</span><span class='line'>sys     0m0.006s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ src/lua -v
</span><span class='line'>Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio
</span><span class='line'>$ time src/lua ~/fib_bench/fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real    0m20.100s
</span><span class='line'>user    0m20.089s
</span><span class='line'>sys     0m0.012s</span></code></pre></td></tr></table></div></figure>


<h3>V8</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ v8
</span><span class='line'>V8 version 3.16.14 [sample shell]
</span><span class='line'>&gt; ^D
</span><span class='line'>
</span><span class='line'>$ time v8 fib.js
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real    0m1.105s
</span><span class='line'>user    0m1.099s
</span><span class='line'>sys     0m0.011s</span></code></pre></td></tr></table></div></figure>


<h3>ruby</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.9.3-p194 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real    0m23.462s
</span><span class='line'>user    0m23.431s
</span><span class='line'>sys     0m0.039s</span></code></pre></td></tr></table></div></figure>


<p>この1.9.3-p194は以前のXCodeでビルドしたものです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.9.3-p392 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real    0m51.765s
</span><span class='line'>user    0m51.679s
</span><span class='line'>sys     0m0.048s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>2.0.0-p0 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real    0m47.074s
</span><span class='line'>user    0m47.048s
</span><span class='line'>sys     0m0.045s</span></code></pre></td></tr></table></div></figure>


<h2>テスト環境その3</h2>

<ul>
<li>Model: NEC Express5800/S70 type RB</li>
<li>CPU: Intel Pentium G6950 (2.8GHz)</li>
<li>RAM: 16GB DDR3-1333</li>
<li>OS: CentOS 6.4 x86_64</li>
</ul>


<h3>lua</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ luajit -v
</span><span class='line'>LuaJIT 2.0.1 -- Copyright (C) 2005-2013 Mike Pall. http://luajit.org/
</span><span class='line'>$ time luajit fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m1.244s
</span><span class='line'>user  0m1.241s
</span><span class='line'>sys 0m0.000s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ src/lua -v
</span><span class='line'>Lua 5.2.1  Copyright (C) 1994-2012 Lua.org, PUC-Rio
</span><span class='line'>$ time src/lua ~hnakamur/fib_bench/fib.lua 
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m15.804s
</span><span class='line'>user  0m15.774s
</span><span class='line'>sys 0m0.002s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ time src/lua ~hnakamur/fib_bench/fib.lua 
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m15.658s
</span><span class='line'>user  0m15.627s
</span><span class='line'>sys 0m0.002s</span></code></pre></td></tr></table></div></figure>


<h3>V8</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./out/x64.release/d8   
</span><span class='line'>V8 version 3.16.14 [console: dumb]
</span><span class='line'>d8&gt; 
</span><span class='line'>Segmentation fault
</span><span class='line'>$ time ./out/x64.release/d8 ~hnakamur/fib_bench/fib.js
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m1.311s
</span><span class='line'>user  0m1.314s
</span><span class='line'>sys 0m0.004s</span></code></pre></td></tr></table></div></figure>


<h3>ruby</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.9.3-p374 (set by /usr/local/rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m40.485s
</span><span class='line'>user  0m40.365s
</span><span class='line'>sys 0m0.038s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.9.3-p392 (set by /usr/local/rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m38.841s
</span><span class='line'>user  0m38.749s
</span><span class='line'>sys 0m0.013s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>2.0.0-p0 (set by /usr/local/rbenv/version)
</span><span class='line'>$ time ruby fib.rb 
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m32.491s
</span><span class='line'>user  0m32.410s
</span><span class='line'>sys 0m0.014s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git log -1|grep commit
</span><span class='line'>commit f63cd331da6257f9b44778dabff60be55b0721fa
</span><span class='line'>$ time bin/mruby ~hnakamur/fib_bench/fib.rb 
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m20.752s
</span><span class='line'>user  0m20.713s
</span><span class='line'>sys 0m0.002s</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[d3.jsを使ったツールチップあり複数折れ線グラフのサンプルを作った]]></title>
    <link href="http://hnakamur.github.io/blog/2013/03/02/multi-series-line-chart-example-with-tooltip-using-d3-dot-js/"/>
    <updated>2013-03-02T00:10:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2013/03/02/multi-series-line-chart-example-with-tooltip-using-d3-dot-js</id>
    <content type="html"><![CDATA[<p><a href="http://d3js.org/">D3.js - Data-Driven Documents</a>を使ってツールチップあり複数折れ線グラフのサンプルを作ったのでメモ。</p>

<p><a href="http://hnakamur.github.io/blog/downloads/code/2013-03-02-multi-series-line-chart-example-with-tooltip-using-d3-dot-js/3884955.html">サンプル</a></p>

<p><a href="http://bl.ocks.org/mbostock/3884955">Multi-Series Line Chart</a>のサンプルをベースに改良しました。</p>

<h2>X軸のラベルを回転</h2>

<p><a href="http://www.d3noob.org/2013/01/how-to-rotate-text-labels-for-x-axis-of.html">D3.js Tips and Tricks: How to rotate the text labels for the x Axis of a d3.js graph</a>を参考にして回転させました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  svg.append("g")
</span><span class='line'>      .attr("class", "x axis")
</span><span class='line'>      .attr("transform", "translate(0," + height + ")")
</span><span class='line'>      .call(xAxis)
</span><span class='line'>      .selectAll("text")
</span><span class='line'>        .style("text-anchor", "end")
</span><span class='line'>        .attr("dx", "-.8em")
</span><span class='line'>        .attr("dy", "-.6em")
</span><span class='line'>        .attr("transform", "rotate(-90)");</span></code></pre></td></tr></table></div></figure>


<h2>ツールチップを出す</h2>

<p><a href="https://gist.github.com/biovisualize/1016860#gistcomment-61316">Simple D3 tooltip</a>の手法で、線でもツールチップは出せなくはないのですが、カーソル位置のデータが取れないので、データの点に円を作成することにしました。</p>

<p><a href="https://groups.google.com/forum/?fromgroups=#!topic/d3-js/8XLzUYLoFnY">multi-line chart with circle points - Google グループ</a>を参考に以下の様なコードで円を作成しました。</p>

<p>ツールチップを出す部分は<a href="https://gist.github.com/biovisualize/1016860#gistcomment-61316">Simple D3 tooltip</a>を参考にしました。元のコードではイベントを<code>event</code>で参照していましたが、ChromeとSafariでは動くもののFirefoxではundefinedになっていました。<a href="https://github.com/mbostock/d3/wiki/Selections#wiki-on">Selections · mbostock/d3 Wiki</a>を見ると、<code>d3.event</code>で参照するのが正しいので修正しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> city. selectAll("circle")
</span><span class='line'>      .data(function(d) { return d.values.map(function(v) {
</span><span class='line'>              return {date: v.date, temperature: v.temperature, name: d.name};
</span><span class='line'>            }); })
</span><span class='line'>    .enter().append("circle")
</span><span class='line'>      .attr("cx", function(d, i) { return x(d.date); })
</span><span class='line'>      .attr("cy", function(d, i) { return y(d.temperature); })
</span><span class='line'>      .style("fill", function(d) { return color(d.name); })
</span><span class='line'>      .attr("r", 1)
</span><span class='line'>      .on("mouseover", function(){
</span><span class='line'>        return tooltip.style("visibility", "visible");
</span><span class='line'>      })
</span><span class='line'>      .on("mousemove", function(d){
</span><span class='line'>        return tooltip
</span><span class='line'>          .style("top", (d3.event.pageY-10)+"px")
</span><span class='line'>          .style("left",(d3.event.pageX+10)+"px")
</span><span class='line'>          .html("&lt;dl&gt;&lt;dt&gt;date&lt;/dt&gt;&lt;dd&gt;" + d3.time.format("%Y-%m-%d")(d.date) + "&lt;/dd&gt;&lt;dt&gt;temperature&lt;/dt&gt;&lt;dd&gt;" + d.temperature + "&lt;/dd&gt;&lt;dt&gt;name&lt;/dt&gt;&lt;dd&gt;" + d.name + "&lt;/dd&gt;&lt;/dl&gt;");
</span><span class='line'>      })
</span><span class='line'>      .on("mouseout", function(){
</span><span class='line'>        return tooltip.style("visibility", "hidden");
</span><span class='line'>      });</span></code></pre></td></tr></table></div></figure>


<p>見た目がうるさくないように円の半径は1とし、線だけ見えるような感じにしています。すると点にカーソルでポイントするのが大変なので、太めのストロークを透明色で指定して、ポイントしやすくしています。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.tooltip {
</span><span class='line'>  border: 1px solid black;
</span><span class='line'>  background-color: white;
</span><span class='line'>  padding: 5px 8px 4px 8px;
</span><span class='line'>  border-radius: 4px;
</span><span class='line'>  -moz-border-radius: 4px;
</span><span class='line'>  -webkit-border-radius: 4px;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>線のデータ補完を止める</h2>

<p>データ補完してしまうと、線とデータ点がずれてしまうので、補完は止めます。
interpolate()を呼ばなければOK。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var line = d3.svg.line()
</span><span class='line'>    //.interpolate("basis")
</span><span class='line'>    .x(function(d) { return x(d.date); })
</span><span class='line'>    .y(function(d) { return y(d.temperature); });</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EC2で同じリージョンの全ホストのプライベートIPを起動時にhostsに自動登録]]></title>
    <link href="http://hnakamur.github.io/blog/2013/02/16/aws-update-hosts-for-servers-in-same-region/"/>
    <updated>2013-02-16T18:31:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2013/02/16/aws-update-hosts-for-servers-in-same-region</id>
    <content type="html"><![CDATA[<p>Elastic IPの上限数にひっかかって使えない自体に遭遇したので作りました。</p>

<p><a href="http://aws.amazon.com/jp/contact-us/eip_limit_request/">Elastic IP アドレス上限緩和申請 | アマゾン ウェブ サービス（AWS 日本語）</a> から緩和申請できるようです。</p>

<p>が、申請完了画面で、3〜5営業日かかる、緊急の場合は、完了画面に表示されるCase Numberを添えて <a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#58;&#101;&#x63;&#x32;&#x2d;&#114;&#101;&#x71;&#x75;&#101;&#x73;&#116;&#x40;&#x61;&#109;&#x61;&#122;&#111;&#110;&#46;&#99;&#111;&#109;">&#101;&#x63;&#x32;&#x2d;&#114;&#x65;&#x71;&#117;&#101;&#x73;&#x74;&#x40;&#97;&#x6d;&#x61;&#x7a;&#111;&#x6e;&#46;&#99;&#111;&#109;</a> に送るようにと書かれていました。</p>

<p>（Case Numberを添えてというのは今気付いた。再度メールしました。ブログに書くために読み返してよかった）</p>

<p>そこで、hostsにプライベートアドレスを登録するスクリプトを書くことにしました。</p>

<p><a href="http://frmmpgit.blog.fc2.com/blog-entry-123.html">EC2 - 動的プライベートIPアドレスをどうにかする | code up</a> を参考にしました。ありがとうございます。</p>

<p>最初は対象のホストの一覧を指定するようなスクリプトを書いていたのですが、ホストを増やすことを考えると編集と反映が面倒だと予想して、リージョン内の全ホストを一括登録することにしました。</p>

<h2>情報取得用のAIMユーザ作成</h2>

<p>AIMでUserを作ってUser PolicyにReadOnlyAccessを与えます。</p>

<h2>スクリプト設置</h2>

<p>以下の設定ファイルとスクリプトを設置します。</p>

<p>アクセスキーとシークレットキーは上で作ったユーザのものを設定します。</p>

<p>/root/.amazon_address_finder_key</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export AWS_ACCESS_KEY=${your_access_key_here}
</span><span class='line'>export AWS_SECRET_KEY=${your_secret_key_here}</span></code></pre></td></tr></table></div></figure>


<p>/usr/local/sbin/update_hosts.sh</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>. /root/.amazon_address_finder_key
</span><span class='line'>region=`ec2-metadata | sed -n 's/^local-hostname: ip-[0-9-]*\.\(.*\)\.compute\.i
</span><span class='line'>nternal/\1/p'`
</span><span class='line'>
</span><span class='line'>ec2-describe-instances --region $region -H --show-empty-fields | gawk '
</span><span class='line'>BEGIN {OFS="\t"; print "127.0.0.1", "localhost localhost.localdomain"}
</span><span class='line'>/^INSTANCE/ {ip = $18}  
</span><span class='line'>/^TAG/ {print ip, gensub(/.*\tName\t([^\t]*).*/, "\\1", $0)}  
</span><span class='line'>' &gt; /etc/hosts</span></code></pre></td></tr></table></div></figure>


<p>/etc/cron.d/update_hosts</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@reboot root /usr/local/sbin/update_hosts.sh</span></code></pre></td></tr></table></div></figure>


<h2>実行</h2>

<p>これで、OS起動時にhostsが上書き更新されます。</p>

<p>インタンスのNameタグに設定した値がホスト名になります。</p>

<p>出力例</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>127.0.0.1       localhost localhost.localdomain
</span><span class='line'>10.132.102.199  web01
</span><span class='line'>10.128.21.174   web02
</span><span class='line'>10.120.32.111   app01
</span><span class='line'>10.132.103.238  app02</span></code></pre></td></tr></table></div></figure>


<h2>githubに移動しました</h2>

<p>さらにhostnameも更新するようにして、スクリプトが発展してきたので、
<a href="https://github.com/hnakamur/aws_scripts">hnakamur/aws_scripts · GitHub</a>
に移動しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IAM管理コンソールでAWSの管理画面用のユーザを作成]]></title>
    <link href="http://hnakamur.github.io/blog/2013/02/09/create-aim-user/"/>
    <updated>2013-02-09T09:37:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2013/02/09/create-aim-user</id>
    <content type="html"><![CDATA[<p>AWS (Amazon Web Services)の管理コンソールを複数人で使う場合に大元のIDとパスワードを共有するのは避けたい場合、IAMでユーザを作成するのがよいと<a href="https://twitter.com/fujiwara">@fujiwara</a>さんに教わりました。これは実際に試した時のメモです。</p>

<p>なお、IAMはIdentity and Access Managementの略です。</p>

<h2>管理者: AIMユーザのログインURLの設定</h2>

<p>初期状態では <a href="https://">https://</a>{ランダムな数字}.signin.aws.amazon.com/console のようなURLになっていますが、好きなサブドメインに変更が可能です。</p>

<ol>
<li>AWSの管理コンソールにログイン</li>
<li>[IAM]をクリック</li>
<li>左のメニューで[Dashboard]をクリック</li>
<li>[Create Account Alias]ボタンを押し、[Account Alias]にサブドメインを入力します。すると <a href="https://">https://</a>{入力したサブドメイン}.signin.aws.amazon.com/console がログインURLになります。</li>
</ol>


<p>元に戻したい場合は[Remove Account Alias]ボタンを押します。</p>

<h2>管理者: AIMユーザの作成</h2>

<h3>ユーザの作成とAPIアクセスキーのダウンロード</h3>

<ol>
<li>AWSの管理コンソールにログイン</li>
<li>[IAM]をクリック</li>
<li>左のメニューで[Users]をクリック</li>
<li>上のツールバーで[Create New Users]ボタンを押す</li>
<li>[Create User]ダイアログで[Enter User Names:]に作成したいユーザのIDを入力。

<ul>
<li>同時に5人までつくれるようです(実際に試したのは1人だけです)。</li>
<li>AWSサービスのAPIを使う場合は[Generate an access key for each User]チェックボックスをオンのままにしておきます。ここでオフにしていても後からキーを発行できるので、不明の場合はオフでいいです。</li>
</ul>
</li>
<li>[Create User]ダイアログで[Create]ボタンを押す</li>
<li>[Download Credentials]ボタンを押して、&#8221;User Name&#8221;,&ldquo;Access Key Id&rdquo;,&ldquo;Secret Access Key&#8221;が書かれたCSVファイルをダウンロード</li>
<li>[Close Windows]ボタンを押す</li>
</ol>


<h3>ユーザの初期パスワード作成とダウンロード</h3>

<ol>
<li>ユーザ一覧でユーザを選択して、上のツールバーの[User Actions]ボタンを押すか、右クリックのポップアップメニューから[Manage Password]メニューを選択</li>
<li>[Manage Password]ダイアログで[Assign an auto-generated password]ラジオボタンを選択した状態で[Apply]ボタンを押す</li>
<li>[Download Credentials]ボタンを押し、&#8221;User Name&#8221;,&ldquo;Password&rdquo;,&ldquo;Direct Signin Link&#8221;が書かれたCSVファイルをダウンロード</li>
<li>[Close Windows]ボタンを押す</li>
</ol>


<h2>利用者: 初回ログインとパスワード変更</h2>

<ol>
<li>&ldquo;User Name&rdquo;,&ldquo;Password&rdquo;,&ldquo;Direct Signin Link&#8221;が書かれたCSVファイルのURLをブラウザで開き、ID、パスワードを入力してログインします。</li>
<li>ツールバー右上のユーザIDのドロップダウンメニューを開き、[Security Credentials]を選択</li>
<li>現在のパスワードと新しいパスワードを入力して[Change Password]ボタンを押して変更</li>
</ol>


<h2>管理者: 利用者のパスワード変更</h2>

<p>ユーザ一覧でポップアップメニューの[Manage Password]メニューから変更できます。</p>

<h2>管理者: 利用者のAPIアクセスキー追加、削除</h2>

<p>ユーザ一覧でポップアップメニューの[Manage Access Keys]メニューから変更できます。</p>

<h2>管理者: 利用者のユーザ削除</h2>

<p>ユーザ一覧でポップアップメニューの[Delete User]メニューから削除できます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[S3 error: Either the Signature query string parameter or the Authorization header should be specified]]></title>
    <link href="http://hnakamur.github.io/blog/2013/02/09/s3-error-either-the-signature-query-string-parameter-or-the-authorization-header-should-be-specified/"/>
    <updated>2013-02-09T01:48:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2013/02/09/s3-error-either-the-signature-query-string-parameter-or-the-authorization-header-should-be-specified</id>
    <content type="html"><![CDATA[<h2>現象</h2>

<p>ApacheからAmazon S3にmod_proxyでリクエストを送ったら、ステータスが400になり、
&ldquo;Either the Signature query string parameter or the Authorization header should be specified, not both&#8221;というエラーメッセージが出てハマったときのメモです。</p>

<p>開発中で、Apacheの設定でBASIC認証をかけていました。</p>

<p>一方、S3では
<a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html#ConstructingTheAuthenticationHeader">Signing and Authenticating REST Requests - Amazon Simple Storage Service</a>
にあるように</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Authorization: AWS AWSAccessKeyId:Signature</span></code></pre></td></tr></table></div></figure>


<p>というリクエストヘッダで認証情報を渡すか、
<a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/S3_QSAuth.html">Using Query String Authentication - Amazon Simple Storage Service</a>
にあるように</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://quotes.s3.amazonaws.com/nelson?AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE&Expires=1177363698&Signature=vjSAMPLENmGa%2ByT272YEAiv4%3D</span></code></pre></td></tr></table></div></figure>


<p>のようなクエリストリングで認証情報を渡すことができます。</p>

<p>ですが、BASIC認証を使っていると、
<a href="http://ja.wikipedia.org/wiki/Basic%E8%AA%8D%E8%A8%BC">Basic認証 - Wikipedia</a>
にあるように</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</span></code></pre></td></tr></table></div></figure>


<p>というようなヘッダがついてしまうため、S3用の認証情報をクエリストリングで指定していると上記のようなエラーになるというわけでした。</p>

<h2>解決法</h2>

<p>RequetHeader unset ヘッダ名で削除すればOKでした。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Location /some/path&gt;
</span><span class='line'>    RequestHeader unset Authorization
</span><span class='line'>&lt;/Location&gt;
</span><span class='line'>ProxyRequests Off
</span><span class='line'>ProxyPassMatch ^/some/path/(.*)$ http://yourdomain.s3-ap-northeast-1.amazonaws.com/$1</span></code></pre></td></tr></table></div></figure>


<p>注意するべきはLocationでS3にプロキシする範囲に限定する必要があるということです。Location無しだとS3にプロキシしないURLについてもAuthorizationヘッダが削除され、BASIC認証のログインダイアログが延々と出続けてしまいました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unboundで在宅時に自宅サーバの名前解決]]></title>
    <link href="http://hnakamur.github.io/blog/2013/02/02/use-unbound-dns-server/"/>
    <updated>2013-02-02T11:43:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2013/02/02/use-unbound-dns-server</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<p>私の自宅ではブロードバンドルータがグローバルIPを持っていて、DNSで自分のドメイン(以下ではexample.comとして説明します)のIPアドレスをそこにしています。ルータからLAN内のLinuxサーバ(CentOS 6.x)へはNATで繋いでいます。</p>

<p>外出時はこれでよいのですが、在宅時にLAN内からexample.comという名前でアクセスしようとするとサーバにアクセスできません。</p>

<p>今までは <a href="https://github.com/hnakamur/switch_net_configs">hnakamur/switch_net_configs · GitHub</a> を使って外出時と在宅時に/etc/hostsと~/.ssh/configを切り替えてしのいでいました。が、VirtualBoxのゲストとかを考えると面倒です。</p>

<p>そこで、自宅サーバにDNSサーバを入れてみることにしました。
bindはセキュリティフィクスが頻発しているから避けて他のにしようと思い、<a href="http://en.wikipedia.org/wiki/Comparison_of_DNS_server_software">Comparison of DNS server software - Wikipedia, the free encyclopedia</a> を見てみました。
moreに対してlessが生まれたように、bindに対してunboundというネーミングセンスが気に入ったのと、 <a href="http://www.atmarkit.co.jp/flinux/special/unbound/unbounda.html">＠IT：DNSリゾルバのニューフェイス「Unbound」（1/2）</a> の記事を読んで、簡単に導入できそうと思ったのでUnboundにしました。</p>

<h2>導入手順</h2>

<p>unboundはepelにあるので、yumでインストールします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install unbound</span></code></pre></td></tr></table></div></figure>


<p>/etc/unbound/unbound.confを編集します。編集結果はこんな感じ。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># diff -u /etc/unbound/unbound.conf.orig /etc/unbound/unbound.conf
</span><span class='line'>--- /etc/unbound/unbound.conf.orig  2013-02-02 01:56:13.541249978 +0900
</span><span class='line'>+++ /etc/unbound/unbound.conf 2013-02-02 02:15:52.559227483 +0900
</span><span class='line'>@@ -28,7 +28,7 @@
</span><span class='line'>  extended-statistics: yes
</span><span class='line'> 
</span><span class='line'>  # number of threads to create. 1 disables threading.
</span><span class='line'>- num-threads: 2
</span><span class='line'>+ num-threads: 1
</span><span class='line'> 
</span><span class='line'>  # specify the interfaces to answer queries from by ip-address.
</span><span class='line'>  # The default is to listen to localhost (127.0.0.1 and ::1).
</span><span class='line'>@@ -40,6 +40,8 @@
</span><span class='line'>  # interface: 192.0.2.153
</span><span class='line'>  # interface: 192.0.2.154
</span><span class='line'>  # interface: 2001:DB8::5
</span><span class='line'>+ interface: 127.0.0.1
</span><span class='line'>+ interface: 192.168.11.103
</span><span class='line'>  #
</span><span class='line'>  # for dns over tls and raw dns over port 80
</span><span class='line'>  # interface: 0.0.0.0@443
</span><span class='line'>@@ -69,6 +71,10 @@
</span><span class='line'>  # number of ports to allocate per thread, determines the size of the
</span><span class='line'>  # port range that can be open simultaneously.
</span><span class='line'>  # outgoing-range: 4096
</span><span class='line'>+ outgoing-range: 900
</span><span class='line'>+ # Note: The value outgoing-range was set to avoid the warning below:
</span><span class='line'>+ # unbound[28716:0] warning: increased limit(open files) from 1024 to 1080
</span><span class='line'>+ # This server is used only by me, so a small value should be OK.
</span><span class='line'> 
</span><span class='line'>  # permit unbound to use this port number or port range for
</span><span class='line'>  # making outgoing queries, using an outgoing interface.
</span><span class='line'>@@ -178,6 +184,8 @@
</span><span class='line'>  # access-control: ::0/0 refuse
</span><span class='line'>  # access-control: ::1 allow
</span><span class='line'>  # access-control: ::ffff:127.0.0.1 allow
</span><span class='line'>+ access-control: 127.0.0.0/8 allow
</span><span class='line'>+ access-control: 192.168.11.0/24 allow
</span><span class='line'> 
</span><span class='line'>  # if given, a chroot(2) is done to the given directory.
</span><span class='line'>  # i.e. you can chroot to the working directory, for example,</span></code></pre></td></tr></table></div></figure>


<ul>
<li>自宅サーバのCPUはシングルコアなのでnum-threadsは1にしました。</li>
<li>interfaceを0.0.0.0にしていないのは、KVMが別のネットワークインタフェースでdnsmaskでDNSのポート53を既に使っているためです。192.168.11.103はDNSサーバのアドレスです。</li>
<li>outgoing-rangeはopen filesの警告が出ないように下げてみました。どうせ使うのは私一人なので小さくてもいいだろうし。</li>
<li>access-controlはLAN内からのみ許可するようにしました。</li>
</ul>


<p>/etc/unbound/local.d/example.com.confにlocal-dataの設定を書きます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>local-data: "example.com A 192.168.11.103"</span></code></pre></td></tr></table></div></figure>


<p>あとは、iptablesでUDPのポート53を開けて、unboundのサービスを起動してchkconfigで自動起動をオンにすればOKです。</p>

<h2>クライアントの設定</h2>

<p>Linuxの場合は、
/etc/sysconfig/networkに</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DNS1="192.168.11.103"</span></code></pre></td></tr></table></div></figure>


<p>と書いて、以下のコマンドで反映します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service network restart</span></code></pre></td></tr></table></div></figure>


<p>Macでは[システム環境設定]/[ネットワーク]→[詳細]ボタン→[DNS]タブで「192.168.11.103」を指定すれば設定出来ます。</p>

<p>が、iPhoneでDNSの設定が出来ないようなので(ちょっと試しただけで未調査)、どうせならルータ側で設定したいなーと思ったら、
<a href="http://matsh.jp/d/0365">ONU一体型ひかり電話ルータ PR-400KI のDNS設定 - matshのふらふら日記</a>
というブログ記事を見つけました。</p>

<p>[詳細設定]-[DNS設定]の[ローカルドメイン問合せテーブル]で、ドメイン名(ワイルドカード指定可能)に対してエントリを追加してドメイン毎にプライマリDNSサーバとセカンダリDNSサーバを登録できるようになっています。</p>

<p>ただし、サーバの指定がIPv6形式のみ受け付けるようになっています。IPv4射影アドレスをIPv6形式で指定すると解決するとのことでした。
<a href="http://kaworu.jpn.org/kaworu/2010-08-16-1.php">IPv6 IPv4射影アドレス とは</a></p>

<p>DNSサーバのIPv4アドレス192.168.11.103の各オクテットを16進数に変換すると
192→C0、168→A8、11→B、103→67となり、IPv4射影アドレスは
::FFFF:C0A8:B67
となりました。</p>

<p>これでMacでもiPhoneでもexample.comで参照できるようになりました。快適！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VirtualBox4でCentOS6.2をインストール]]></title>
    <link href="http://hnakamur.github.io/blog/2012/07/03/virtualbox4decentos6-dot-2woinsutoru/"/>
    <updated>2012-07-03T23:52:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2012/07/03/virtualbox4decentos6-dot-2woinsutoru</id>
    <content type="html"><![CDATA[<h2>VirtualBoxのインストール</h2>

<p><a href="https://www.virtualbox.org/wiki/Downloads">Downloads – Oracle VM VirtualBox</a>
からダウンロードしてインストールしてください。</p>

<h2>ネットワークインストールのISOイメージをダウンロード</h2>

<p><a href="http://ftp.riken.jp/Linux/centos/6.2/isos/x86_64/CentOS-6.2-x86_64-netinstall.iso">CentOS-6.2-x86_64-netinstall.iso</a></p>

<h2>ホストオンリーネットワークを作成</h2>

<ol>
<li>[VirualBox]/[環境設定&hellip;]</li>
<li>[ネットワーク]タブ</li>
<li>[+]アイコンボタンを押してvboxnet0を作成</li>
<li>ドライバーアイコンのボタン</li>
<li>[アダプタ]タブでIPv4アドレスが「192.168.56.1」となっていることを確認</li>
<li>[DHCPサーバー]タブ</li>
<li>[サーバーを有効化]のチェックを外す</li>
<li>[OK]</li>
<li>[OK]</li>
</ol>


<h2>仮想マシンの作成</h2>

<h3>仮想マシン名とOSタイプ</h3>

<p>名前は「CentOS6」
オペレーティングシステムは「Linux」
バージョンは「Linux 2.6 (64bit)」</p>

<h3>メモリ</h3>

<p>メインメモリのサイズは1024MB</p>

<h3>仮想ハードディスク</h3>

<p>変更なし</p>

<h3>the virtual disk creation wizard</h3>

<p>File typeはVDI (VirtualBox Disk Image)</p>

<h3>Virtual disk storage details</h3>

<p>Storage detailsはDyamically allocated</p>

<h3>Virtual disk file location and size</h3>

<p>サイズは30GB</p>

<h2>インストール前の仮想マシンの設定変更</h2>

<h3>DVDドライブにメディアを設定</h3>

<ol>
<li>[仮想マシン]/[設定]</li>
<li>[ストレージ]タブ</li>
<li>ストレージツリーでIDEコントローラ/空を選択</li>
<li>属性のCD/DVDドライブの右のDVDメディアアイコンをクリックして</li>
<li>上記でダウンロードしたCentOS-6.2-x86_64-netinstall.isoを選択</li>
<li>[OK]</li>
</ol>


<h3>ネットワークアダプタ</h3>

<p>以下の手順では[VirtualBox マネージャー]画面からでも操作可能な部分もありますが、説明しやすいのでメニューバーからの操作で説明します。</p>

<ol>
<li>[仮想マシン]/[設定]</li>
<li>[ネットワーク]タブ</li>
<li>[アダプタ2]タブ</li>
<li>[ネットワークアダプタを有効化]にチェック</li>
<li>[割り当て]で「ホストオンリーアダプタ」を選択</li>
<li>[名前]で「vboxnet0」を選択</li>
<li>[OK]</li>
</ol>


<h2>CentOS6.2のインストール</h2>

<h3>テキストモードでインストール開始</h3>

<ol>
<li>[仮想マシン]/[起動]</li>
<li>Welcome to CentOS 6.2!」の画面でTABを押す</li>
</ol>


<pre>
> vmlinuz initrd=initrd.img
</pre>


<p>と表示されているところに、スペース、text、リターンを入力し</p>

<pre>
> vmlinuz initrd=initrd.img text
</pre>


<p>としてインストール開始</p>

<h3>Disc Found</h3>

<p>[Skip]を選択</p>

<h3>Choose a Language</h3>

<p>[English]を選択</p>

<h3>Keyboard Type</h3>

<p>[us]を選択</p>

<h3>Installation Method</h3>

<p>[URL]を選択して[OK]</p>

<h3>Network Device</h3>

<p>[eth0]を選択して[OK]</p>

<h3>Configure TCP/IP</h3>

<p>[Enable IPv6 support]をオフにして[OK]</p>

<h3>URL Setup</h3>

<p><a href="http://ftp.riken.jp/Linux/centos/6.2/os/x86_64">http://ftp.riken.jp/Linux/centos/6.2/os/x86_64</a>
と入力して[OK]</p>

<h3>Would you like to use VNC?</h3>

<p>[Use text mode]を選択</p>

<h3>Error processing driveのWarning</h3>

<p>[Re-initialize all]を選択</p>

<h3>Time Zone Selection</h3>

<p>[System clock uses UTC]のチェックはオンで
[Asia/Tokyo]を選択して[OK]</p>

<h3>Root Password</h3>

<p>[Password]と[Password (confirm)]を入力して[OK]</p>

<h3>Partition Type</h3>

<p>[OK]</p>

<h3>Writing storage configuration to disk</h3>

<p>[Write changes to disk]</p>

<h3>Complete</h3>

<p>[Reboot]を押し、再起動が開始して[Welcome to CentOS 6.2!]の画面になったらTABを2回押して起動を中断
仮想マシンのウィンドウの閉じるボタンを押し、｢操作を選択]で[仮想マシンの電源オフ]を選択して[OK]</p>

<h2>インストール後の仮想マシンの設定変更</h2>

<h3>DVDドライブのメディアを除去</h3>

<ol>
<li>[仮想マシン]/[設定]</li>
<li>[ストレージ]タブ</li>
<li>ストレージツリーでIDEコントローラ/CentOS-6.2-x86_64-netinstall.isoを選択</li>
<li>属性のCD/DVDドライブの右のDVDメディアアイコンをクリックして</li>
<li>[仮想ドライブからディスクを除去]</li>
</ol>


<h3>ネットワークアダプタでvirtio-netを選択</h3>

<ol>
<li>[仮想マシン]/[設定]</li>
<li>[ネットワーク]タブ</li>
<li>[アダプタ1]タブ</li>
<li>[高度]をクリック</li>
<li>アダプタタイプで「準仮想化ネットワーク(virtio-net)」を選択</li>
<li>[アダプタ2]タブ</li>
<li>[高度]をクリック</li>
<li>アダプタタイプで「準仮想化ネットワーク(virtio-net)」を選択</li>
<li>[OK]</li>
</ol>


<h2>仮想ディスクから仮想マシンを起動してネットワークの設定</h2>

<p>[仮想マシン]/[起動]</p>

<p>[localhost login:]というログインプロンプトが表示されたらroot、リターンと入力し、[Password:]プロンプトでパスワード、リターンを入力し、ログイン。</p>

<h3>eth1の設定</h3>

<p>vi /etc/sysconfig/network-scripts/ifcfg-eth1</p>

<h4>変更前</h4>

<p>HWADDRの値はインストール毎に異なります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DEVICE="eth1"
</span><span class='line'>HWADDR="08:00:27:28:EB:27"
</span><span class='line'>NM_CONTROLLED="yes"
</span><span class='line'>ONBOOT="no"</span></code></pre></td></tr></table></div></figure>


<h4>変更後</h4>

<p>ONBOOTをyesに変更し、下記のようにTYPE, IPADDR, NETMASKの行を追加します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DEVICE="eth1"
</span><span class='line'>HWADDR="08:00:27:28:EB:27"
</span><span class='line'>NM_CONTROLLED="yes"
</span><span class='line'>ONBOOT="yes"
</span><span class='line'>TYPE="Ethernet"
</span><span class='line'>IPADDR="192.168.56.101"
</span><span class='line'>NETMASK="255.255.255.0"</span></code></pre></td></tr></table></div></figure>




<pre>
/etc/init.d/network restart
</pre>


<p>を実行しネットワークを再起動します。</p>

<h3>ネットワークの動作確認</h3>

<p>以下のコマンドを実行し、DNS名前解決とインターネットへのアクセスができることを確認。</p>

<pre>
ping ftp.riken.jp
</pre>


<p>ホストマシンから仮想マシンにアクセスできることを確認。</p>

<pre>
ping 192.168.56.101
</pre>


<p>確認できたら仮想マシンからログアウト</p>

<pre>
exit
</pre>


<p>以降はホストマシンからsshでログインして操作可能です。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh root@192.168.56.101</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node.jsのfs.watch()で設定ファイルが更新されたらリロード]]></title>
    <link href="http://hnakamur.github.io/blog/2012/06/27/node-dot-jsfalsefs-dot-watch-deshe-ding-huairugageng-xin-saretararirodo/"/>
    <updated>2012-06-27T14:25:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2012/06/27/node-dot-jsfalsefs-dot-watch-deshe-ding-huairugageng-xin-saretararirodo</id>
    <content type="html"><![CDATA[<p><a href="http://stackoverflow.com/questions/1972242/auto-reload-of-files-in-node-js">javascript - Auto-reload of files in Node.js - Stack Overflow</a>によると、モジュールをリロードするには<a href="https://github.com/isaacs/node-supervisor">isaacs/node-supervisor</a>がよさそうです。</p>

<p>が、今回は設定ファイルのリロードなのでfs.watch(filename, [options], [listener]) で十分ということで試してみました。
<a href="http://nodejs.org/api/fs.html#fs_fs_watch_filename_options_listener">File System Node.js v0.8.0 Manual &amp; Documentation</a>
によると環境によっては使えないそうなので注意が必要です。</p>

<p>CentOS 6.2では使えました。</p>

<p>watch.js</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var fs = require('fs');
</span><span class='line'>fs.watch('router.json', function(ev, filename) {
</span><span class='line'>  if (filename) {
</span><span class='line'>    fs.readFile(filename, function(err, data) {
</span><span class='line'>      if (err) throw err;
</span><span class='line'>      var router = JSON.parse(data);
</span><span class='line'>      console.log(router);
</span><span class='line'>    });
</span><span class='line'>  }
</span><span class='line'>});</span></code></pre></td></tr></table></div></figure>


<p>router.json</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "vhost1.example.com": "127.0.0.1:3000",
</span><span class='line'>  "vhost2.example.com": "127.0.0.1:3001",
</span><span class='line'>  "vhost3.example.com": "127.0.0.1:3002",
</span><span class='line'>  "vhost4.example.com": "127.0.0.1:3003"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>node watch</span></code></pre></td></tr></table></div></figure>


<p>で起動して</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>touch router.json</span></code></pre></td></tr></table></div></figure>


<p>を実行すると</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{ 'vhost1.example.com': '127.0.0.1:3000',
</span><span class='line'>  'vhost2.example.com': '127.0.0.1:3001',
</span><span class='line'>  'vhost3.example.com': '127.0.0.1:3002',
</span><span class='line'>  'vhost4.example.com': '127.0.0.1:3003' }</span></code></pre></td></tr></table></div></figure>


<p>と出力されます。</p>

<p>ただし、vimでrouter.jsonを開いて:wで保存すると下記のエラーでnodeが異常終了してしまいました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/var/www/app/watch-sample/watch.js:6
</span><span class='line'>      if (err) throw err;
</span><span class='line'>                     ^
</span><span class='line'>Error: ENOENT, open 'router.json'</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>node watch</span></code></pre></td></tr></table></div></figure>


<p>再起動後、vimでrouter.jsonを開いて:wqで保存して終了すると異常終了はしませんでしたが、下記のようにコールバックが4回も呼び出されてしまいました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{ 'vhost1.example.com': '127.0.0.1:3000',
</span><span class='line'>  'vhost2.example.com': '127.0.0.1:3001',
</span><span class='line'>  'vhost3.example.com': '127.0.0.1:3002',
</span><span class='line'>  'vhost4.example.com': '127.0.0.1:3003' }
</span><span class='line'>{ 'vhost1.example.com': '127.0.0.1:3000',
</span><span class='line'>  'vhost2.example.com': '127.0.0.1:3001',
</span><span class='line'>  'vhost3.example.com': '127.0.0.1:3002',
</span><span class='line'>  'vhost4.example.com': '127.0.0.1:3003' }
</span><span class='line'>{ 'vhost1.example.com': '127.0.0.1:3000',
</span><span class='line'>  'vhost2.example.com': '127.0.0.1:3001',
</span><span class='line'>  'vhost3.example.com': '127.0.0.1:3002',
</span><span class='line'>  'vhost4.example.com': '127.0.0.1:3003' }
</span><span class='line'>{ 'vhost1.example.com': '127.0.0.1:3000',
</span><span class='line'>  'vhost2.example.com': '127.0.0.1:3001',
</span><span class='line'>  'vhost3.example.com': '127.0.0.1:3002',
</span><span class='line'>  'vhost4.example.com': '127.0.0.1:3003' }</span></code></pre></td></tr></table></div></figure>


<p>実用するには前回の設定内容と比較して変わっている場合だけ処理するとか、設定ファイルを直接見るのではなく更新完了通知用の専用ファイルを用意してそちらをtouchするとか、何らかの対処が必要そうです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node-http-proxyでバーチャルホストで振り分けつつhttp/https->websocketリバースプロキシの実験]]></title>
    <link href="http://hnakamur.github.io/blog/2012/06/27/node-http-proxydebatiyaruhosutodezhen-rifen-ketutuhttp-slash-https-%3Ewebsocketribasupurokisifalseshi-yan/"/>
    <updated>2012-06-27T11:36:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2012/06/27/node-http-proxydebatiyaruhosutodezhen-rifen-ketutuhttp-slash-https->websocketribasupurokisifalseshi-yan</id>
    <content type="html"><![CDATA[<p>以下の2つのページを参考に、node-http-proxyでバーチャルホストで振り分けつつ
http/httpsからwebsocketにリバースプロキシする実験をしてみました。
環境はCentOS 6.2です。ソースは<a href="https://github.com/hnakamur/node-http-proxy-websocket-sample">hnakamur/node-http-proxy-websocket-sample</a>にあります。</p>

<ul>
<li><a href="http://d.hatena.ne.jp/replication/20111108/1320762287">５分くらいで出来るnode.js(0.6) + socket.io(0.8x)のサンプルプログラム - 大人になったら肺呼吸</a></li>
<li><a href="https://github.com/nodejitsu/node-http-proxy">nodejitsu/node-http-proxy</a></li>
</ul>


<pre>
                              +---------------+
                       +------+ VHost1App/app |
                       |      | port 3000     |
 +--------------+      |      +---------------+
-+ proxy-vhost  +------+
 | port 80, 443 |      |      +---------------+
 +--------------+      +------+ VHost2App/app |
                              | port 3001     |
                              +---------------+
</pre>


<p>上記の構成で、
vhost1.example.comというホスト名でアクセスしたらVHost1/app、
vhost2.example.comというホスト名でアクセスしたらVHost2/app
にリバースプロキシするようにします。
*.example.comというワイルドカードの自己証明書でproxy-vhostにてSSLを処理します。</p>

<h2>実行手順</h2>

<h3>自己証明書とパスフレーズ無しの秘密鍵を生成。</h3>

<p>以下、ドメインexample.comの部分は適宜変更してください。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>openssl req -new -newkey rsa:2048 -x509 -nodes -days 365 -set_serial 0 \
</span><span class='line'>  -subj '/C=JP/ST=Kanagawa/L=Yokohama City/CN=*.example.com' \
</span><span class='line'>  -out /etc/pki/tls/certs/wildcard.example.com.crt \
</span><span class='line'>  -keyout /etc/pki/tls/private/wildcard.example.com.key</span></code></pre></td></tr></table></div></figure>


<h3>nodeモジュールインストール</h3>

<p>私の環境では/usr/local/node-v0.6.19にnode.jsをインストールしているのでPATHを通してから実行します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export PATH=/usr/local/node-v0.6.19/bin:$PATH</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install socket.io -g
</span><span class='line'>npm install express@2.5.10 -g
</span><span class='line'>npm install ejs -g
</span><span class='line'>npm install http-proxy -g</span></code></pre></td></tr></table></div></figure>


<p>なお、モジュールをグルーバルにインストールしているのは<a href="https://github.com/hnakamur/node-http-proxy-websocket-sample">hnakamur/node-http-proxy-websocket-sample</a>にモジュールを含めたくないからで、実際はローカルにインストールしても構いません。</p>

<h3>サーバ起動</h3>

<p>私の環境では/usr/local/node-v0.6.19にnode.jsをインストールしているのでNODE_PATHを通してから実行します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export NODE_PATH=/usr/local/node-v0.6.19/lib/node_modules</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>node VHost1App/app &
</span><span class='line'>node VHost2App/app &
</span><span class='line'>node proxy-vhost &</span></code></pre></td></tr></table></div></figure>


<h3>ローカルマシンの/etc/hostsに以下のエントリ追加</h3>

<p>IPアドレスは実際のサーバに合わせて変更してください。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>192.0.2.2 vhost1.example.com vhost2.example.com</span></code></pre></td></tr></table></div></figure>


<h3>ブラウザでアクセス</h3>

<p><a href="https://vhost1.example.com/">https://vhost1.example.com/</a>
や
<a href="https://vhost2.example.com/">https://vhost2.example.com/</a>
にアクセスします。自己証明書なのでエラーになりますが受け入れて進んでください。
バーチャルホスト毎にそれぞれ内容が異なることを確認します。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[パスフレーズ無しの秘密鍵と自己証明書をコマンド一発で作る]]></title>
    <link href="http://hnakamur.github.io/blog/2012/06/21/how-to-create-self-signed-certificate/"/>
    <updated>2012-06-21T20:06:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2012/06/21/how-to-create-self-signed-certificate</id>
    <content type="html"><![CDATA[<p>以下はワイルドカード証明書の例です。適宜変更して使います。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>openssl req -new -newkey rsa:2048 -x509 -nodes -days 365 -set_serial 0 \
</span><span class='line'>  -subj '/C=JP/ST=Kanagawa/L=Yokohama City/CN=*.example.com' \
</span><span class='line'>  -out wildcard.example.com.crt -keyout wildcard.example.com.key</span></code></pre></td></tr></table></div></figure>


<h2>証明書の内容確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># openssl x509 -in wildcard.example.com.crt -text
</span><span class='line'>Certificate:
</span><span class='line'>    Data:
</span><span class='line'>        Version: 3 (0x2)
</span><span class='line'>        Serial Number: 0 (0x0)
</span><span class='line'>        Signature Algorithm: sha1WithRSAEncryption
</span><span class='line'>        Issuer: C=JP, ST=Kanagawa, L=Yokohama City, CN=*.example.com
</span><span class='line'>        Validity
</span><span class='line'>            Not Before: Jun 21 10:52:07 2012 GMT
</span><span class='line'>            Not After : Jun 21 10:52:07 2013 GMT
</span><span class='line'>        Subject: C=JP, ST=Kanagawa, L=Yokohama City, CN=*.example.com
</span><span class='line'>        Subject Public Key Info:
</span><span class='line'>            Public Key Algorithm: rsaEncryption
</span><span class='line'>                Public-Key: (512 bit)
</span><span class='line'>                Modulus:
</span><span class='line'>                    00:ba:ce:42:5a:26:10:97:8a:fa:e8:44:b6:d0:1a:
</span><span class='line'>                    3c:4e:f6:80:7b:69:df:a7:cf:c1:64:26:79:0c:5e:
</span><span class='line'>                    c9:2f:ba:03:08:d2:14:f8:f0:df:f6:bf:49:79:1e:
</span><span class='line'>                    ec:6f:1b:04:79:65:c1:ba:14:7f:40:f7:52:bb:b8:
</span><span class='line'>                    7d:f0:aa:fc:8d
</span><span class='line'>                Exponent: 65537 (0x10001)
</span><span class='line'>        X509v3 extensions:
</span><span class='line'>            X509v3 Subject Key Identifier: 
</span><span class='line'>                49:83:EC:88:55:ED:E3:1E:61:E9:12:B6:52:9E:63:6F:D9:03:88:41
</span><span class='line'>            X509v3 Authority Key Identifier: 
</span><span class='line'>                keyid:49:83:EC:88:55:ED:E3:1E:61:E9:12:B6:52:9E:63:6F:D9:03:88:41
</span><span class='line'>
</span><span class='line'>            X509v3 Basic Constraints: 
</span><span class='line'>                CA:TRUE
</span><span class='line'>    Signature Algorithm: sha1WithRSAEncryption
</span><span class='line'>        b9:92:5a:89:1e:9c:dc:fc:44:d3:55:10:06:af:43:e8:0d:30:
</span><span class='line'>        4f:03:6c:10:c9:8e:68:16:28:7a:4c:a7:28:e8:73:04:c0:1b:
</span><span class='line'>        ce:bd:82:e7:8f:d4:b9:0f:00:32:47:5a:d1:3e:65:01:3c:a9:
</span><span class='line'>        23:e8:07:e0:03:48:24:dd:53:7c
</span><span class='line'>-----BEGIN CERTIFICATE-----
</span><span class='line'>MIIB3TCCAYegAwIBAgIBADANBgkqhkiG9w0BAQUFADBOMQswCQYDVQQGEwJKUDER
</span><span class='line'>MA8GA1UECAwIS2FuYWdhd2ExFjAUBgNVBAcMDVlva29oYW1hIENpdHkxFDASBgNV
</span><span class='line'>BAMMCyoubmFydWgubmV0MB4XDTEyMDYyMTEwNTIwN1oXDTEzMDYyMTEwNTIwN1ow
</span><span class='line'>TjELMAkGA1UEBhMCSlAxETAPBgNVBAgMCEthbmFnYXdhMRYwFAYDVQQHDA1Zb2tv
</span><span class='line'>aGFtYSBDaXR5MRQwEgYDVQQDDAsqLm5hcnVoLm5ldDBcMA0GCSqGSIb3DQEBAQUA
</span><span class='line'>A0sAMEgCQQC6zkJaJhCXivroRLbQGjxO9oB7ad+nz8FkJnkMXskvugMI0hT48N/2
</span><span class='line'>v0l5HuxvGwR5ZcG6FH9A91K7uH3wqvyNAgMBAAGjUDBOMB0GA1UdDgQWBBRJg+yI
</span><span class='line'>Ve3jHmHpErZSnmNv2QOIQTAfBgNVHSMEGDAWgBRJg+yIVe3jHmHpErZSnmNv2QOI
</span><span class='line'>QTAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA0EAuZJaiR6c3PxE01UQBq9D
</span><span class='line'>6A0wTwNsEMmOaBYoekynKOhzBMAbzr2C54/UuQ8AMkda0T5lATypI+gH4ANIJN1T
</span><span class='line'>fA==
</span><span class='line'>-----END CERTIFICATE-----</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<ul>
<li><a href="http://gagravarr.org/writing/openssl-certs/ca.shtml">Certificate Management and Generation with OpenSSL</a></li>
<li><a href="http://www.nina.jp/server/slackware/openssl/openssl-command.html">openssl コマンド</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[daemontoolsの使い方]]></title>
    <link href="http://hnakamur.github.io/blog/2012/06/21/how-to-use-daemontools/"/>
    <updated>2012-06-21T17:48:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2012/06/21/how-to-use-daemontools</id>
    <content type="html"><![CDATA[<p><a href="http://www.nslabs.jp/daemontools.rhtml">daemontoolsを使う | Netsphere Laboratories</a>を参考にしました。ありがとうございます。</p>

<h2>私的ルール</h2>

<h3>無効化したサービスは/service/.disabled/に移動</h3>

<p>/service/以下に.で始まるフォルダ名にすると無視されるということですが、my_service_nameを.my_service_nameと変えるのはタイプが面倒なので、/service/.disabledというフォルダを作って無効化するときはその下に移動することにしました。</p>

<h3>作業するときは/serviceに移動</h3>

<p>svcやsvstatにフルパスを指定しても動くのですが、/service/と/service/.disabled間で移動するときにタイプ量が増えるので、最初にcd /serviceしてから作業することにしました。</p>

<h2>手順</h2>

<h3>サービス追加</h3>

<p>node-virtualhost1.example.comという名前でサービスを追加する例。
exec -cの後はサービスに応じて変更します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /service
</span><span class='line'>mkdir -p .disabled/node-virtualhost1.example.com
</span><span class='line'>cat &lt;&lt;EOF &gt; .disabled/node-virtualhost1.example.com/run
</span><span class='line'>#!/bin/sh
</span><span class='line'>exec -c /usr/local/node-v0.6.19/bin/node /var/www/app/virtualhost1.example.com/hello.js
</span><span class='line'>EOF
</span><span class='line'>chmod 755 .disabled/node-virtualhost1.example.com/run</span></code></pre></td></tr></table></div></figure>


<h3>サービス有効化</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /service
</span><span class='line'>mv .disabled/node-virtualhost1.example.com .</span></code></pre></td></tr></table></div></figure>


<h4>状態確認</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># svstat node-virtualhost1.example.com/
</span><span class='line'>node-virtualhost1.example.com/: up (pid 1493) 3 seconds</span></code></pre></td></tr></table></div></figure>


<h3>サービス無効化</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /service
</span><span class='line'>mv node-virtualhost1.example.com .disabled/
</span><span class='line'>svc -tx .disabled/node-virtualhost1.example.com</span></code></pre></td></tr></table></div></figure>


<h4>状態確認</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># svstat .disabled/node-virtualhost1.example.com/
</span><span class='line'>.disabled/node-virtualhost1.example.com/: supervise not running</span></code></pre></td></tr></table></div></figure>


<h3>サービス一時停止(Down)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /service
</span><span class='line'>svc -d node-virtualhost1.example.com</span></code></pre></td></tr></table></div></figure>


<h4>状態確認</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># svstat node-virtualhost1.example.com/
</span><span class='line'>node-virtualhost1.example.com/: down 1 seconds, normally up</span></code></pre></td></tr></table></div></figure>


<h3>サービス一時停止からの再開(Up)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /service
</span><span class='line'>svc -u node-virtualhost1.example.com</span></code></pre></td></tr></table></div></figure>


<h4>状態確認</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># svstat node-virtualhost1.example.com/
</span><span class='line'>node-virtualhost1.example.com/: up (pid 1512) 1 seconds</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[daemontoolsのインストール手順]]></title>
    <link href="http://hnakamur.github.io/blog/2012/06/21/how-to-install-daemontools/"/>
    <updated>2012-06-21T17:36:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2012/06/21/how-to-install-daemontools</id>
    <content type="html"><![CDATA[<p>CentOS6.2で確認。</p>

<p>OS起動時にdaemontoolsを起動する設定は<a href="http://cr.yp.to/daemontools/start.html">How to start daemontools</a>を参照。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install -y make gcc rpm-build &&
</span><span class='line'>rpm -ivh http://mirrors.qmailtoaster.com/daemontools-toaster-0.76-1.3.6.src.rpm &&
</span><span class='line'>rpmbuild -ba /root/rpmbuild/SPECS/daemontools-toaster.spec &&
</span><span class='line'>rpm -ivh /root/rpmbuild/RPMS/x86_64/daemontools-toaster-0.76-1.3.6.x86_64.rpm &&
</span><span class='line'>cat &gt; /etc/init/svscan.conf &lt;&lt;EOF &&
</span><span class='line'>start on runlevel [12345]
</span><span class='line'>stop on runlevel [^12345]
</span><span class='line'>respawn
</span><span class='line'>exec /command/svscanboot
</span><span class='line'>EOF
</span><span class='line'>/command/svscanboot &</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS6でchef-soloとknife-soloをセットアップ]]></title>
    <link href="http://hnakamur.github.io/blog/2012/05/04/setup-chef-solo-and-knife-solo-on-centos6/"/>
    <updated>2012-05-04T15:03:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2012/05/04/setup-chef-solo-and-knife-solo-on-centos6</id>
    <content type="html"><![CDATA[<h2>なぜ？</h2>

<p><a href="http://higelog.brassworks.jp/?p=654">chef-soloで作業環境構築の自動化 | ひげろぐ</a> を参考に、Chefサーバは使いたくないけど、chef-soloとknifeを使いたい！
ということで、そういう環境を作るためのスクリプトを作りました。
だいぶ前から試行錯誤してたけど、ようやくできたので公開。</p>

<h2>セットアップスクリプト</h2>

<p>chef-soloやknifeはrootユーザで実行する想定です。</p>

<p>このスクリプトではruby、rubygems、ruby-devel、make、gccをyumで、
chefとknife-soloをgemでインストールします。</p>

<p>chef-soloやknife実行時にオプションをなるべく指定不要にするため、設定ファイルはデフォルトの場所に配置しています。</p>

<ul>
<li>/etc/chef/solo.rb</li>
<li>/root/.chef/knife.rb</li>
</ul>


<p>その他の詳細は
<a href="https://github.com/hnakamur/setup_linux/blob/master/centos6/install_chef-solo.sh">install_chef-solo.sh</a>
を参照してください。</p>

<p>ちょっと注意が必要なのは、shのヒアドキュメントで<code>`hostname`</code>が展開されるのを避けるために、<code>\`hostname\`</code>とエスケープしていることです。
＃余談ですが、markdownだとバックスラッシュやバックティックはエスケープしないといけないんですね。</p>

<p>knife.rbの設定は
<a href="https://gist.github.com/1039666">Base &ldquo;knife&rdquo; configuration for a standard chef-solo setup — Gist</a> を書き換えて作りました。が、まだよく理解していません。</p>

<h2>セットアップ手順</h2>

<p>特に設定変更が不要であれば</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl https://raw.github.com/hnakamur/setup_linux/master/centos6/install_chef-solo.sh | sudo sh</span></code></pre></td></tr></table></div></figure>


<p>でセットアップできます。変更したい場合はとってきて書き換えてから実行してください。</p>

<h2>クックブック作成例</h2>

<p>例えば</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife cookbook create ntp</span></code></pre></td></tr></table></div></figure>


<p>と実行すると、/etc/chef/site-cookbooks/ntp/ 以下にフォルダ構成とファイルが作られます。あとは編集して作ります。</p>

<h2>実行例</h2>

<p>/root/.chef/chef.json</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "run_list":["recipe[ntp]"]
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>というファイルを用意して</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo chef-solo -j /root/.chef/chef.json</span></code></pre></td></tr></table></div></figure>


<p>で実行します。</p>

<h2>私のスタンス</h2>

<p>minimalistな私は正直 <a href="http://wiki.opscode.com/display/chef/Home">Chef</a> はそんなに好きじゃないです。</p>

<p><a href="http://wiki.opscode.com/display/chef/Architecture">Architecture</a> を見ると、CouchDB, Solr, RabbitMQ が必要って、高々サーバをセットアップするのになんでこんなにいろいろ稼働させる必要があるの？って感じてしまいます。セットアップ手順が自動化されたとしても、自分のマシンでそれだけのサーバが動いているのがもったいない、無駄にマシンリソースを消費してエコじゃない、と思います。</p>

<p>そもそも私がやるような3台構成ぐらいの環境構築にそこまで大掛かりな仕組みはいらないというのもありますし。</p>

<p><a href="http://rexify.org/">&reg;?ex - A simple framework to simplify systemadministration</a> はsshの鍵認証またはパスワード認証で接続してリモートで処理を実行できるのでこちらのほうが好きです。リモートマシンのセットアップにsshサーバ以外に何か必要というのは、なんか違う気がするんですよね。</p>

<p>それからクックブック1つに対して、フォルダやファイルがたくさんできるのもあまり好きじゃないです。設定管理ツールじゃなくてパッケージ管理ツールですけどHomebrewはFormulaが1つのrubyスクリプトでこれは非常に編集が楽なんです。RexはRexfileにテンプレートファイルを含めることも可能なので</p>

<p>あと処理を手続き的に記述するではなく、最終的な状態を宣言的に記述するというスタイルですが、これも限定的だと思っています。結局のところ、複雑な処理だと処理順序も関係するので、やらせたいことを手続き的にかける方がストレートなのかなと。実行する必要があるかチェックする処理を最初に入れて、それを含めた一連の処理を一つのコマンドとして提供すれば、利用側のコードはシンプルになるのでそれで十分だと思います。</p>

<p>あと、実行対象の処理をJSONファイルに書いて、ファイル名を引数で指定して実行ってのもイケてない。rakeやRexのようにタスクを引数に指定させて欲しいです。</p>

<p>と文句ばかり言っているようですが、DevOpsを提唱したopscode.comが出しているツールだし、一度は使ってみるべきということで。あと、まわりでも使っているので、ツールは揃えておいたほうが良いかなという思いもあります。私自身はいいのですが、まわりで使わされる人が何種類も覚えることを強要されるのは無駄だろうし。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[/etc/sudoers.d/を使う→やっぱり止め]]></title>
    <link href="http://hnakamur.github.io/blog/2012/05/04/use-slash-etc-slash-sudoers-dot-d-slash/"/>
    <updated>2012-05-04T11:16:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2012/05/04/use-slash-etc-slash-sudoers-dot-d-slash</id>
    <content type="html"><![CDATA[<p>これまでいつも/etc/sudoersを編集していたのですが、よくみるとファイル末尾に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)
</span><span class='line'>#includedir /etc/sudoers.d</span></code></pre></td></tr></table></div></figure>


<p>と書いてあって、/etc/sudoers.d/にファイルを置けば/etc/sudoersを編集しなくても済むんですね。（しかしなんでincludedirには#をつける仕様なんだろ。今までずっとコメントアウトされていると思ってました。その上のコメント行に#ついててもコメントじゃないと書いてあるのに気づいたのが今日です）</p>

<p>/etc/sudoers.d/hnakamur を</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Defaults:hnakamur !requiretty
</span><span class='line'>hnakamur ALL=(ALL)      NOPASSWD: ALL</span></code></pre></td></tr></table></div></figure>


<p>として試してみました。</p>

<p>sudoすると</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo: /etc/sudoers.d/hnakamur is mode 0644, should be 0440</span></code></pre></td></tr></table></div></figure>


<p>というエラー。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod 0440 /etc/sudoers.d/hnakamur</span></code></pre></td></tr></table></div></figure>


<p>して再度試すとOKでした。</p>

<p>visudoではこのファイルは編集対象ではないので、複数人で同時に編集しないよう連絡しあうなどの運用が別途必要です。このせいでみんな使ってないんだろうか？</p>

<h2>/etc/sudoers.d/* の罠にはまった</h2>

<p>(2012-05-05 追記)</p>

<p>使うべきでない理由がわかりました！</p>

<p>/etc/sudoers.d/*のファイルで文法エラーのまま保存してしまうと、次にsudoを実行した時に以下の様なエラーが出ました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo -s
</span><span class='line'>&gt;&gt;&gt; /etc/sudoers.d/hnakamur: syntax error near line 2 &lt;&lt;&lt;
</span><span class='line'>sudo: parse error in /etc/sudoers.d/hnakamur near line 2
</span><span class='line'>sudo: no valid sudoers sources found, quitting</span></code></pre></td></tr></table></div></figure>


<p>こうなるとsu -でrootになるしかないです。/etc/sudoers.d/*を使わずvisudoで編集する場合は、保存時に文法エラーがある場合は抜けずに再編集が可能なので安全です。</p>

<h2>visudoを使えば/etc/sudoers.d/* でも大丈夫</h2>

<p>(2012-05-05 追記)</p>

<p>さらに追記。visudoは/etc/sudoers.d/*に文法がエラーがある場合も抜ける前にプロンプトが出ました。人手で編集するときは必ずvisudoを使うよう肝に銘じます。</p>

<h2>/etc/sudoers.d/* だとvisudoでもダメなパターンがありました</h2>

<p>(2012-05-05 追記)</p>

<p>さらに追記。
visudoで起動して:e /etc/sudoers.d/hnakamurと切り替えて編集して:wqで保存して抜けると、文法エラーがあってもスルーしてしまいました。rootでもう一度起動して何も変更せずに:qで終わると文法エラーに反応してくれるのですが。</p>

<p>ということで、結論としては/etc/sudoers.d/*は私は使わないことにしました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lua, V8, ruby, mrubyでfib(39)の実行時間比較 2013-03-12版]]></title>
    <link href="http://hnakamur.github.io/blog/2012/05/04/fib-39-benchmark-in-lua/"/>
    <updated>2012-05-04T11:06:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2012/05/04/fib-39-benchmark-in-lua</id>
    <content type="html"><![CDATA[<p>2013-03-13追記</p>

<p>この記事が<a href="https://twitter.com/yukihiro_matz">@matz</a>さんにツイートされたのを受けて、各処理系の最新版で再度試してみました。
<a href="http://hnakamur.github.com/blog/2013/03/12/fib-39-benchmark-in-luajit/">lua, V8, ruby, mrubyでfib(39)の実行時間比較 2013-03-12版</a>をご参照ください。</p>

<hr>


<p><a href="http://www.quredo.net/2012/04/mruby-%E8%BB%BD%E9%87%8Fruby-%E3%82%BD%E3%83%BC%E3%82%B9%E5%85%AC%E9%96%8B/">mruby (軽量ruby) ソース公開 | quredo-style</a>を見て、自分の環境でlua, luajit, V8, ruby, mrubyで試してみた。</p>

<p>テスト環境</p>

<ul>
<li>Model: MacBook Air 13-inch, Mid 2011</li>
<li>CPU: 1.7GHz Intel Core i5</li>
<li>RAM: 4GB 1333MHz DDR3</li>
<li>OS: Mac OS X Lion 10.7.3</li>
</ul>


<h2>lua</h2>

<p>fib.lua</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function fib(n)
</span><span class='line'>  if n &lt; 2 then
</span><span class='line'>    return n
</span><span class='line'>  end
</span><span class='line'>  return fib(n-2) + fib(n-1)
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>print(fib(39))</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ lua -v
</span><span class='line'>Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
</span><span class='line'>$ time lua fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m21.368s
</span><span class='line'>user  0m21.345s
</span><span class='line'>sys   0m0.016s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./lua -v
</span><span class='line'>Lua 5.2.0  Copyright (C) 1994-2011 Lua.org, PUC-Rio
</span><span class='line'>$ time ./lua fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m19.603s
</span><span class='line'>user  0m19.585s
</span><span class='line'>sys   0m0.012s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./luajit -v
</span><span class='line'>Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio
</span><span class='line'>LuaJIT 1.1.8  Copyright (C) 2005-2012 Mike Pall, http://luajit.org/
</span><span class='line'>$ time ./luajit fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m4.302s
</span><span class='line'>user  0m4.292s
</span><span class='line'>sys   0m0.006s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ luajit -v
</span><span class='line'>LuaJIT 2.0.0-beta9 -- Copyright (C) 2005-2011 Mike Pall. http://luajit.org/
</span><span class='line'>$ time luajit fib.lua
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m1.299s
</span><span class='line'>user  0m1.289s
</span><span class='line'>sys   0m0.004s</span></code></pre></td></tr></table></div></figure>


<h2>V8</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function fib(n) {
</span><span class='line'>  if (n &lt; 2) return n;
</span><span class='line'>  return fib(n-2) + fib(n-1);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>print(fib(39));</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ v8
</span><span class='line'>V8 version 3.9.24 [sample shell]
</span><span class='line'>&gt; quit()
</span><span class='line'>$ time v8 fib.js
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m1.417s
</span><span class='line'>user  0m1.407s
</span><span class='line'>sys   0m0.013s</span></code></pre></td></tr></table></div></figure>


<h2>ruby</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def fib n
</span><span class='line'>  return n if n &lt; 2
</span><span class='line'>  fib(n-2) + fib(n-1)
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>puts fib(39)</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.8.7-p358 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  1m47.227s
</span><span class='line'>user  1m46.945s
</span><span class='line'>sys   0m0.132s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv version
</span><span class='line'>1.9.3-p125 (set by /Users/hnakamur/.rbenv/version)
</span><span class='line'>$ time ruby fib.rb
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m16.504s
</span><span class='line'>user  0m16.374s
</span><span class='line'>sys   0m0.051s</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ time bin/mruby fib.rb 
</span><span class='line'>63245986
</span><span class='line'>
</span><span class='line'>real  0m35.465s
</span><span class='line'>user  0m35.423s
</span><span class='line'>sys   0m0.014s</span></code></pre></td></tr></table></div></figure>


<p>[2012-05-03 23:21]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 4.3.1のファイルテンプレートをカスタマイズ]]></title>
    <link href="http://hnakamur.github.io/blog/2012/03/11/custom-file-template-for-xcode-4-dot-3-1/"/>
    <updated>2012-03-11T20:22:00+09:00</updated>
    <id>http://hnakamur.github.io/blog/2012/03/11/custom-file-template-for-xcode-4-dot-3-1</id>
    <content type="html"><![CDATA[<p><a href="http://meandmark.com/blog/2011/11/creating-custom-xcode-4-file-templates/">Creating Custom Xcode 4 File Templates</a>を参考に作成してみました。</p>

<p>Apple提供のファイルテンプレートは
/Developer/Platforms/iPhoneOS.platform/Developer/Library/Xcode/Templates/File Templates
にあるとのこと。ですが、Xcode 4.3.1からは/Developperではなく/Applications/Xcodeにインストールされるので、Xcode 4.3.1のみの環境ではここにはないかもしれません。</p>

<p>私は<a href="https://github.com/MacRuby/MacRuby">MacRubyのgithubレポジトリ</a>をクローンして、misc/xcode4-templates/File Templates/Ruby/Ruby File.xctemplate/ をコピーして書き換えてカスタマイズしました。</p>

<p>コピー先は
/Users/ユーザ名/Library/Developer/Xcode/Templates/File Templates/グループ名/ファイルタイプ.xctemplate/
です。</p>

<p>コピー後Xcodeを再起動すると認識されました。</p>

<p>なお、オリジナルと同じグループ名とファイルタイプにすると、同じ名前のものが2つ並んで紛らわしい状態になります。ですので、違う名前にしたほうが良いです。</p>
]]></content>
  </entry>
  
</feed>
